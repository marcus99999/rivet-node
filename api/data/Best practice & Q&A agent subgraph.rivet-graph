version: 4
data:
  metadata:
    description: ""
    id: 8fhBx64QGpVrIT6XqLMrt
    name: Best practice & Q&A agent subgraph
  nodes:
    '[-HvpH3_vlr-lQwwFbODFe]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
        useBodyInput: true
        useHeadersInput: false
      visualData: 2665.1688890140613/301.71921584920767/280/706/var(--node-color-4)/var(--node-color-4)
    '[-kgpH0TBjFvfM8H9c9N-8]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" HybVWMkqapLqooQgmPjod/req_body
      visualData: 2236.8265907068476/1485.2011964515843/280/700//
    '[13v9N8-2DJPyW49hS2VoA]:text "Text"':
      data:
        text: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases/{{input}}
      outgoingConnections:
        - output->"Http Call" YZOnh6Zi3wvWalIdNveIB/url
      visualData: 890.3933036469409/1650.100382458886/330/776//
    '[2-1stJD-1ZlJeod6DgIgb]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
        useBodyInput: true
        useHeadersInput: false
      visualData: 2659.6253971712263/-560.093298304731/280/708/var(--node-color-4)/var(--node-color-4)
    '[5Hx49_3tx7vg11u5zDxnB]:subGraph "Subgraph"':
      data:
        graphId: zYlQ2Xk75J--kr6X__Awr
        useAsGraphPartialOutput: false
        useErrorOutput: false
      description: Q&A agent
      outgoingConnections:
        - output->"Text" 5LkY8Mu_v0tqj2jV-I95I/input
      visualData: 1339.2994916524865/718.5724313971923/330/638/var(--node-color-1)/var(--node-color-1)
    '[5LkY8Mu_v0tqj2jV-I95I]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "crisis": "{{documentId}}",
              {{input}},
              "severity": "High"
            },
            "meta": {}
          }
      outgoingConnections:
        - output->"Extract JSON" wOjyfm5GpYlcB2L_GOh87/input
      visualData: 1825.8557784704903/662.20854467958/330/695//
    '[9uM1rtiITUgpEN3PYTfKu]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
        useBodyInput: true
        useHeadersInput: false
      visualData: 2659.2746351601027/-134.1255650802779/280/707/var(--node-color-4)/var(--node-color-4)
    '[Et3sjdxYDIfmMn_vmhBMN]:subGraph "Subgraph"':
      data:
        graphId: zYlQ2Xk75J--kr6X__Awr
        useAsGraphPartialOutput: false
        useErrorOutput: false
      description: Q&A agent
      outgoingConnections:
        - output->"Text" c1Jqgt3-BvfFcKroOhntB/input
      visualData: 1349.3445983517227/1118.572431397192/330/640/var(--node-color-1)/var(--node-color-1)
    '[GywnVm1WCbBf0jZjzRtUx]:subGraph "Subgraph"':
      data:
        graphId: WoecD9--01VjQHhXTmwtU
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Subgraph" h5k-44eeEQKUVT6CVVEBp/input
        - output->"Subgraph" tStPSxD7oOqaWyMgw629d/input
        - output->"Text" XopQYLGFUzhQeyHRRNB9H/history
      visualData: 958.1970673093098/166.49814452683142/330/803/var(--node-color-1)/var(--node-color-1)
    '[H3Fm81x8gTwGXYoLLSlLk]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "crisis": "{{documentId}}",
              {{input}},
              "severity": "High"
            },
            "meta": {}
          }
      outgoingConnections:
        - output->"Extract JSON" IqeXPetHyKTuaAAeoiCV8/input
      visualData: 1824.262105375531/992.889738466242/330/696//
    '[HybVWMkqapLqooQgmPjod]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
        useBodyInput: true
        useHeadersInput: false
      visualData: 2658.4762302885465/1576.9149367836696/280/703/var(--node-color-4)/var(--node-color-4)
    '[IdjcxcsH57ePL8QTaxYTq]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/input
      visualData: 1864.5930602535338/-664.1633253175522/230/713//
    '[IqeXPetHyKTuaAAeoiCV8]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" g8AEP8e2wMiSjZRoBEebV/req_body
      visualData: 2240.013936896766/1154.5200026649222/280/699//
    '[KFPyBIeoLBVpJIpgIa7Ne]:graphInput "Graph Input"':
      data:
        dataType: object
        id: input
        useDefaultValueInput: false
      outgoingConnections:
        - data->"Destructure" WnXhs0d1-hpjlGoOM8hev/object
      visualData: -54.16591529002161/-37.33217977118733/330/705/var(--node-color-3)/var(--node-color-3)
    '[Mg6ZLUBWi6ag8PVP4dXDa]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 638.043773157
        text: |
          Send the history of the edit
      visualData: 207.25946391472314/1491.3089814557557/1427.2651592032175/778//
    '[Tzw1BEigHvrxiJG6Imitg]:subGraph "Subgraph"':
      data:
        graphId: WoecD9--01VjQHhXTmwtU
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Subgraph" 5Hx49_3tx7vg11u5zDxnB/input
        - output->"Subgraph" c6VmUtT-Bl0ln6nQeSF58/input
        - output->"Text" d0PAVTcOCZeb0W8Lh-Cf7/history
      visualData: 972.7210656439721/-120.16410595381419/330/802/var(--node-color-1)/var(--node-color-1)
    '[WOolU6oaL7Oiht_zsJrpo]:subGraph "Subgraph"':
      data:
        graphId: WoecD9--01VjQHhXTmwtU
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Subgraph" Et3sjdxYDIfmMn_vmhBMN/input
        - output->"Subgraph" pD3wbiydyGyxym3x2prhl/input
        - output->"Text" j_w4n98HL-0NqWvq9nBt9/history
      visualData: 963.6444629165164/405.9164609880693/330/804/var(--node-color-1)/var(--node-color-1)
    '[WnXhs0d1-hpjlGoOM8hev]:destructure "Destructure"':
      data:
        paths:
          - $.high
          - $.medium
          - $.low
          - $.documentId
      outgoingConnections:
        - match_0->"Subgraph" Tzw1BEigHvrxiJG6Imitg/input
        - match_1->"Subgraph" GywnVm1WCbBf0jZjzRtUx/input
        - match_2->"Subgraph" WOolU6oaL7Oiht_zsJrpo/input
        - match_3->"Text" 13v9N8-2DJPyW49hS2VoA/input
        - match_3->"Text" 5LkY8Mu_v0tqj2jV-I95I/documentId
        - match_3->"Text" H3Fm81x8gTwGXYoLLSlLk/documentId
        - match_3->"Text" XopQYLGFUzhQeyHRRNB9H/documentId
        - match_3->"Text" c1Jqgt3-BvfFcKroOhntB/documentId
        - match_3->"Text" d0PAVTcOCZeb0W8Lh-Cf7/documentId
        - match_3->"Text" j_w4n98HL-0NqWvq9nBt9/documentId
      visualData: 356.2879017266414/-22.51931906114679/280/593//
    '[XopQYLGFUzhQeyHRRNB9H]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Medium",
              "crisis": "{{documentId}}",
              "history": {{history}}
            }
          }
      outgoingConnections:
        - output->"Http Call" 9uM1rtiITUgpEN3PYTfKu/req_body
      visualData: 2239.468833148886/-270.83006668787687/330/711//
    '[YZOnh6Zi3wvWalIdNveIB]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: PUT
        text: ""
        url: ""
        useBodyInput: true
        useHeadersInput: false
        useUrlInput: true
      visualData: 1270.5044537526276/1654.8125041544115/280/776/var(--node-color-4)/var(--node-color-4)
    '[c1Jqgt3-BvfFcKroOhntB]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "crisis": "{{documentId}}",
              {{input}},
              "severity": "High"
            },
            "meta": {}
          }
      outgoingConnections:
        - output->"Extract JSON" -kgpH0TBjFvfM8H9c9N-8/input
      visualData: 1814.7000668057754/1315.6025667781075/330/697//
    '[c6VmUtT-Bl0ln6nQeSF58]:subGraph "Subgraph"':
      data:
        graphId: l_qOMNG_p0UM3yOSO2O29
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Code" IdjcxcsH57ePL8QTaxYTq/input1
      visualData: 1345.015819584239/-122.87414234134567/330/801/var(--node-color-1)/var(--node-color-1)
    '[cC_XKF4Gxqp9WQfyS9sPz]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" XopQYLGFUzhQeyHRRNB9H/input
      visualData: 1859.7540258617169/-249.69920264851947/230/714//
    '[d0PAVTcOCZeb0W8Lh-Cf7]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "High",
              "crisis": "{{documentId}}",
              "history": {{history}}
            }
          }
      outgoingConnections:
        - output->"Http Call" 2-1stJD-1ZlJeod6DgIgb/req_body
      visualData: 2236.7281359333174/-631.2169212975992/330/712//
    '[d2ngvaOMizgfgPCRbP-DP]:comment "Comment"':
      data:
        backgroundColor: rgba(218,5,5,0.05)
        color: rgba(197,6,6,1)
        height: 1339.6707916737555
        text: ONLY PASSES 2 HISTORIES RATHER THAN 3
      visualData: 2226.2159255840575/-733.2446402068692/365.3843412952074/812//
    '[g8AEP8e2wMiSjZRoBEebV]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
        useBodyInput: true
        useHeadersInput: false
      visualData: 2660.742796618197/1162.0973845352337/280/702/var(--node-color-4)/var(--node-color-4)
    '[h5k-44eeEQKUVT6CVVEBp]:subGraph "Subgraph"':
      data:
        graphId: zYlQ2Xk75J--kr6X__Awr
        useAsGraphPartialOutput: false
        useErrorOutput: false
      description: Q&A agent
      outgoingConnections:
        - output->"Text" H3Fm81x8gTwGXYoLLSlLk/input
      visualData: 1339.2994916524865/916.563410057345/330/639/var(--node-color-1)/var(--node-color-1)
    '[jAYCzFIZlQio_0I1AacdY]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" j_w4n98HL-0NqWvq9nBt9/input
      visualData: 1870.2154781957868/167.7526994777018/230/779//
    '[j_w4n98HL-0NqWvq9nBt9]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Low",
              "crisis": "{{documentId}}",
              "history": {{history}}
            }
          }
      outgoingConnections:
        - output->"Http Call" -HvpH3_vlr-lQwwFbODFe/req_body
      visualData: 2228.5689669846574/293.34617532780027/330/710//
    '[khiwBEZ1TBidGeoldXUHD]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
        useBodyInput: true
        useHeadersInput: false
      visualData: 2666.486819983974/750.3661896799075/280/701/var(--node-color-4)/var(--node-color-4)
    '[pD3wbiydyGyxym3x2prhl]:subGraph "Subgraph"':
      data:
        graphId: l_qOMNG_p0UM3yOSO2O29
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Code" jAYCzFIZlQio_0I1AacdY/input1
      visualData: 1333.3202668490103/408.7008259299746/330/805/var(--node-color-1)/var(--node-color-1)
    '[tStPSxD7oOqaWyMgw629d]:subGraph "Subgraph"':
      data:
        graphId: l_qOMNG_p0UM3yOSO2O29
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Code" cC_XKF4Gxqp9WQfyS9sPz/input1
      visualData: 1326.0105463894924/170.6902795404821/330/800/var(--node-color-1)/var(--node-color-1)
    '[wOjyfm5GpYlcB2L_GOh87]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" khiwBEZ1TBidGeoldXUHD/req_body
      visualData: 2247.9823023715626/862.086963157283/280/698//
