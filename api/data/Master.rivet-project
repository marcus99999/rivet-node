version: 4
data:
  attachedData:
    trivet:
      testSuites: []
      version: 1
  graphs:
    -k1Yw6ilmLqv5MnUb-ujk:
      metadata:
        description: ""
        id: -k1Yw6ilmLqv5MnUb-ujk
        name: Data ingestion subgraph
      nodes:
        '[9aFXJRQ7D8qaMsmWgCWhr]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1261/653/330/420//
        '[H-caOMxx1_MX6rTVoj6yD]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/
          outgoingConnections:
            - json->"Destructure" WaNviajSXdkAT8o19Xfuu/object
          visualData: 315/276/280/421/var(--node-color-4)/var(--node-color-4)
        '[SzxZpbWd0MigBpUt8AOa3]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1261/453/330/420//
        '[WaNviajSXdkAT8o19Xfuu]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].title
              - $.data[0].description
              - $.data[0].location
              - $.data[0].company
              - $.data[0].date
              - $.data[0].severity
              - $.data[0].product
          outgoingConnections:
            - match_0->"Text" mThdj06olWt7pC4g-ihq6/input
            - match_1->"Text" SzxZpbWd0MigBpUt8AOa3/input
            - match_3->"Text" 9aFXJRQ7D8qaMsmWgCWhr/input
          visualData: 716/352/280/422//
        '[mThdj06olWt7pC4g-ihq6]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1261/253/330/420//
    3soSwiUKQ_X4fGdokyxAH:
      metadata:
        description: ""
        id: 3soSwiUKQ_X4fGdokyxAH
        name: Rewrite subgraph
      nodes:
        '[3uWCPsym5lA_tSbQR8bCX]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "history": [
                  {
                    {{newJSON}}
                  },
                    {{originalJSON}}
                  ]
                }
              }
          outgoingConnections:
            - output->"Extract JSON" RLBF2blfneDpgAJzTpzjf/input
          visualData: 1449.1090185444375/1062.1963047209445/330/829//
        '[4IRH4YJ1BKdchejYhJkUO]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 2376.3742299771907/1041.061261418121/330/834/var(--node-color-3)/var(--node-color-3)
        '[4rTYTD_fZKqZrz-gXdQId]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 852.0196873576189/1125.88052749138/330/847//
        '[6nfmWOfUuvmxKv_aRlj3k]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" IeW5OiYv4h_tCjn3XT7LJ/input
            - response->"Text" 3uWCPsym5lA_tSbQR8bCX/newJSON
          visualData: 911.4331694633281/626.7246312924881/230/840//
        '[IeW5OiYv4h_tCjn3XT7LJ]:extractJson "Extract JSON"':
          visualData: 1315.3756166110195/499.3799727751199/280/838//
        '[P1r9iwgzkDm2OPRK2ilpS]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" tQGduqzWcgHz2MGHb4tU6/input
          visualData: 713.9477148740614/1429.7632496456758/330/849//
        '[RLBF2blfneDpgAJzTpzjf]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" 4IRH4YJ1BKdchejYhJkUO/value
          visualData: 1861.054080429073/1129.9133011951312/280/841//
        '[UIQtiQ7nK1T_wUjGMKQKA]:destructure "Destructure"':
          data:
            paths:
              - $.data.history[0].original
              - $.data.history
          outgoingConnections:
            - match_0->"Chat" 6nfmWOfUuvmxKv_aRlj3k/prompt
            - match_0->"Text" 4rTYTD_fZKqZrz-gXdQId/input
            - match_1->"Text" 3uWCPsym5lA_tSbQR8bCX/originalJSON
            - match_1->"Text" P1r9iwgzkDm2OPRK2ilpS/input
          visualData: 483.6194675083708/889.6990736422448/280/844//
        '[Xmbnoh9LlbLMA2d7kR3iV]:graphInput "Graph Input"':
          data:
            dataType: any
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" yZoOp6ik3X4HAKc_4WOzJ/input
          visualData: -272.92583538122926/716.0695657300618/330/839/var(--node-color-3)/var(--node-color-3)
        '[ah4enKZnetb-7VonC8qlx]:comment "Comment"':
          data:
            backgroundColor: rgba(218,4,4,0.05)
            color: rgba(154,2,2,1)
            height: 625.39387367782
            text: |-
              Combine into a larger JSON with previous outputs
              ONLY EVER COMBINING 2
              BECAUSE IT'S NOT REALLY PUSH / POPPING
          visualData: 1285.459610398486/901.3684380947511/981.2819192098432/823//
        '[bKoHjyTD-oOwlkBN5ksSL]:text "Text"':
          data:
            text: >-
              You are an agent who updates the content of a press releases if
              you believe it fails to meet best practice guidance.


              Best practice is defined as {{Bestpractice}}.


              You will be given a string of text and you will first analyse it to see how well it aligns to the best practice.


              If you believe it falls short of the direction and standards in the best practice then you will adjust the text in such a way that will better conform to the guidance.


              You should not rewrite the text entirely but just adjust or add small portions to make the text align better with the best practice guidance.


              You should also ensure that the updated text remains coherent.


              Use escaped line breaks when creating the copy in the format \n


              You will output the improved text.


              Additionally you will create a list of 3 bullet points that describe why it failed and 3 bullet points of how you have improved the text.


              Output the content in a string like this (don't convert to JSON):

                  "original": "The original text passed to you in the prompt",
                  "rewrite": "The updated, improved text",
                  "fails": "3 bullet points of why it failed",
                  "updates": "3 bullet points of how the text has been improved"
          outgoingConnections:
            - output->"Chat" 6nfmWOfUuvmxKv_aRlj3k/systemPrompt
          visualData: 467.3136351367133/175.93241167176447/330/569//
        '[lZUXWikwZ9xjE1pbYDB6g]:loadDataset "Load Dataset"':
          data:
            datasetId: xLJpaKaUKaZBupQgz34vW
          outgoingConnections:
            - dataset->"Text" bKoHjyTD-oOwlkBN5ksSL/Bestpractice
          visualData: 94.7476280850866/298.02005963527665/280/570//
        '[tQGduqzWcgHz2MGHb4tU6]:extractJson "Extract JSON"':
          visualData: 1184.707392484667/1687.3732155911807/280/null//
        '[yZoOp6ik3X4HAKc_4WOzJ]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" UIQtiQ7nK1T_wUjGMKQKA/object
          visualData: 112.96075778407457/1047.023070921221/280/842//
    8fhBx64QGpVrIT6XqLMrt:
      metadata:
        description: ""
        id: 8fhBx64QGpVrIT6XqLMrt
        name: Best practice & Q&A agent subgraph
      nodes:
        '[-HvpH3_vlr-lQwwFbODFe]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
            useBodyInput: true
            useHeadersInput: false
          visualData: 2665.1688890140613/301.71921584920767/280/706/var(--node-color-4)/var(--node-color-4)
        '[-kgpH0TBjFvfM8H9c9N-8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" HybVWMkqapLqooQgmPjod/req_body
          visualData: 2236.8265907068476/1485.2011964515843/280/700//
        '[13v9N8-2DJPyW49hS2VoA]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases/{{input}}
          outgoingConnections:
            - output->"Http Call" YZOnh6Zi3wvWalIdNveIB/url
          visualData: 890.3933036469409/1650.100382458886/330/776//
        '[2-1stJD-1ZlJeod6DgIgb]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - res_body->"Text" AfphfrSO09nbODmD0BfoV/input
            - res_headers->"Text" n2BWnImUBrJAZMOpk_2I5/input
          visualData: 2659.6253971712263/-560.093298304731/280/708/var(--node-color-4)/var(--node-color-4)
        '[5Hx49_3tx7vg11u5zDxnB]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" 5LkY8Mu_v0tqj2jV-I95I/input
          visualData: 1339.2994916524865/718.5724313971923/330/638/var(--node-color-1)/var(--node-color-1)
        '[5LkY8Mu_v0tqj2jV-I95I]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" wOjyfm5GpYlcB2L_GOh87/input
          visualData: 1825.8557784704903/662.20854467958/330/695//
        '[9uM1rtiITUgpEN3PYTfKu]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
            useBodyInput: true
            useHeadersInput: false
          visualData: 2659.2746351601027/-134.1255650802779/280/707/var(--node-color-4)/var(--node-color-4)
        '[AfphfrSO09nbODmD0BfoV]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 3111.440787222195/-651.9266786220576/330/824//
        '[Et3sjdxYDIfmMn_vmhBMN]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" c1Jqgt3-BvfFcKroOhntB/input
          visualData: 1349.3445983517227/1118.572431397192/330/640/var(--node-color-1)/var(--node-color-1)
        '[GywnVm1WCbBf0jZjzRtUx]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Subgraph" h5k-44eeEQKUVT6CVVEBp/input
            - output->"Subgraph" tStPSxD7oOqaWyMgw629d/input
            - output->"Text" XopQYLGFUzhQeyHRRNB9H/history
          visualData: 958.1970673093098/166.49814452683142/330/803/var(--node-color-1)/var(--node-color-1)
        '[H3Fm81x8gTwGXYoLLSlLk]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" IqeXPetHyKTuaAAeoiCV8/input
          visualData: 1824.262105375531/992.889738466242/330/696//
        '[HybVWMkqapLqooQgmPjod]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2658.4762302885465/1576.9149367836696/280/703/var(--node-color-4)/var(--node-color-4)
        '[IdjcxcsH57ePL8QTaxYTq]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/input
          visualData: 1864.5930602535338/-664.1633253175522/230/713//
        '[IqeXPetHyKTuaAAeoiCV8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" g8AEP8e2wMiSjZRoBEebV/req_body
          visualData: 2240.013936896766/1154.5200026649222/280/699//
        '[KFPyBIeoLBVpJIpgIa7Ne]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" WnXhs0d1-hpjlGoOM8hev/object
          visualData: -54.16591529002161/-37.33217977118733/330/705/var(--node-color-3)/var(--node-color-3)
        '[Mg6ZLUBWi6ag8PVP4dXDa]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 638.043773157
            text: |
              Send the history of the edit
          visualData: 207.25946391472314/1491.3089814557557/1427.2651592032175/778//
        '[Tzw1BEigHvrxiJG6Imitg]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Subgraph" 5Hx49_3tx7vg11u5zDxnB/input
            - output->"Subgraph" c6VmUtT-Bl0ln6nQeSF58/input
            - output->"Text" d0PAVTcOCZeb0W8Lh-Cf7/history
          visualData: 972.7210656439721/-120.16410595381419/330/802/var(--node-color-1)/var(--node-color-1)
        '[WOolU6oaL7Oiht_zsJrpo]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Subgraph" Et3sjdxYDIfmMn_vmhBMN/input
            - output->"Subgraph" pD3wbiydyGyxym3x2prhl/input
            - output->"Text" j_w4n98HL-0NqWvq9nBt9/history
          visualData: 963.6444629165164/405.9164609880693/330/804/var(--node-color-1)/var(--node-color-1)
        '[WnXhs0d1-hpjlGoOM8hev]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
              - $.documentId
          outgoingConnections:
            - match_0->"Subgraph" Tzw1BEigHvrxiJG6Imitg/input
            - match_1->"Subgraph" GywnVm1WCbBf0jZjzRtUx/input
            - match_2->"Subgraph" WOolU6oaL7Oiht_zsJrpo/input
            - match_3->"Text" 13v9N8-2DJPyW49hS2VoA/input
            - match_3->"Text" 5LkY8Mu_v0tqj2jV-I95I/documentId
            - match_3->"Text" H3Fm81x8gTwGXYoLLSlLk/documentId
            - match_3->"Text" XopQYLGFUzhQeyHRRNB9H/documentId
            - match_3->"Text" c1Jqgt3-BvfFcKroOhntB/documentId
            - match_3->"Text" d0PAVTcOCZeb0W8Lh-Cf7/documentId
            - match_3->"Text" j_w4n98HL-0NqWvq9nBt9/documentId
          visualData: 356.2879017266414/-22.51931906114679/280/593//
        '[XopQYLGFUzhQeyHRRNB9H]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}",
                  "history": {{history}}
                }
              }
          outgoingConnections:
            - output->"Http Call" 9uM1rtiITUgpEN3PYTfKu/req_body
          visualData: 2239.468833148886/-270.83006668787687/330/711//
        '[YZOnh6Zi3wvWalIdNveIB]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 1270.5044537526276/1654.8125041544115/280/776/var(--node-color-4)/var(--node-color-4)
        '[c1Jqgt3-BvfFcKroOhntB]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" -kgpH0TBjFvfM8H9c9N-8/input
          visualData: 1814.7000668057754/1315.6025667781075/330/697//
        '[c6VmUtT-Bl0ln6nQeSF58]:subGraph "Subgraph"':
          data:
            graphId: l_qOMNG_p0UM3yOSO2O29
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" IdjcxcsH57ePL8QTaxYTq/input1
          visualData: 1345.015819584239/-122.87414234134567/330/801/var(--node-color-1)/var(--node-color-1)
        '[cC_XKF4Gxqp9WQfyS9sPz]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" XopQYLGFUzhQeyHRRNB9H/input
          visualData: 1859.7540258617169/-249.69920264851947/230/714//
        '[d0PAVTcOCZeb0W8Lh-Cf7]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}",
                  "history": {{history}}
                }
              }
          outgoingConnections:
            - output->"Http Call" 2-1stJD-1ZlJeod6DgIgb/req_body
          visualData: 2236.7281359333174/-631.2169212975992/330/712//
        '[d2ngvaOMizgfgPCRbP-DP]:comment "Comment"':
          data:
            backgroundColor: rgba(218,5,5,0.05)
            color: rgba(197,6,6,1)
            height: 1339.6707916737555
            text: ONLY PASSES 2 HISTORIES RATHER THAN 3
          visualData: 2226.2159255840575/-733.2446402068692/365.3843412952074/812//
        '[g8AEP8e2wMiSjZRoBEebV]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2660.742796618197/1162.0973845352337/280/702/var(--node-color-4)/var(--node-color-4)
        '[h5k-44eeEQKUVT6CVVEBp]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" H3Fm81x8gTwGXYoLLSlLk/input
          visualData: 1339.2994916524865/916.563410057345/330/639/var(--node-color-1)/var(--node-color-1)
        '[jAYCzFIZlQio_0I1AacdY]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" j_w4n98HL-0NqWvq9nBt9/input
          visualData: 1870.2154781957868/167.7526994777018/230/779//
        '[j_w4n98HL-0NqWvq9nBt9]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}",
                  "history": {{history}}
                }
              }
          outgoingConnections:
            - output->"Http Call" -HvpH3_vlr-lQwwFbODFe/req_body
          visualData: 2228.5689669846574/293.34617532780027/330/710//
        '[khiwBEZ1TBidGeoldXUHD]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2666.486819983974/750.3661896799075/280/701/var(--node-color-4)/var(--node-color-4)
        '[n2BWnImUBrJAZMOpk_2I5]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 3114.9606395853266/-379.9643768453679/330/825//
        '[pD3wbiydyGyxym3x2prhl]:subGraph "Subgraph"':
          data:
            graphId: l_qOMNG_p0UM3yOSO2O29
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" jAYCzFIZlQio_0I1AacdY/input1
          visualData: 1333.3202668490103/408.7008259299746/330/805/var(--node-color-1)/var(--node-color-1)
        '[tStPSxD7oOqaWyMgw629d]:subGraph "Subgraph"':
          data:
            graphId: l_qOMNG_p0UM3yOSO2O29
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" cC_XKF4Gxqp9WQfyS9sPz/input1
          visualData: 1326.0105463894924/170.6902795404821/330/800/var(--node-color-1)/var(--node-color-1)
        '[wOjyfm5GpYlcB2L_GOh87]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" khiwBEZ1TBidGeoldXUHD/req_body
          visualData: 2247.9823023715626/862.086963157283/280/698//
    GHgi_Qdv5HEfN9Cwup8cY:
      metadata:
        description: ""
        id: GHgi_Qdv5HEfN9Cwup8cY
        name: Estimate severity
      nodes:
        '[7ouISIuZoDgTyf0yhM7sj]:destructure "Destructure"':
          data:
            paths:
              - $.data.title
              - $.data.date
              - $.data.description
            text: ""
          outgoingConnections:
            - match_2->"Chat" Zou1WVfmrjIXBvaAODJSm/prompt
          visualData: 111.30582592289832/988.3819104985239/280/29//
        '[BU8e6sHxaj-sPedekwuzX]:text "Text"':
          data:
            text: >
              You are a PR professional and it is your job to estmate the
              severity of a crisis situation.


              YIn the prompt you will receive some text describing ta crisis issue and you should assess its severity as either:


              - High

              - Medium

              - Low


              The severity you determine should be based on both the commercial impact to the business and any potential impact to brand reputation.


              Output the answer as a JSON object in the format of:


              "data": {
                  "severity": "The severity that you have determined",
                  }
              }
          outgoingConnections:
            - output->"Chat" Zou1WVfmrjIXBvaAODJSm/systemPrompt
          visualData: 207.11055781902314/218.31839696192336/330/9//
        '[KfOHARDNuJGbsL7wsQRjB]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 1408.550798268462/533.1137487416689/330/26/var(--node-color-3)/var(--node-color-3)
        '[Zou1WVfmrjIXBvaAODJSm]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" jogL2mVfh_6t9C3K43J4e/input
          visualData: 662.2765957446807/600.3297872340426/230/5//
        '[_FwqVLMhnvJzzdKNQ6sPG]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" 7ouISIuZoDgTyf0yhM7sj/object
          visualData: -235.80283213259628/717.3870558715296/330/30/var(--node-color-3)/var(--node-color-3)
        '[jogL2mVfh_6t9C3K43J4e]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" KfOHARDNuJGbsL7wsQRjB/value
          visualData: 995.1437802957063/833.1874038318044/280/22//
    WoecD9--01VjQHhXTmwtU:
      metadata:
        description: ""
        id: WoecD9--01VjQHhXTmwtU
        name: Rewrite and check subgraph
      nodes:
        '[6JMB-7JMK_o3mDn4Nyw66]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 1258.7271129531503/520.4678330040314/330/830/var(--node-color-3)/var(--node-color-3)
        '[FwVPFn9Hw3WJQ4ximLcnO]:text "Text"':
          data:
            text: >-
              {
                "data": {
                  "history": [
                    {
                      "original": "Date: October 6, 2023\n\nPress Release\n\nHäagen-Dazs is committed to the health and safety of our consumers. Following the report of food poisoning associated with our vanilla ice cream on May 6, 2025, we conducted a thorough investigation into the incident.\n\nWe are pleased to report that our investigation has found no evidence of widespread contamination. The findings suggest that the incident was an isolated case, likely due to improper handling by the consumer. We want to reassure our customers that we maintain stringent safety measures and rigorous quality control processes throughout our production.\n\nWe are grateful for the trust our consumers place in the Häagen-Dazs brand, and we are committed to maintaining that trust. We will continue to uphold the highest standards of quality and safety in all our products.\n\nAs we move forward, we encourage our customers to reach out with any questions or concerns. Thank you for your continued loyalty and support.\n\nSincerely,\nBarnaby Fry\n\nbarnaby.fry@nestle.com  \n7956949123  \n\n\n",
                      "rewrite": "No rewrite yet",
                      "fails": "No fails yet",
                      "updates": "No updates yet"
                    }
                  ]
                }
              }
          visualData: 1933.0278242535173/1558.2754194447132/330/859//
        '[Rc4Puxy1KMK7Cugwwdmd_]:extractJson "Extract JSON"':
          visualData: 1175.884810083245/821.7109442543001/280/855//
        '[XsEnSzQbymbnXXFx3rAmw]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" tWf_cGiOZl68AjQtgJqe_/input
          visualData: 1155.3696537288033/1469.658513451463/330/854//
        '[ZqDtSofTEoqAtIupdx6LE]:loopController "Loop Controller"':
          data:
            atMaxIterationsAction: break
            maxIterations: 3
          outgoingConnections:
            - break->"Text" lMF6X1DupFsFWvPRvsKDS/input
            - output1->"Subgraph" pUmp7YYzE2Qb2_bjZOcA4/input
          visualData: 360.31557351020456/848.9658434310018/280/848//
        '[ciUiQ68fQrG9LaF4DJ793]:extractJson "Extract JSON"':
          visualData: -0.013408904172596436/1390.7010912455537/280/852//
        '[hMUq6kbncxOCny_zFBnBZ]:comment "Comment"':
          data:
            backgroundColor: rgba(223,7,7,0.05)
            color: rgba(159,4,4,1)
            height: 684.2365662431089
            text: |
              Build would have to happen here
          visualData: 1111.8152171722897/1118.0125972194849/441.2289723496983/842//
        '[i7kT2H3x6xAu97ghQnLuR]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "history": [
                    {
                      "original": "{{input}}",
                      "rewrite": "No rewrite yet",
                      "fails": "No fails yet",
                      "updates": "No updates yet"
                    }
                  ]
                }
              }
          outgoingConnections:
            - output->"Extract JSON" ciUiQ68fQrG9LaF4DJ793/input
            - output->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1Default
          visualData: -424.9448898104006/1110.7488805715502/330/824//
        '[lMF6X1DupFsFWvPRvsKDS]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" Rc4Puxy1KMK7Cugwwdmd_/input
            - output->"Graph Output" 6JMB-7JMK_o3mDn4Nyw66/value
          visualData: 759.32689689925/638.42512300184/330/840//
        '[nQoPwHb3U2PvvKnnx-8Yc]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Code" oxshKtZF9z_6bYbFPv9OO/input1
          visualData: -1107.295211390256/969.3638671234115/330/826/var(--node-color-3)/var(--node-color-3)
        '[oxshKtZF9z_6bYbFPv9OO]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" i7kT2H3x6xAu97ghQnLuR/input
          visualData: -702.0337553250351/988.3142655767119/230/827//
        '[pUmp7YYzE2Qb2_bjZOcA4]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1
            - output->"Subgraph" tGjoPWvOpRqQlUEhNXlhw/input
            - output->"Text" XsEnSzQbymbnXXFx3rAmw/input
          visualData: 726.2367257395616/1297.609652967238/330/816/var(--node-color-1)/var(--node-color-1)
        '[tGjoPWvOpRqQlUEhNXlhw]:subGraph "Subgraph"':
          data:
            graphId: hcy2UDhZVh6QP8e0AjKC7
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - Analysis->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/continue
          visualData: 1627.2704294133807/1097.4463750107182/330/846/var(--node-color-1)/var(--node-color-1)
        '[tWf_cGiOZl68AjQtgJqe_]:extractJson "Extract JSON"':
          visualData: 1547.591695510024/1471.2992723419281/280/860//
    YSnWEzVg6iWDMFsvcz8dF:
      metadata:
        description: ""
        id: YSnWEzVg6iWDMFsvcz8dF
        name: Test
      nodes:
        '[2HYOMQYt7b1jJ_L3j1F4l]:httpCall "Http Call"':
          data:
            body: |-
              {
                "data": {
                  "qa_pair": 1
                }
              }
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/1
            useBodyInput: false
            useHeadersInput: false
          visualData: 175.47230946387646/688.2008849226988/280/632/var(--node-color-4)/var(--node-color-4)
        '[BFe2YEW1m4RUiXWy5PcFm]:text "Text"':
          data:
            body: ""
            text: >+
              {
                "data": {
                  "title": "Customer Concern About Product Safety",
                  "pressrelease": "We are investigating the issue and will provide an update shortly."
                }
              }

          outgoingConnections:
            - output->"Extract JSON" OPvoP4U4E0DjTUFc2MvrS/input
          visualData: 109.991904680641/430.0761456812575/330/515//
        '[GqM37rp0mkAVS6txX8Iuz]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
            useBodyInput: true
            useHeadersInput: false
          visualData: 829.7520221767147/235.49595564657096/280/512/var(--node-color-4)/var(--node-color-4)
        '[OPvoP4U4E0DjTUFc2MvrS]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" GqM37rp0mkAVS6txX8Iuz/req_body
          visualData: 491.28991592205773/457.2562483155743/280/517//
    cGJILKi8TD1YSzAKUAzKV:
      metadata:
        description: ""
        id: cGJILKi8TD1YSzAKUAzKV
        name: Master graph
      nodes:
        '[0mouFF980bt242hGgYlXk]:setGlobal "Set Global"':
          data:
            dataType: string
            id: documentId
            useIdInput: false
          visualData: -650.8080025739744/1022.0258718277165/230/768//
        '[1d_I3CvsuxquLLL25ctDS]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].detail
          outgoingConnections:
            - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Tone
            - match_0->"Text" lTDwHyIvD8GtM-vUQWnZJ/Tone
          visualData: 788.9012376674186/-912.817285325704/280/775//
        '[72AXK4CYiiIN6rUy5bTNW]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: High risk scenario
          outgoingConnections:
            - response->"Extract JSON" T3fMMBNOpcI3_YO2G_dq0/input
          visualData: 696.4914529831661/551.4592519841684/230/244//
        '[7eyt6KkrPUqx01ZWsuWGh]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data[1].title
              - $.data[1].description
              - $.data[1].location
              - $.data[1].company
              - $.data[1].date
              - $.data[1].severity
              - $.data[1].brand
              - $.data[1].documentId
          outgoingConnections:
            - match_0->"Text" CocxXqVO7vwIgKSISUEL9/Crisis
            - match_1->"Text" CocxXqVO7vwIgKSISUEL9/Description
            - match_2->"Text" CocxXqVO7vwIgKSISUEL9/Location
            - match_3->"Text" CocxXqVO7vwIgKSISUEL9/Company
            - match_3->"Text" N9YOhpmU3aaCsH0rF8pKv/Company
            - match_4->"Text" CocxXqVO7vwIgKSISUEL9/Date
            - match_6->"Text" CocxXqVO7vwIgKSISUEL9/Product
            - match_7->"Set Global" 0mouFF980bt242hGgYlXk/value
            - match_7->"Text" ZEJe86ipFxX2Pgn0SpYkX/documentId
            - match_7->"Text" lTDwHyIvD8GtM-vUQWnZJ/documentId
            - match_7->"Text" o747HrcX1XEo2Bl_seAFB/input
          visualData: -1112.456167558564/660.9274817907149/280/425//
        '[7qF2t1Yi79MSZu8rI-uqx]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              You will be given a JSON object with a number of data points including "date" and "description". 


              It is your job to predict possible risk scenarios based on the crisis defined in the prompt.


              Each time you are given a prompt you should generate 3 short scenarios to demonstrate a possible outcome of the crisis described in the prompt.


              You should write 3 possible outcomes: A high risk scenario, a medium risk scenario and a low risk scenario.


              In each case be sure to reference the issue, the location and the date it occured.


              Do not label each block text with the scenario type, just include the text relating to the possible outcome.


              Output the content as a JSON object in the following format:


              {
                  "high": "High risk scenario content"
                  "medium": "Medium risk scenario content"
                  "low": "Low risk scenario content"
              }
          description: Scenario generation system prompt
          outgoingConnections:
            - output->"Chat" 72AXK4CYiiIN6rUy5bTNW/systemPrompt
          visualData: 311.8969529730908/171.95211745714766/330/651//
        '[8eGhuqG4kOM3xr2nwKYyt]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
          outgoingConnections:
            - match_0->"Text" tmcvLEtdnIE8PFCGXhgrq/input
            - match_1->"Text" ANNRhETLFDLBOO2t4Lj-3/input
            - match_2->"Text" bapvQhzj8q1yxfOAprD2A/input
          visualData: 1688.568625773956/898.510306183254/280/625//
        '[9Iuwg5De8EKZKDy_VVxuL]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" JHrBit8Twr_6qXeZbrGBY/req_body
          visualData: 3496.7919347676557/-1073.037862295804/280/730//
        '[ANNRhETLFDLBOO2t4Lj-3]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium"
                }
              }
          outgoingConnections:
            - output->"Http Call" ohHO4UgYHNIOfR1EepUeK/req_body
          visualData: 2102.44394983333/883.924043302946/330/629//
        '[CocxXqVO7vwIgKSISUEL9]:text "Text"':
          data:
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}, and the detailed description is {{Description}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/prompt
          visualData: -418.8247388018126/564.2780695714856/330/null//
        '[DOH9j6ldq5b44D5MY0YHO]:chat "Chat"':
          data:
            additionalParameters: []
            body: ""
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.


              You should geneate an expanded description of the crisis situation described in the prompt.


              At the top add the title <h1>Crisis Description</h1>\n.


              Output a JSON object in the following format:


              {

              "Crisis Description": [
                  {
                  "Description1": "<h1>Crisis Description</h1>\nText of crisis"
                  }
              ]

              }
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Chat" 72AXK4CYiiIN6rUy5bTNW/prompt
            - response->"Extract JSON" zxftMeqPv_Rfjt9lpoE6Q/input
          visualData: 75.41310134929813/597.5596946626154/230/314//
        '[FIakP9wvdOt--2uEnOsmF]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 2595.697758480101/584.0983575127793/280/478/var(--node-color-4)/var(--node-color-4)
        '[FwIqZLCQSpOSDymXWM5_w]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" R7D93AmlRa1HXREBKWuVT/input
          visualData: 2837.5307178518065/-298.16619682276746/230/733//
        '[HD1rxQpwP9XrZwNWaaoLF]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 600
            text: Get comms team
          visualData: -407.119081962525/-603.5767147483365/830.1844441677374/462//
        '[IwTKZWYXuAna_v309uJ1p]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" Xk1Tw7lxeDqacNIT1bMNu/input
          visualData: 1675.1872958898177/-797.8105751312667/230/650//
        '[Iz7CjdEDhzVwzP3IMCiNB]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 1200.204302969393/1070.7933071576385/280/764/var(--node-color-4)/var(--node-color-4)
        '[JHrBit8Twr_6qXeZbrGBY]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          visualData: 3833.951166041122/-1085.03834529198/280/731/var(--node-color-4)/var(--node-color-4)
        '[KJ0n7LZTEzcnuQDvmpaz4]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].role
              - $.data[0].name
              - $.data[0].email
              - $.data[0].phone
              - $.data[0].documentId
          outgoingConnections:
            - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Role
            - match_1->"Text" ZEJe86ipFxX2Pgn0SpYkX/Spokesman
            - match_1->"Text" lTDwHyIvD8GtM-vUQWnZJ/Spokesman
            - match_2->"Text" ZEJe86ipFxX2Pgn0SpYkX/Email
            - match_2->"Text" lTDwHyIvD8GtM-vUQWnZJ/Email
            - match_3->"Text" ZEJe86ipFxX2Pgn0SpYkX/Phone
            - match_3->"Text" lTDwHyIvD8GtM-vUQWnZJ/Phone
          visualData: 44.4321762346097/-397.50808679427195/280/742//
        '[MtDsiI3cCAsx-7hUbKI3x]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" Rc0jBdKpTG96pQSBDxbGG/req_body
          visualData: 3497.248849485054/-285.7444356265221/280/733//
        '[N9YOhpmU3aaCsH0rF8pKv]:text "Text"':
          data:
            text: >-
              You are a crisis communications public relations (PR) professional
              with expertise in managing high-stakes reputational issues for
              organizations under pressure. Your role is to craft clear,
              empathetic, and timely messaging in response to crises such as
              product recalls, legal investigations, corporate scandals, or
              public backlash. You understand how to balance transparency with
              strategic framing, ensuring that all communications maintain
              public trust while protecting the credibility and long-term
              interests of the organization.


              You are skilled in writing holding statements, press releases, media responses, and internal communications that acknowledge issues, express responsibility or empathy as appropriate, and outline actionable next steps. Your tone is calm, authoritative, and human. You are able to quickly assess the reputational risk of a situation and shape messaging that aligns with stakeholder expectations, media dynamics, and legal considerations. Your goal is always to guide the organization through crisis with integrity, clarity, and control.



              You are a crisis communications PR professional working for {{Company}}. Your role is to manage and mitigate the impact of unexpected events on a company's reputation. This involves developing a strategic communication plan that addresses an emerging crisis situation.


              Effective crisis communication can help to rebuild trust and protect the organization's reputation in the long term.
          description: Role definition copy
          outgoingConnections:
            - output->"Text" 7qF2t1Yi79MSZu8rI-uqx/role
            - output->"Text" lTDwHyIvD8GtM-vUQWnZJ/role
            - output->"Text" vGUWgOtAY-i7sxm-WJ7eb/role
          visualData: -799.8233568715651/-124.75386288525205/330/774/var(--node-color-3)/var(--node-color-3)
        '[OJzyrdkuWTUnJ2Z6kZ8id]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 1212.017625965742
            text: Holding statement
          visualData: 1170.5306923100884/-1140.34087606407/3084.274329633249/727//
        '[OK0NZ-PUiRDUdGqBr-G7B]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 2580.7766031033884/1465.5571267744588/280/757/var(--node-color-4)/var(--node-color-4)
        '[OzfcqLFo3Rn18m4eME4ys]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tone-of-voices
          outgoingConnections:
            - json->"Destructure" 1d_I3CvsuxquLLL25ctDS/object
          visualData: 457.2391728782959/-1034.0644176572957/280/755/var(--node-color-4)/var(--node-color-4)
        '[QG0B00OmZYN6SmNbPqPFN]:subGraph "Subgraph"':
          data:
            graphId: 8fhBx64QGpVrIT6XqLMrt
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2435.329311942938/213.03584107084606/330/736/var(--node-color-1)/var(--node-color-1)
        '[R7D93AmlRa1HXREBKWuVT]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Extract JSON" MtDsiI3cCAsx-7hUbKI3x/input
          visualData: 3121.8095482593476/-285.18358716540865/330/733//
        '[Rc0jBdKpTG96pQSBDxbGG]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          visualData: 3834.40808075852/-297.74491862269815/280/733/var(--node-color-4)/var(--node-color-4)
        '[T3fMMBNOpcI3_YO2G_dq0]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/prompt
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/prompt
            - output->"Destructure" 8eGhuqG4kOM3xr2nwKYyt/object
          visualData: 1141.8836634176616/645.675489858645/280/327//
        '[WgkJpgv4h3JS9A4kEUrUx]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" iv4aQAxIg2qld3Kxgn1z4/input
          visualData: 2839.2490722742787/-692.7513138572966/230/738//
        '[Xk1Tw7lxeDqacNIT1bMNu]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" mcgQkCMsGk4tJBFjxhXTS/object
          visualData: 2017.605049893614/-732.2070674590149/280/658//
        '[ZEJe86ipFxX2Pgn0SpYkX]:text "Text"':
          data:
            text: >-
              You are a crisis comms PR agent and it is your job to write a
              short form output that would go out to the media to inform press
              that a full response is being worked on.


              This note is sent to the media prior to a full press release.


              The total length should be around a single paragraph.


              You will be passed a JSON object of 3 items, a High, Medium and Low risk scenario. Create one output holding statement for each of the 3 cases.


              Each response should take the form of a very short hight level description of the issue and an explanation that a full response is being prepared.


              Do not include a title for each response, just the detail copy.


              Start the response with todays date followed by a double line break.


              Each response should be written in this {{Tone}}.


              Use natural line breaks in the prose like \n.


              Each response should be signed off by the company PR spokesperson called {{Spokesman}} whose company role is {{Role}}.


              Ensure there is a double line break before this.


              Each response should include the contact details of {{Email}} and {{Phone}}.


              Ensure there is a double line break before this.


              Output a JSON object in the following format:


              {

              "data": [
                  {
                  "high": "Holding statement 1 content"
                  }
                  {
                  "medium": "Holding statement 2 content"
                  }
                  {
                  "low": "Holding statement 3 content"
                  },
                  "documentId": {{documentId}}
                  ]
              }
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/systemPrompt
          visualData: 1219.7425853143714/-811.3611668948562/330/756//
        '[_FHEz4jYaBQuCmdaw0JMt]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Extract JSON" 9Iuwg5De8EKZKDy_VVxuL/input
          visualData: 3121.352633541949/-1072.4770138346905/330/729//
        '[aH7e1n92lzWsB4u_WYg7o]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 1442.5022400149803
            text: Submit scenarios
          visualData: 1506.2455955164746/484.55290839124115/1466.7327042187135/763//
        '[ar6v6LMNTaqxVthRlZG20]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" foghClfs0RpllTUuFHt-Q/input
          visualData: 1755.9487182492176/127.59474371350385/230/734//
        '[b0p0ChjrySbYCsRXMJKin]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          visualData: 3836.1264351809928/-662.0360561868131/280/732/var(--node-color-4)/var(--node-color-4)
        '[bapvQhzj8q1yxfOAprD2A]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low"
                }
              }
          outgoingConnections:
            - output->"Http Call" OK0NZ-PUiRDUdGqBr-G7B/req_body
          visualData: 2069.843180647875/1180.518914963552/330/632//
        '[bqckyf2pK3-sULlIQFUw0]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 778.0042361189521
            text: Call in the content from Strapi
          visualData: -1562.392419493719/345.0199219358536/818.745871057165/431//
        '[cKjknBn_o8XEPm2EFP1C3]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/
          outgoingConnections:
            - json->"Destructure" 7eyt6KkrPUqx01ZWsuWGh/object
          visualData: -1493.5441598227849/511.5981188035604/280/467/var(--node-color-4)/var(--node-color-4)
        '[foghClfs0RpllTUuFHt-Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" QG0B00OmZYN6SmNbPqPFN/input
          visualData: 2077.8283189174444/160.61650614665933/280/735//
        '[hEOhNaRzVb931o5QF_P53]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" b0p0ChjrySbYCsRXMJKin/req_body
          visualData: 3498.9672039075263/-650.035573190637/280/732//
        '[iv4aQAxIg2qld3Kxgn1z4]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Extract JSON" hEOhNaRzVb931o5QF_P53/input
          visualData: 3123.52790268182/-649.4747247295236/330/732//
        '[lTDwHyIvD8GtM-vUQWnZJ]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              It is your job to write longform output for a press release that would go out to the media to inform them of the crisis.


              You will be passed a JSON object of 3 items, a High risk scenario, a Medium risk scenario and a Low risk scenario. Create one output press release for each of the 3 cases.


              Each response should take the form of a description of the issue including details of the projected scenario and details of how the business intends to respond to that crisis.


              Start the response with todays date followed by a line break.


              Each response should be written in this {{Tone}}.


              Use natural line breaks in the prose like \n.


              Each response should be signed off by the company PR spokesperson called {{Spokesman}}. Ensure there is a line break before this.


              Each press release should include the contact details of {{Email}} and {{Phone}} at the bottom.


              Ensure there is a double line break before this.


              Output a JSON object in this format:


              {
                  "high": "High risk scenario press release content",
                  "medium": "Medium risk scenario press release content",
                  "low": "Low risk scenario press release content",
                  "documentId": {{documentId}}
              }
          outgoingConnections:
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/systemPrompt
          visualData: 1103.5337879969013/119.73912088298889/330/737//
        '[mcgQkCMsGk4tJBFjxhXTS]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].high
              - $.data[1].medium
              - $.data[2].low
              - $.documentId
            text: ""
          outgoingConnections:
            - match_0->"Code" p-sMAbp17d-0PBwEbF7H0/input1
            - match_1->"Code" WgkJpgv4h3JS9A4kEUrUx/input1
            - match_2->"Code" FwIqZLCQSpOSDymXWM5_w/input1
            - match_3->"Text" R7D93AmlRa1HXREBKWuVT/documentId
            - match_3->"Text" _FHEz4jYaBQuCmdaw0JMt/documentId
            - match_3->"Text" iv4aQAxIg2qld3Kxgn1z4/documentId
          visualData: 2406.8901435626326/-744.8168319243129/280/655//
        '[o747HrcX1XEo2Bl_seAFB]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/url
          visualData: 788.481179864815/1049.9688605083722/330/765//
        '[ohHO4UgYHNIOfR1EepUeK]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 2591.1709390135634/1020.7631520096724/280/758/var(--node-color-4)/var(--node-color-4)
        '[p-sMAbp17d-0PBwEbF7H0]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" _FHEz4jYaBQuCmdaw0JMt/input
          visualData: 2837.073803134408/-1085.4596234920493/230/728//
        '[p5Qh0kyc_g5eWylv3780o]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 759.5900047963021
            text: Define the severity
          visualData: 228.2795777643335/957.2371139791325/1354.293098690909/638//
        '[qic03BQQlMsFH93Oh0O67]:subGraph "Subgraph"':
          data:
            graphId: GHgi_Qdv5HEfN9Cwup8cY
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/req_body
          visualData: 589.6662804897164/1310.5427193914584/330/435/var(--node-color-1)/var(--node-color-1)
        '[tmcvLEtdnIE8PFCGXhgrq]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High"
                }
              }
          outgoingConnections:
            - output->"Http Call" FIakP9wvdOt--2uEnOsmF/req_body
          visualData: 2102.44394983333/539.0317358120365/330/627//
        '[vGUWgOtAY-i7sxm-WJ7eb]:text "Text"':
          data:
            text: >
              Your role is {{role}}


              You should geneate an expanded description of the crisis situation described in the prompt. The length should run to around 3 or 4 paragraphs with natural line breaks.


              Also generate a concise title description in fewer than 10 words.


              Do not adjust the severity at this stage, leave that as Unknown.


              Output a JSON object in the following format:


              {

              "data": {
                  "severity": "Unknown",
                  "title": "Crisis title",
                  "date": "Crisis date",
                  "description": "Text of crisis"
                  }
              }
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/systemPrompt
          visualData: -322.6556466888078/48.67946006593419/330/773//
        '[xQfq8BV4M9MDHCKcpL6vJ]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/comms-teams
          outgoingConnections:
            - json->"Destructure" KJ0n7LZTEzcnuQDvmpaz4/object
          visualData: -341.409286403287/-502.1614298576312/280/463/var(--node-color-4)/var(--node-color-4)
        '[zxftMeqPv_Rfjt9lpoE6Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" qic03BQQlMsFH93Oh0O67/input
          visualData: 282.2465755816026/1130.5676473294723/280/434//
    hcy2UDhZVh6QP8e0AjKC7:
      metadata:
        description: ""
        id: hcy2UDhZVh6QP8e0AjKC7
        name: Check one release subgraph
      nodes:
        '[6JaC_oSAGFBhKIVMkEWYH]:graphOutput "Graph Output"':
          data:
            dataType: boolean
            id: Analysis
          visualData: 1653.3084158213596/265.662211643463/330/362/var(--node-color-3)/var(--node-color-3)
        '[Gh78wjKAaPvBid3c-skfR]:boolean "Bool"':
          data:
            useValueInput: true
            value: true
          outgoingConnections:
            - value->"Graph Output" 6JaC_oSAGFBhKIVMkEWYH/value
          visualData: 1402.0330584589349/287.8153056679769/160/356//
        '[KFdr9J6ICJGZx5GUCVA2z]:destructure "Destructure"':
          data:
            paths:
              - $.data.history[0].rewrite
              - $.data.history[0].fails
              - $.data.history[0].updates
          outgoingConnections:
            - match_0->"Chat" oprEYTNZ_pRARqzGBLP-T/prompt
          visualData: 577.6329094434866/564.9764745587175/280/819//
        '[MzLNx8qSegilkaBQOcD40]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" KFdr9J6ICJGZx5GUCVA2z/object
          visualData: 167.68004842955062/430.2924658037318/330/818/var(--node-color-3)/var(--node-color-3)
        '[nQq13VvC8AaOBOhf-mLp3]:text "Text"':
          data:
            text: >-
              You are an agent who checks the content of a press releases.


              Your prompt will contain a piece of text content and you need to ensure that content adheres to the PR best practices as defined by the following:


              {{Bestpractice}}


              If the press release content meets the majority of the criteria then set the output value to boolean "false" otherwise set the output value to boolean "true".
          outgoingConnections:
            - output->"Chat" oprEYTNZ_pRARqzGBLP-T/systemPrompt
          visualData: 653.3694504216322/24.97846355171863/330/349//
        '[oprEYTNZ_pRARqzGBLP-T]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            text: ""
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Bool" Gh78wjKAaPvBid3c-skfR/input
          visualData: 1073.1870401927615/411.2937970096649/230/354//
        '[pq10Mh3gpDQwkS9T4_Taf]:loadDataset "Load Dataset"':
          data:
            datasetId: xLJpaKaUKaZBupQgz34vW
          description: Best practices data set
          outgoingConnections:
            - dataset->"Text" nQq13VvC8AaOBOhf-mLp3/Bestpractice
          visualData: 211.83706178712825/20.293594189116902/280/347//
    l_qOMNG_p0UM3yOSO2O29:
      metadata:
        description: ""
        id: l_qOMNG_p0UM3yOSO2O29
        name: Type fix subgraph
      nodes:
        '[9FhlORNwZYcIVHtLJaxqi]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" QEn1E8xVZzB_bS764rMrr/object
          visualData: 706.2361881598962/403.70878996983436/280/791//
        '[QEn1E8xVZzB_bS764rMrr]:destructure "Destructure"':
          data:
            paths:
              - $.data.history[0].rewrite
          outgoingConnections:
            - match_0->"Graph Output" wLpk1ymSPlqIjm7PlEhL7/value
          visualData: 1012.938941253115/409.617437044974/280/791//
        '[dTuFNljWI8EZD_ylncCwr]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 9FhlORNwZYcIVHtLJaxqi/input
          visualData: 358/398/330/791//
        '[wLpk1ymSPlqIjm7PlEhL7]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1338.9551292421154/354.9308525344692/330/797/var(--node-color-3)/var(--node-color-3)
        '[ziNEvMm2gbmrP5s8p2qTy]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" dTuFNljWI8EZD_ylncCwr/input
          visualData: -66.36410962894178/314.03516910390215/330/796/var(--node-color-3)/var(--node-color-3)
    zYlQ2Xk75J--kr6X__Awr:
      metadata:
        description: ""
        id: zYlQ2Xk75J--kr6X__Awr
        name: Q&A agent subgraph
      nodes:
        '[-IjNUGgP_EOUbfrIroaZD]:text "Text"':
          data:
            jsonTemplate: ""
            text: >-
              You are crisis comms PR professional.


              You will be sent a press release and you should create a set of 5 questions and answer pairs. These questions and answers are the kind of queries that the press or public might ask as result of hearing about the details of the press release.


              Output the question and answer pairs as text in this string format (don't convert to JSON):

                  "qa": [
                    {
                      "question1": "Question 1",
                      "answer1": "Answer 1"
                    },
                    {
                      "question2": "Question 2",
                      "answer2": "Answer 2"
                    }
                  ]
          description: Holding statement system prompt
          outgoingConnections:
            - output->"Chat" OIvEjExXAsyhFYZZ_ZKZy/systemPrompt
          visualData: 690.1790071001392/158.81781408422745/330/204//
        '[9gX-XwuOZ8FJIB5Zkoxo8]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2027.023440510591/659.96675371681/330/191/var(--node-color-3)/var(--node-color-3)
        '[OIvEjExXAsyhFYZZ_ZKZy]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: medium
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: Generate Q&A Pairs
          outgoingConnections:
            - response->"Extract JSON" ZJiVrtrGVpapu423HZdNE/input
            - response->"Graph Output" 9gX-XwuOZ8FJIB5Zkoxo8/value
          visualData: 1145.2857516735453/558.6550098918765/230/180//
        '[ZJiVrtrGVpapu423HZdNE]:extractJson "Extract JSON"':
          visualData: 1565.426827466768/797.0277729946253/280/205//
        '[vOvnA4hJyoMgKjkbFacnz]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" OIvEjExXAsyhFYZZ_ZKZy/prompt
          visualData: 628.2555846757787/685.4363535235127/330/186/var(--node-color-3)/var(--node-color-3)
  metadata:
    description: ""
    id: rsPSGIUBe90RiHneohxrL
    title: WOrkflow test
  plugins:
    - id: openai
      name: OpenAI
      type: built-in
    - id: pinecone
      name: Pinecone
      type: built-in
