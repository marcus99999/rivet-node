version: 4
data:
  attachedData:
    trivet:
      testSuites: []
      version: 1
  graphs:
    -eizVpxv9JBIHuJFio6wd:
      metadata:
        description: ""
        id: -eizVpxv9JBIHuJFio6wd
        name: Severity - Momentum
      nodes:
        '[B5X_QFBAQQ49y3tr-rgwR]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1561.5543018953797/553.6879884735656/330/28/var(--node-color-3)/var(--node-color-3)
        '[jsc7epdtNIuEWBihXp_yO]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          visualData: 572.9413766470964/446.34039243781876/330/30/var(--node-color-3)/var(--node-color-3)
        '[vVzM1CuokdW7Q7aR72KBu]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "severity_momentum": {
                  "score": 5
              }
          outgoingConnections:
            - output->"Graph Output" B5X_QFBAQQ49y3tr-rgwR/value
          visualData: 1094.6425155786085/371.2048798746597/219.4420707054851/31/var(--node-color-2)/var(--node-color-2)
    3soSwiUKQ_X4fGdokyxAH:
      metadata:
        description: Individual press release rewrite
        id: 3soSwiUKQ_X4fGdokyxAH
        name: PR - Rewrite agent
      nodes:
        '[3uWCPsym5lA_tSbQR8bCX]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "history": [
                  {
                    {{newJSON}}
                  },
                    {{originalJSON}}
                  ]
                }
              }
          outgoingConnections:
            - output->"Extract JSON" RLBF2blfneDpgAJzTpzjf/input
          visualData: 1495.482860963695/1465.2920119037208/330/945//
        '[4IRH4YJ1BKdchejYhJkUO]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 2578.9393327808416/505.6811678731736/330/948/var(--node-color-3)/var(--node-color-3)
        '[JHw4NZzZ9M0kaSi_b2icc]:text "Text"':
          data:
            text: |-
              {
                "body": "{{input}}"
              }
          outgoingConnections:
            - output->"Extract JSON" ZVqFk3NdPBfcj3jimuG0E/input
          visualData: 689.0409669045316/724.234136108081/330/940//
        '[RLBF2blfneDpgAJzTpzjf]:extractJson "Extract JSON"':
          visualData: 1907.4279228483306/1533.0090083779075/280/945//
        '[Xmbnoh9LlbLMA2d7kR3iV]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Code" tZ-TAvsyJmTjfBNokypbM/input1
          visualData: -82.74849516986734/427.15315504282194/330/936/var(--node-color-3)/var(--node-color-3)
        '[ZVqFk3NdPBfcj3jimuG0E]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" u07GLNaref9rHCyXG761B/req_body
          visualData: 1091.4620411461485/669.1476383023097/280/941//
        '[_Rtun_ePQgOY1tS-EUowt]:destructure "Destructure"':
          data:
            paths:
              - $.rewritten
          outgoingConnections:
            - match_0->"Graph Output" 4IRH4YJ1BKdchejYhJkUO/value
          visualData: 2208.826634732004/476.65559030189263/280/949//
        '[ah4enKZnetb-7VonC8qlx]:comment "Comment"':
          data:
            backgroundColor: rgba(218,4,4,0.05)
            color: rgba(154,2,2,1)
            height: 660.6935536082124
            text: |-
              Combine into a larger JSON with previous outputs
              ONLY EVER COMBINING 2
              BECAUSE IT'S NOT REALLY PUSH / POPPING
          visualData: 1331.8334528177434/1304.4641452775275/1593.9979858801712/945//
        '[dHOn8TeIWKUpxenSiL3eX]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" _Rtun_ePQgOY1tS-EUowt/object
          visualData: 1849.102589068697/500.8374775956536/280/943//
        '[gNzI9f4kz8xRGwjVJ_H0j]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases/rm1dzc6aoo3yj3yjalw8lz95&populate=*
          visualData: 2316.5016798057895/1534.4276511062526/330/950//
        '[tZ-TAvsyJmTjfBNokypbM]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" JHw4NZzZ9M0kaSi_b2icc/input
          visualData: 360.86315933649246/656.7103730088913/230/939//
        '[u07GLNaref9rHCyXG761B]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            url: https://pinecone-rewrite.vercel.app/api/rewrite
            useBodyInput: true
          outgoingConnections:
            - res_body->"Extract JSON" dHOn8TeIWKUpxenSiL3eX/input
          visualData: 1472.5589353141663/365.1287138545085/280/942/var(--node-color-4)/var(--node-color-4)
    8fhBx64QGpVrIT6XqLMrt:
      metadata:
        description: Apply best practices and create Q&A statements
        id: 8fhBx64QGpVrIT6XqLMrt
        name: PR- Best practice & Q&A
      nodes:
        '[-HvpH3_vlr-lQwwFbODFe]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases?status=published
            useBodyInput: true
            useHeadersInput: false
          visualData: 2665.1688890140613/301.71921584920767/280/706/var(--node-color-4)/var(--node-color-4)
        '[-kgpH0TBjFvfM8H9c9N-8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" HybVWMkqapLqooQgmPjod/req_body
          visualData: 2236.8265907068476/1485.2011964515843/280/700//
        '[13v9N8-2DJPyW49hS2VoA]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases/{{input}}
          outgoingConnections:
            - output->"Http Call" YZOnh6Zi3wvWalIdNveIB/url
          visualData: 890.3933036469409/1650.100382458886/330/776//
        '[2-1stJD-1ZlJeod6DgIgb]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases?status=published
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - res_body->"Text" AfphfrSO09nbODmD0BfoV/input
            - res_headers->"Text" n2BWnImUBrJAZMOpk_2I5/input
          visualData: 2949.281010172971/-561.4099147274662/280/839/var(--node-color-4)/var(--node-color-4)
        '[5Hx49_3tx7vg11u5zDxnB]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" 5LkY8Mu_v0tqj2jV-I95I/input
          visualData: 1339.2994916524865/718.5724313971923/330/638/var(--node-color-1)/var(--node-color-1)
        '[5LkY8Mu_v0tqj2jV-I95I]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" wOjyfm5GpYlcB2L_GOh87/input
          visualData: 1825.8557784704903/662.20854467958/330/695//
        '[9uM1rtiITUgpEN3PYTfKu]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases?status=published
            useBodyInput: true
            useHeadersInput: false
          visualData: 2659.2746351601027/-134.1255650802779/280/707/var(--node-color-4)/var(--node-color-4)
        '[AfphfrSO09nbODmD0BfoV]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 3386.6136195738527/-507.0988721211852/330/834//
        '[Et3sjdxYDIfmMn_vmhBMN]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" c1Jqgt3-BvfFcKroOhntB/input
          visualData: 1349.3445983517227/1118.572431397192/330/640/var(--node-color-1)/var(--node-color-1)
        '[GywnVm1WCbBf0jZjzRtUx]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" cC_XKF4Gxqp9WQfyS9sPz/input1
            - output->"Subgraph" h5k-44eeEQKUVT6CVVEBp/input
          visualData: 964.5977177069665/152.09668113210384/330/829/var(--node-color-1)/var(--node-color-1)
        '[H3Fm81x8gTwGXYoLLSlLk]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" IqeXPetHyKTuaAAeoiCV8/input
          visualData: 1824.262105375531/992.889738466242/330/696//
        '[HybVWMkqapLqooQgmPjod]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2658.4762302885465/1576.9149367836696/280/703/var(--node-color-4)/var(--node-color-4)
        '[IdjcxcsH57ePL8QTaxYTq]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/input
          visualData: 1864.5930602535338/-664.1633253175522/230/713//
        '[IqeXPetHyKTuaAAeoiCV8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" g8AEP8e2wMiSjZRoBEebV/req_body
          visualData: 2240.013936896766/1154.5200026649222/280/699//
        '[KFPyBIeoLBVpJIpgIa7Ne]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" WnXhs0d1-hpjlGoOM8hev/object
          visualData: -54.16591529002161/-37.33217977118733/330/705/var(--node-color-3)/var(--node-color-3)
        '[Mg6ZLUBWi6ag8PVP4dXDa]:comment "Comment"':
          data:
            backgroundColor: rgba(212,5,5,0.05)
            color: rgba(112,6,6,1)
            height: 638.043773157
            text: |
              Send the history of the edit
          visualData: 207.25946391472314/1491.3089814557557/1427.2651592032175/778//
        '[Tzw1BEigHvrxiJG6Imitg]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" IdjcxcsH57ePL8QTaxYTq/input1
            - output->"Subgraph" 5Hx49_3tx7vg11u5zDxnB/input
          visualData: 975.3542984894425/-120.16410595381419/330/831/var(--node-color-1)/var(--node-color-1)
        '[WOolU6oaL7Oiht_zsJrpo]:subGraph "Subgraph"':
          data:
            graphId: WoecD9--01VjQHhXTmwtU
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Code" jAYCzFIZlQio_0I1AacdY/input1
            - output->"Subgraph" Et3sjdxYDIfmMn_vmhBMN/input
          visualData: 963.6444629165164/405.9164609880693/330/804/var(--node-color-1)/var(--node-color-1)
        '[WnXhs0d1-hpjlGoOM8hev]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
              - $.documentId
          outgoingConnections:
            - match_0->"Subgraph" Tzw1BEigHvrxiJG6Imitg/input
            - match_1->"Subgraph" GywnVm1WCbBf0jZjzRtUx/input
            - match_2->"Subgraph" WOolU6oaL7Oiht_zsJrpo/input
            - match_3->"Text" 13v9N8-2DJPyW49hS2VoA/input
            - match_3->"Text" 5LkY8Mu_v0tqj2jV-I95I/documentId
            - match_3->"Text" H3Fm81x8gTwGXYoLLSlLk/documentId
            - match_3->"Text" XopQYLGFUzhQeyHRRNB9H/documentId
            - match_3->"Text" c1Jqgt3-BvfFcKroOhntB/documentId
            - match_3->"Text" d0PAVTcOCZeb0W8Lh-Cf7/documentId
            - match_3->"Text" j_w4n98HL-0NqWvq9nBt9/documentId
          visualData: 356.2879017266414/-22.51931906114679/280/593//
        '[XopQYLGFUzhQeyHRRNB9H]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" 9uM1rtiITUgpEN3PYTfKu/req_body
          visualData: 2239.468833148886/-270.83006668787687/330/711//
        '[YZOnh6Zi3wvWalIdNveIB]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 1270.5044537526276/1654.8125041544115/280/776/var(--node-color-4)/var(--node-color-4)
        '[c1Jqgt3-BvfFcKroOhntB]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
                },
                "meta": {}
              }
          outgoingConnections:
            - output->"Extract JSON" -kgpH0TBjFvfM8H9c9N-8/input
          visualData: 1814.7000668057754/1315.6025667781075/330/697//
        '[cC_XKF4Gxqp9WQfyS9sPz]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" XopQYLGFUzhQeyHRRNB9H/input
          visualData: 1859.7540258617169/-249.69920264851947/230/714//
        '[d0PAVTcOCZeb0W8Lh-Cf7]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Extract JSON" k02faHRnfQ9GDK6aVcWGd/input
          visualData: 2236.7281359333174/-631.2169212975992/330/712//
        '[d2ngvaOMizgfgPCRbP-DP]:comment "Comment"':
          data:
            backgroundColor: rgba(218,5,5,0.05)
            color: rgba(197,6,6,1)
            height: 1339.6707916737555
            text: ONLY PASSES 2 HISTORIES RATHER THAN 3
          visualData: 2226.2159255840575/-733.2446402068692/365.3843412952074/812//
        '[g8AEP8e2wMiSjZRoBEebV]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2660.742796618197/1162.0973845352337/280/702/var(--node-color-4)/var(--node-color-4)
        '[h5k-44eeEQKUVT6CVVEBp]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" H3Fm81x8gTwGXYoLLSlLk/input
          visualData: 1339.2994916524865/916.563410057345/330/639/var(--node-color-1)/var(--node-color-1)
        '[jAYCzFIZlQio_0I1AacdY]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" j_w4n98HL-0NqWvq9nBt9/input
          visualData: 1870.2154781957868/167.7526994777018/230/779//
        '[j_w4n98HL-0NqWvq9nBt9]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" -HvpH3_vlr-lQwwFbODFe/req_body
          visualData: 2228.5689669846574/293.34617532780027/330/832//
        '[k02faHRnfQ9GDK6aVcWGd]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" 2-1stJD-1ZlJeod6DgIgb/req_body
          visualData: 2637.067981324864/-499.9246735438236/280/838//
        '[khiwBEZ1TBidGeoldXUHD]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/qa-pairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2666.486819983974/750.3661896799075/280/701/var(--node-color-4)/var(--node-color-4)
        '[n2BWnImUBrJAZMOpk_2I5]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 3396.7165540506603/-285.1679944084333/330/833//
        '[wOjyfm5GpYlcB2L_GOh87]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" khiwBEZ1TBidGeoldXUHD/req_body
          visualData: 2247.9823023715626/862.086963157283/280/698//
    EfrNMYIRnDPH9b2qi_inj:
      metadata:
        description: ""
        id: EfrNMYIRnDPH9b2qi_inj
        name: Severity - Scale
      nodes:
        '[5aaOTYv2BoQKokxrcc8KO]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 1395.0912246329167/121.89785106854106/330/47//
        '[P3SYMfFBNNYuWbXxdSp8d]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2249.7012827097865/577.8198132194354/330/48/var(--node-color-3)/var(--node-color-3)
        '[QB5egqbszyjG1nUgB5paM]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/conversations
          outgoingConnections:
            - json->"Destructure" e1nMc32NAjbiaSQ1DTP_y/object
          visualData: 531.1625091966408/-176.58039994591138/280/40/var(--node-color-4)/var(--node-color-4)
        '[YyeI0M3H0xamPKBRaf9p-]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "severity_scale": {
                  "score": 3
              }
          outgoingConnections:
            - output->"Graph Output" P3SYMfFBNNYuWbXxdSp8d/value
          visualData: 1726.733725760086/506.6031523760573/219.4420707054851/49/var(--node-color-2)/var(--node-color-2)
        '[bgzAE5faFdMAcBxE1TEfN]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          visualData: 780.6464903543704/537.7356397562892/330/21/var(--node-color-3)/var(--node-color-3)
        '[e1nMc32NAjbiaSQ1DTP_y]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].Topics.stories
          outgoingConnections:
            - match_0->"Text" 5aaOTYv2BoQKokxrcc8KO/input
          visualData: 978.8798857183191/67.17683838255807/280/46//
        '[lztre-AS2RFVS6QlVfs1K]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 973.905248201412/-161.6564873951889/330/41//
    GHgi_Qdv5HEfN9Cwup8cY:
      metadata:
        description: Estimate crisis severity
        id: GHgi_Qdv5HEfN9Cwup8cY
        name: Severity - Master
      nodes:
        '[-z50Fnu2D56A10PrKG8bh]:subGraph "Subgraph"':
          data:
            graphId: EfrNMYIRnDPH9b2qi_inj
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message1
          visualData: 952.1505568885873/-238.14683473159477/330/80/var(--node-color-1)/var(--node-color-1)
        '[0YdCXU2DMBAdqkm0XvqRm]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "A boiler explosion or equipment failure in Nestlé India’s Samalkha plant
              injures several workers, with local media reporting live from the
              scene. Labour unions allege the incident was preventable, citing
              ignored complaints about faulty equipment and poor ventilation. A
              video of the aftermath filmed by a worker goes viral on social
              media.  Trigger Points: Safety audit records showing irregular
              checks Previous minor incidents or warning signs that were not
              addressed Testimonies from whistleblowers or ex-employees Media
              interest in corporate accountability and labour
              rights  Media/Social Sentiment: Trending hashtags:
              #NestleIndiaAccident #FactoryNegligence Coverage in business and
              mainstream media around ethical labour practices"
          visualData: 256.99593242203446/574.9134030653429/330/132/var(--node-color-2)/var(--node-color-2)
        '[7TeQ6pCv2o5V2YXCcjDgF]:assemblePrompt "Assemble Prompt"':
          outgoingConnections:
            - prompt->"Chat" _s43ZTL5W4a5ldiyC7j3k/prompt
          visualData: 1520.034267464906/146.81349945678429/280/101//
        '[7ouISIuZoDgTyf0yhM7sj]:destructure "Destructure"':
          data:
            paths:
              - $.data.title
              - $.data.date
              - $.data.description
            text: ""
          outgoingConnections:
            - match_2->"Subgraph" -z50Fnu2D56A10PrKG8bh/input
            - match_2->"Subgraph" 9LbLUH9DXSm4aUH_vBpcw/input
            - match_2->"Subgraph" k6jy8_Nk5sKxENwH9aZ6N/input
            - match_2->"Subgraph" tSneJ2F42M20RGsm8W9u_/input
            - match_2->"Subgraph" ykrdQorXBm6sTD0CYykhr/input
          visualData: 200.42723207197824/260.98481720614393/280/126//
        '[9LbLUH9DXSm4aUH_vBpcw]:subGraph "Subgraph"':
          data:
            graphId: -eizVpxv9JBIHuJFio6wd
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message4
          visualData: 959.9192751761462/396.44891000481374/330/135/var(--node-color-1)/var(--node-color-1)
        '[KfOHARDNuJGbsL7wsQRjB]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: severity
          visualData: 2921.7347660534633/309.1086678418129/330/137/var(--node-color-3)/var(--node-color-3)
        '[_FwqVLMhnvJzzdKNQ6sPG]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" 7ouISIuZoDgTyf0yhM7sj/object
          visualData: -223.69428317817233/320.4417452152306/330/124/var(--node-color-3)/var(--node-color-3)
        '[_s43ZTL5W4a5ldiyC7j3k]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" vzD1SMeR-en172gQVjSp2/input
            - response->"Text" q4J6Cr_USUSIiqH2rVE7p/input
          visualData: 2030.3673332067467/298.02329671362577/230/109//
        '[k6jy8_Nk5sKxENwH9aZ6N]:subGraph "Subgraph"':
          data:
            graphId: _7ny001Rtlr9P7w3EfY8D
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message3
          visualData: 953.7050009619236/194.72892310705342/330/134/var(--node-color-1)/var(--node-color-1)
        '[kvM70I68-pUwFzV4NG5ZU]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a data processor reviewing a corporate crisis impact
              assessment represented as a JSON object.


              The object includes the following 5 severity dimensions:

              	•	severity_scale - a single numeric score
              	•	severity_emotionalintensity - individual scores for customers, employees, investors
              	•	severity_influence - a single numeric score
              	•	severity_momentum - a single numeric score
              	•	severity_boycottrisk - individual scores for customers, employees, investors

              Your task:


              1.	Calculate an average score for each of the three stakeholder groups:
              	•	Customers
              	•	Employees
              	•	Investors

              2.	For each group, average the following five values:
              	•	severity_scale.score
              	•	severity_influence.score
              	•	severity_momentum.score
              	•	severity_emotionalintensity.[group].score
              	•	severity_boycottrisk.[group].score

              3.	Apply the following weightings to each of the five metrics:


              {
                "severity_scale": 1,
                "severity_emotionalintensity": 1,
                "severity_influence": 1,
                "severity_momentum": 1,
                "severity_boycottrisk": 1
              }


              4.	Normalize the result and return a rounded average score between 1 and 10 for each stakeholder group.


              5.	Calculate a fourth value, overall_average_score, as the mean of the three stakeholder averages.


              6.	Based on the overall score, assign a summary severity level using this scale:
              	•	If overall_average_score < 4: "Low"
              	•	If 4 ≤ score < 7: "Medium"
              	•	If score ≥ 7: "High"

              ✅ Output Format:


              Return a JSON object with two top-level keys:
              	1.	"severity" - the final summary string: "High", "Medium", or "Low"
              	2.	"severity_logic" - an object containing:
              	•	the original input JSON
              	•	the added average_score_customers, average_score_employees, and average_score_investors

              The final structure must look like this:


              {
              	"data": {
              		"severity": "High",
              		"severity_logic": {
              			...original data and new average fields...
              		}
              	}
              }


              Do not include any explanations, calculations, markdown formatting, or stray characters. Return only the final valid UTF-8 JSON object.
          outgoingConnections:
            - output->"Chat" _s43ZTL5W4a5ldiyC7j3k/systemPrompt
          visualData: 1537.5792614647432/-356.9735268058789/330/131/var(--node-color-2)/var(--node-color-2)
        '[q4J6Cr_USUSIiqH2rVE7p]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 2432.447930457893/218.98181178391317/330/107//
        '[tSneJ2F42M20RGsm8W9u_]:subGraph "Subgraph"':
          data:
            graphId: TIrXJT0lI1gQdU0jtzkhz
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message2
          visualData: 953.736132663214/-16.792614571319213/330/133/var(--node-color-1)/var(--node-color-1)
        '[vzD1SMeR-en172gQVjSp2]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" KfOHARDNuJGbsL7wsQRjB/value
          visualData: 2476.083253749114/562.6404419130982/280/130//
        '[ykrdQorXBm6sTD0CYykhr]:subGraph "Subgraph"':
          data:
            graphId: jOpSxxKf2JqdCjND_3e_G
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message5
          visualData: 958.0479475145355/595.53577318013/330/136/var(--node-color-1)/var(--node-color-1)
    KpT800xhGZdwy4QxONPKN:
      metadata:
        description: ""
        id: KpT800xhGZdwy4QxONPKN
        name: Scenarios - Create
      nodes:
        '[FW2wYsaebPYNjjj7d-aSx]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" cZ0ftay5oLWMqkrWqtnXp/value
          visualData: 1345.1177766129117/690.6708116608482/280/905//
        '[LvY-_lVMY_t8lNzypgQPH]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" czMnCg4tMq2UNYX-apRAi/role
          visualData: 113.80688502631429/352.7344605275644/230/906//
        '[cZ0ftay5oLWMqkrWqtnXp]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 1758/528/330/897/var(--node-color-3)/var(--node-color-3)
        '[czMnCg4tMq2UNYX-apRAi]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              You will be given a JSON object with a number of data points including "date" and "description". 


              It is your job to predict possible risk scenarios based on the crisis defined in the prompt and to give details of potential outcomes for each case.


              Each time you are given a prompt you should generate a total of 3 short scenarios to demonstrate a possible outcome of the crisis described in the prompt.


              You should write 3 possible outcomes: A high risk scenario, a medium risk scenario and a low risk scenario.


              In each case be sure to reference the issue, the location and the date it occured.


              Do not label each block text with the scenario type, just include the text relating to the possible outcome.


              Each of the 3 scenarios should begin with a description of approximately two paragraphs of prose that clearly outlines the potential situation.


              After this description, insert two escaped line breaks (\\n\\n) followed by 3–4 concise bullet points that explicitly outline potential outcomes.


              ⚠️ For all line breaks or paragraph breaks (including within paragraphs or bullet spacing), use escaped newline characters (\\n) — not actual carriage returns or line breaks in the text.


              Output should be delivered as a plain string suitable for use in JSON.


              Output the content as a JSON object ONLY in the following format:


              {
                  "high": "High risk scenario content"
                  "medium": "Medium risk scenario content"
                  "low": "Low risk scenario content"
              }
          description: Scenario generation system prompt
          outgoingConnections:
            - output->"Chat" f4QfJvKebW1dU6H8AJ13r/systemPrompt
          visualData: 521.0936351133283/225.79663544028764/330/904//
        '[f4QfJvKebW1dU6H8AJ13r]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: High risk scenario
          outgoingConnections:
            - response->"Extract JSON" FW2wYsaebPYNjjj7d-aSx/input
          visualData: 943/558/230/901//
        '[nrW4PhSpsORIwFKPjOwSu]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" f4QfJvKebW1dU6H8AJ13r/prompt
          visualData: 201/812/330/899/var(--node-color-3)/var(--node-color-3)
    TIrXJT0lI1gQdU0jtzkhz:
      metadata:
        description: ""
        id: TIrXJT0lI1gQdU0jtzkhz
        name: Severity - Emotional intensity
      nodes:
        '[4-CXAo2JBQr55vA1pyFpi]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" eB-AF2eWf52GBDbMiX6Se/value
          visualData: 827.9186717527157/607.7098605602876/230/20//
        '[LnDAS8NRLrMyQQ50ndXED]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >
              You are a public relations professional working in a crisis
              communications department.


              You will be given some text describing a corporate crisis scenario that presents a risk to the company.


              Your task is to estimate the emotional intensity of the scenario for each key stakeholder group:
              	•	Customers
              	•	Employees
              	•	Investors

              You must return a score from 1 to 10, where 10 is the most emotionally severe for that group. Consider how upsetting, distressing, or trust-breaking the situation is for each group based on the text.


              Use the following emotional severity scale as a guideline:


              1. Very Low - Minor annoyance or negligible impact.

              2. Low - Slight concern or frustration, isolated.

              3. Moderate - Awareness of issue, mild reputational unease.

              4. Noticeable - Frustration or criticism becomes visible.

              5. Concerning - Trust begins to erode or ethical issues arise.

              6. Serious - Stakeholders feel misled or personally affected.

              7. Alarming - Escalating concern, calls for accountability.

              8. Critical - Direct harm or significant loss of trust.

              9. Severe - Long-term damage to confidence or wellbeing.

              10. Extreme - Crisis of trust or identity; potential for severed relationships or existential risk.


              For each item add some short text to describe the rationale for why you gave the rating. Use language that makes it clear that the rationale is predictive rather than describing actual outcomes so the reader does not misunderstand the rationale as being actual events.


              Output as a JSON object ONLY in this format:


              {
                "severity_emotionalintensity": {
                  "customers": {
                    "score": 8,
                    "rationale": "Customers have been directly harmed by the faulty product, with widespread media coverage and safety concerns leading to fear and outrage."
                  },
                  "employees": {
                    "score": 5,
                    "rationale": "Employees are concerned about the company's image and potential layoffs but are not directly affected by the incident."
                  },
                  "investors": {
                    "score": 7,
                    "rationale": "Investors fear reputational fallout and regulatory penalties that could affect long-term value, but the business remains operational."
                  }
                }
              }
          outgoingConnections:
            - output->"Chat" 4-CXAo2JBQr55vA1pyFpi/systemPrompt
          visualData: -994.0089025133748/285.12531371706797/1483.8939389042782/16/var(--node-color-2)/var(--node-color-2)
        '[Zuwhu-2EIC9x2facEXJBs]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" 4-CXAo2JBQr55vA1pyFpi/prompt
          visualData: 208.94726938496646/908.239665609297/330/19/var(--node-color-3)/var(--node-color-3)
        '[eB-AF2eWf52GBDbMiX6Se]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1233.6011102299763/570.2513877874702/330/8/var(--node-color-3)/var(--node-color-3)
    WoecD9--01VjQHhXTmwtU:
      metadata:
        description: Interative press release rewriter
        id: WoecD9--01VjQHhXTmwtU
        name: PR - Rewrite supervisor agent
      nodes:
        '[6JMB-7JMK_o3mDn4Nyw66]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1813.6176691846756/636.1963994533993/330/866/var(--node-color-3)/var(--node-color-3)
        '[ZqDtSofTEoqAtIupdx6LE]:loopController "Loop Controller"':
          data:
            atMaxIterationsAction: break
            maxIterations: 2
          outgoingConnections:
            - break->"Text" lMF6X1DupFsFWvPRvsKDS/input
            - output1->"Subgraph" pUmp7YYzE2Qb2_bjZOcA4/input
          visualData: 360.31557351020456/848.9658434310018/280/848//
        '[lMF6X1DupFsFWvPRvsKDS]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" 6JMB-7JMK_o3mDn4Nyw66/value
          visualData: 771.1588915227672/693.2274241079336/330/877//
        '[nQoPwHb3U2PvvKnnx-8Yc]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1Default
          visualData: -294.9300031933259/895.6365623658544/330/872/var(--node-color-3)/var(--node-color-3)
        '[pUmp7YYzE2Qb2_bjZOcA4]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1
            - output->"Subgraph" tGjoPWvOpRqQlUEhNXlhw/input
          visualData: 856.4199877435374/1497.6557280153213/330/871/var(--node-color-1)/var(--node-color-1)
        '[tGjoPWvOpRqQlUEhNXlhw]:subGraph "Subgraph"':
          data:
            graphId: hcy2UDhZVh6QP8e0AjKC7
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - Analysis->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/continue
          visualData: 1271.6953776199753/1246.183525212737/330/878/var(--node-color-1)/var(--node-color-1)
    _7ny001Rtlr9P7w3EfY8D:
      metadata:
        description: ""
        id: _7ny001Rtlr9P7w3EfY8D
        name: Severity - Influence
      nodes:
        '[ADfjKc37hEkSE7ddaDOjI]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          visualData: 618.1697207226142/895.6701837878978/330/30/var(--node-color-3)/var(--node-color-3)
        '[cQHPUJqbPtRObhSzVS_Ig]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1570.8233485979947/786.1034892942109/330/28/var(--node-color-3)/var(--node-color-3)
        '[zGNQDDqzOWI06Bw6Ec0NW]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "severity_influence": {
                  "score": 8
              }
          outgoingConnections:
            - output->"Graph Output" cQHPUJqbPtRObhSzVS_Ig/value
          visualData: 1150.6649669977164/897.2902040707759/219.4420707054851/29/var(--node-color-2)/var(--node-color-2)
    aPC7m9RtS6-gmBn2nKrYk:
      metadata:
        description: ""
        id: aPC7m9RtS6-gmBn2nKrYk
        name: Old test
      nodes:
        '[-nA7x4qH9EaFXKxjUZQas]:text "Text"':
          data:
            body: ""
            text: >-
              {

              "data": {
                "crisis": "{{documentId}}",
                "detail": "FOR IMMEDIATE RELEASE\n\nMay 13, 2025\n\nNestlé Responds Proactively to 'Test Crisis' Concerns\n\nNestlé acknowledges the emerging 'Test Crisis' situation concerning some of our products. We wish to assure our valued consumers and stakeholders that we are vigilantly monitoring the situation, with a steadfast commitment to transparency and consumer safety.\n\nDespite the minimal media coverage and limited consumer awareness at this stage, we understand the significance of proactively addressing any potential concerns. Our dedicated team is conducting an exhaustive investigation to uphold the integrity of our products and ensure the safety of our customers.\n\nWe are confident in our ability to navigate this situation effectively and preserve the trust of our consumers. As our investigation progresses, we will provide regular updates to keep all stakeholders informed.\n\nWe appreciate your ongoing support and trust in Nestlé.\n\nBarnaby Fry\n\nPR Spokesperson, Nestlé\n\nbarnaby.fry@nestle.com\n\n7956949123",
                "severity": "High",
                "history": {
                "adjustments": [
                  "Changed 'addresses' to 'responds proactively' for a more active tone",
                  "Replaced 'referred to as' with 'concerning' for clarity",
                  "Replaced 'we want to reassure' with 'we wish to assure' for a more professional tone",
                  "Replaced 'we believe in the importance of' with 'we understand the significance of' for a more assertive tone",
                  "Replaced 'we are confident in our ability to manage' with 'we are confident in our ability to navigate' for a more dynamic tone",
                  "Added 'regular' before 'updates' for clarity"
                ],
                "sourceExamples": [
                  "Nestlé Addresses Limited Product Concerns with Commitment to Transparency"
                ]
                }
                }
              }
          outgoingConnections:
            - output->"Http Call" jj_C4zqrggSlvOkT9GiNm/req_body
          visualData: 618.3068822634/1303.7969476182816/330/963//
        '[GDLfFenNZnA2NfKb3uaL1]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1642.2279087611696/1307.844066300091/330/960//
        '[InKZuv1NtHKkVdTljUnyr]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" hhiYeQdZXmWK63JrpROSD/input
          visualData: 1022.1003749492432/964.0200601708399/280/956//
        '[T_zXdH8bRsG3kswJKoBvk]:getGlobal "Get Global"':
          data:
            dataType: string
            id: documentId
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" -nA7x4qH9EaFXKxjUZQas/documentId
          visualData: 257/1516.727042733621/230/null//
        '[g4lusC14OrD6KykFlh9yz]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1878.3098318667162/951.6976223008668/330/958//
        '[hhiYeQdZXmWK63JrpROSD]:subGraph "Subgraph"':
          data:
            graphId: hcy2UDhZVh6QP8e0AjKC7
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - Analysis->"Text" g4lusC14OrD6KykFlh9yz/input
          visualData: 1418.2873417010514/963.8389783462949/330/957/var(--node-color-1)/var(--node-color-1)
        '[jj_C4zqrggSlvOkT9GiNm]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/press-releases
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - res_body->"Text" GDLfFenNZnA2NfKb3uaL1/input
          visualData: 1093.168807595699/1247.1372860729507/280/839/var(--node-color-4)/var(--node-color-4)
        '[kMj1iHlyn7uvhMPYrNACT]:text "Text"':
          data:
            text: >-
              {
                "body": "May 13, 2025\n\nNestlé is facing a significant crisis following confirmed reports of severe health issues linked to our 'Test Crisis' product. We are taking this matter seriously and cooperating fully with health authorities. A product recall is underway, and we are enhancing quality control measures immediately to protect consumers and restore trust."
              }
          outgoingConnections:
            - output->"Extract JSON" InKZuv1NtHKkVdTljUnyr/input
          visualData: 622.3540009452093/994.8668882401665/330/955//
        '[t4P06mqOI2sV7EerqbqEM]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Text" xOWqjLn7Kn-tmgLDCZ5z8/input
          visualData: 1135.2755549054214/542.7531606894972/330/935/var(--node-color-1)/var(--node-color-1)
        '[vOaGFDHgORBL6mSQkyFYG]:text "Text"':
          data:
            body: ""
            text: >-
              May 13, 2025


              Nestlé is facing a significant crisis following confirmed reports of severe health issues linked to our 'Test Crisis' product. We have received alarming feedback from consumers who have experienced adverse reactions, and we understand the seriousness of this situation. As media coverage intensifies, we recognize the growing concern among our customers and the public.


              In response to these developments, we are taking immediate action. We are working closely with health authorities and regulatory bodies to investigate these reports thoroughly. Our top priority is the safety and well-being of our consumers, and we are committed to transparency throughout this process.


              We acknowledge the distress this has caused and are moving swiftly to implement a comprehensive recall of the affected products. Additionally, we are enhancing our communication efforts to keep all stakeholders informed as we navigate this challenging time.


              We understand that this situation has led to a decline in consumer trust and our brand reputation, and we take full responsibility for addressing these issues. We are dedicated to regaining your trust through our actions and commitment to quality and safety.


              We will continue to provide updates as more information becomes available. Thank you for your understanding and support as we work diligently to resolve this crisis.


              Barnaby Fry


              barnaby.fry@nestle.com

              7956949123
          outgoingConnections:
            - output->"Subgraph" t4P06mqOI2sV7EerqbqEM/input
          visualData: 681.599665429283/401/330/934//
        '[xOWqjLn7Kn-tmgLDCZ5z8]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 1596.7757644961603/480.6549403395962/330/936//
    bYUcwJKSmTeEPW_gtQWo-:
      metadata:
        description: ""
        id: bYUcwJKSmTeEPW_gtQWo-
        name: "Tone of voice subgraph "
      nodes:
        '[9s9QzSbL431SomeHHgofJ]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 873/588/330/4/var(--node-color-3)/var(--node-color-3)
        '[aYPKatqidqry5KGMvmYiG]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Graph Output" 9s9QzSbL431SomeHHgofJ/value
          visualData: 307/480/330/2/var(--node-color-3)/var(--node-color-3)
    cGJILKi8TD1YSzAKUAzKV:
      metadata:
        description: The main press room pipeline flow
        id: cGJILKi8TD1YSzAKUAzKV
        name: MASTER
      nodes:
        '[0mouFF980bt242hGgYlXk]:setGlobal "Set Global"':
          data:
            dataType: string
            id: documentId
            useIdInput: false
          visualData: -683.1287549387969/962.9377279475866/230/907//
        '[1d_I3CvsuxquLLL25ctDS]:destructure "Destructure"':
          data:
            body: ""
            paths:
              - $.data[0].detail
          outgoingConnections:
            - match_0->"Text" N9YOhpmU3aaCsH0rF8pKv/tone
            - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Tone
            - match_0->"Text" lTDwHyIvD8GtM-vUQWnZJ/Tone
          visualData: -1447.6486831543725/-469.47514580839743/280/918//
        '[2uPrdf3woHnGtAJDrw2Lz]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: -700.3395112827031/266.7150418264481/330/1006/var(--node-color-3)/var(--node-color-3)
        '[7eyt6KkrPUqx01ZWsuWGh]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.title
              - $.data.description
              - $.data.location
              - $.data.company.title
              - $.data.date
              - $.data.severity
              - $.data.brand
              - $.data.documentId
          outgoingConnections:
            - match_0->"Graph Output" 2uPrdf3woHnGtAJDrw2Lz/value
            - match_0->"Text" CocxXqVO7vwIgKSISUEL9/Crisis
            - match_1->"Text" CocxXqVO7vwIgKSISUEL9/Description
            - match_2->"Text" CocxXqVO7vwIgKSISUEL9/Location
            - match_3->"Text" CocxXqVO7vwIgKSISUEL9/Company
            - match_3->"Text" N9YOhpmU3aaCsH0rF8pKv/Company
            - match_4->"Text" CocxXqVO7vwIgKSISUEL9/Date
            - match_6->"Text" CocxXqVO7vwIgKSISUEL9/Product
            - match_7->"Set Global" 0mouFF980bt242hGgYlXk/value
            - match_7->"Text" ZEJe86ipFxX2Pgn0SpYkX/documentId
            - match_7->"Text" lTDwHyIvD8GtM-vUQWnZJ/documentId
            - match_7->"Text" o747HrcX1XEo2Bl_seAFB/input
          visualData: -1112.456167558564/660.9274817907149/280/425//
        '[CocxXqVO7vwIgKSISUEL9]:text "Text"':
          data:
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}, and the detailed description is {{Description}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/prompt
          visualData: -724.3032089267066/485.95734013185364/330/886//
        '[DOH9j6ldq5b44D5MY0YHO]:chat "Chat"':
          data:
            additionalParameters: []
            body: ""
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.


              You should geneate an expanded description of the crisis situation described in the prompt.


              At the top add the title <h1>Crisis Description</h1>\n.


              Output a JSON object in the following format:


              {

              "Crisis Description": [
                  {
                  "Description1": "<h1>Crisis Description</h1>\nText of crisis"
                  }
              ]

              }
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" zxftMeqPv_Rfjt9lpoE6Q/input
            - response->"Subgraph" GGEwPqFn8e-aYjpv4Lp3Q/input
          visualData: 209.54528303704194/327.58531005263103/304.7865093297828/985//
        '[FwIqZLCQSpOSDymXWM5_w]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" R7D93AmlRa1HXREBKWuVT/input
          visualData: 2837.5307178518065/-298.16619682276746/230/733//
        '[GE3dothNsb-QgfptTQIAJ]:subGraph "Subgraph"':
          data:
            graphId: oNDvNATb6Cp0mwhFoA39A
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 1172.6019185237997/598.2077809837134/330/1005/var(--node-color-1)/var(--node-color-1)
        '[GGEwPqFn8e-aYjpv4Lp3Q]:subGraph "Subgraph"':
          data:
            graphId: KpT800xhGZdwy4QxONPKN
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/prompt
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/prompt
            - output->"Subgraph" GE3dothNsb-QgfptTQIAJ/input
          visualData: 720.8193604943233/551.4017688347425/330/999/var(--node-color-1)/var(--node-color-1)
        '[HD1rxQpwP9XrZwNWaaoLF]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 600
            text: Get comms team
          visualData: -407.119081962525/-603.5767147483365/830.1844441677374/462//
        '[IwTKZWYXuAna_v309uJ1p]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" Xk1Tw7lxeDqacNIT1bMNu/input
          visualData: 1675.1872958898177/-797.8105751312667/230/650//
        '[Iz7CjdEDhzVwzP3IMCiNB]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 904.2939961958964/1158.2674583765736/280/997/var(--node-color-4)/var(--node-color-4)
        '[JHrBit8Twr_6qXeZbrGBY]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" pj36ZGV8B0nhcuO1nltqU/input
          visualData: 3833.951166041122/-1085.03834529198/280/731/var(--node-color-4)/var(--node-color-4)
        '[KJ0n7LZTEzcnuQDvmpaz4]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].role
              - $.data[0].name
              - $.data[0].email
              - $.data[0].phone
              - $.data[0].documentId
          outgoingConnections:
            - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Role
            - match_1->"Text" ZEJe86ipFxX2Pgn0SpYkX/Spokesman
            - match_1->"Text" lTDwHyIvD8GtM-vUQWnZJ/Spokesman
            - match_2->"Text" ZEJe86ipFxX2Pgn0SpYkX/Email
            - match_2->"Text" lTDwHyIvD8GtM-vUQWnZJ/Email
            - match_3->"Text" ZEJe86ipFxX2Pgn0SpYkX/Phone
            - match_3->"Text" lTDwHyIvD8GtM-vUQWnZJ/Phone
          visualData: 44.4321762346097/-397.50808679427195/280/742//
        '[Kh8n8tY-O5thO4Vrbai26]:text "Text"':
          data:
            text: sihaot4huf96o6ikq7fq0pl8
          outgoingConnections:
            - output->"Text" W888kIoF-SH_n2m0tV7Rc/input
          visualData: -2424.803677318482/741.7967919860332/330/1008//
        '[N9YOhpmU3aaCsH0rF8pKv]:text "Text"':
          data:
            text: >-
              You are a crisis communications public relations (PR) professional
              working for {{Company}}. You have expertise in managing
              high-stakes reputational issues for organizations under pressure.
              Your role is to craft clear, empathetic, and timely messaging in
              response to crises such as product recalls, legal investigations,
              corporate scandals, or public backlash. You understand how to
              balance transparency with strategic framing, ensuring that all
              communications maintain public trust while protecting the
              credibility and long-term interests of the organization.


              You are skilled in writing holding statements, press releases, media responses, and internal communications that acknowledge issues, express responsibility or empathy as appropriate, and outline actionable next steps.


              Your tone is {{tone}}.


              You are able to quickly assess the reputational risk of a situation and shape messaging that aligns with stakeholder expectations, media dynamics, and legal considerations. Your goal is always to guide the organization through crisis with integrity, clarity, and control.
          description: Role definition copy
          outgoingConnections:
            - output->"Set Global" q-7FV8Lss_M2GuC2trzea/value
            - output->"Text" lTDwHyIvD8GtM-vUQWnZJ/role
            - output->"Text" vGUWgOtAY-i7sxm-WJ7eb/role
          visualData: -1174.9371509996672/-327.22114088744934/330/915/var(--node-color-3)/var(--node-color-3)
        '[OJzyrdkuWTUnJ2Z6kZ8id]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 1212.017625965742
            text: Holding statement
          visualData: 1170.5306923100884/-1140.34087606407/3084.274329633249/727//
        '[OzfcqLFo3Rn18m4eME4ys]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tone-of-voices
          outgoingConnections:
            - json->"Destructure" 1d_I3CvsuxquLLL25ctDS/object
          visualData: -1636.717456853748/-881.121903987407/280/883/var(--node-color-4)/var(--node-color-4)
        '[QG0B00OmZYN6SmNbPqPFN]:subGraph "Subgraph"':
          data:
            graphId: 8fhBx64QGpVrIT6XqLMrt
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2477.7376363623766/210.00667504088617/330/982/var(--node-color-1)/var(--node-color-1)
        '[R7D93AmlRa1HXREBKWuVT]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" Rc0jBdKpTG96pQSBDxbGG/req_body
          visualData: 3121.8095482593476/-285.18358716540865/330/733//
        '[Rc0jBdKpTG96pQSBDxbGG]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          visualData: 3834.40808075852/-297.74491862269815/280/733/var(--node-color-4)/var(--node-color-4)
        '[SZ4yIii2XvaHMue86QDO6]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 1043.8609724340745
            text: Create role
          visualData: -1755.1826378964747/-940.1360241898007/1308.654927271846/916//
        '[W888kIoF-SH_n2m0tV7Rc]:text "Text"':
          data:
            body: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=company
          outgoingConnections:
            - output->"Http Call" cKjknBn_o8XEPm2EFP1C3/url
          visualData: -1984.1165728777935/551.7698981750353/330/861//
        '[WgkJpgv4h3JS9A4kEUrUx]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" iv4aQAxIg2qld3Kxgn1z4/input
          visualData: 2839.2490722742787/-692.7513138572966/230/738//
        '[Xk1Tw7lxeDqacNIT1bMNu]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" mcgQkCMsGk4tJBFjxhXTS/object
          visualData: 2017.605049893614/-732.2070674590149/280/658//
        '[Yh7uuKhGTKEJl40mOg0FE]:comment "Comment"':
          data:
            backgroundColor: rgba(80,98,244,0.05)
            color: rgba(250,250,250,1)
            height: 576.7027015866272
            text: |
              Expanded description
          visualData: -240.0097102675435/83.23420835040659/806.588848743939/888//
        '[ZEJe86ipFxX2Pgn0SpYkX]:text "Text"':
          data:
            text: >-
              You are a crisis comms PR agent and it is your job to write a
              short form output that would go out to the media to inform press
              that a full response is being worked on.


              This note is sent to the media prior to a full press release.


              The total length should be 2 to 3 short paragraphs.


              You will be passed a JSON object of 3 items, a High, Medium and Low risk scenario. Create one output holding statement for each of the 3 cases.


              Each response should take the form of a short hight level description of the issue and an explanation that a full response is being prepared.


              Do not include a title for each response, just the detail copy.


              Start the response with todays date followed by a double line break.


              Each response should be written in this {{Tone}}.


              Use natural line breaks in the prose like \n.


              Each response should be signed off by the company PR spokesperson called {{Spokesman}} whose company role is {{Role}}. This should form part of the holding statement response.


              Ensure there is a double line break before this.


              Each response should include the contact details of {{Email}} and {{Phone}}.


              Ensure there is a double line break before this.


              Output only a JSON object in the following format:


              {

              "data": {
                  "high": "Holding statement 1 content",
                  "medium": "Holding statement 2 content",
                  "low": "Holding statement 3 content",
                  "documentId": {{documentId}}
                  }
              }
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/systemPrompt
          visualData: 1282.715538596497/-990.2616023554406/330/862//
        '[_FHEz4jYaBQuCmdaw0JMt]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" JHrBit8Twr_6qXeZbrGBY/req_body
          visualData: 3121.352633541949/-1072.4770138346905/330/729//
        '[amanjT5aC-pMQbTIoqiAn]:text "Text"':
          data:
            text: aqvoxymesg5jovysyqa6lv0m
          visualData: -2486.493206449407/933.7334730772966/330/1010//
        '[ar6v6LMNTaqxVthRlZG20]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" foghClfs0RpllTUuFHt-Q/input
          visualData: 1746.8612201593378/-225.30309877682512/230/978//
        '[b0p0ChjrySbYCsRXMJKin]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
            useBodyInput: true
            useHeadersInput: false
          visualData: 3836.1264351809928/-662.0360561868131/280/732/var(--node-color-4)/var(--node-color-4)
        '[bqckyf2pK3-sULlIQFUw0]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 597.2698296024814
            text: Call in the content from Strapi
          visualData: -1569.739174387927/456.69059632781625/804.7758411904256/1009//
        '[cKjknBn_o8XEPm2EFP1C3]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useHeadersInput: false
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 7eyt6KkrPUqx01ZWsuWGh/object
          visualData: -1480.2231785001838/559.3316352095475/280/790/var(--node-color-4)/var(--node-color-4)
        '[foghClfs0RpllTUuFHt-Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" QG0B00OmZYN6SmNbPqPFN/input
          visualData: 2077.8283189174444/160.61650614665933/280/735//
        '[gEC9dXtwHK8R4y7GC-ffB]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          visualData: -2471.896571707314/455.1418776579797/330/1007/var(--node-color-3)/var(--node-color-3)
        '[hMBnQG7H5-eoGm-4FGM03]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 787.8082938575141
            text: Long form press release
          visualData: 1201.065090758448/-396.85823022841004/1213.1144607672818/980//
        '[iv4aQAxIg2qld3Kxgn1z4]:text "Text"':
          data:
            text: |-
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" b0p0ChjrySbYCsRXMJKin/req_body
          visualData: 3123.52790268182/-649.4747247295236/330/732//
        '[lTDwHyIvD8GtM-vUQWnZJ]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              It is your job to write longform output for a press release that would go out to the media to inform them of the crisis.


              You will be passed a JSON object of 3 items, a High risk scenario, a Medium risk scenario and a Low risk scenario. Create one output press release for each of the 3 cases.


              Each response should take the form of a description of the issue including details of the projected scenario and details of how the business intends to respond to that crisis.


              Start the response with todays date followed by a line break.


              Each response should be written in this {{Tone}}.


              Use natural line breaks in the prose like \n.


              Each response should be signed off by the company PR spokesperson called {{Spokesman}}. Ensure there is a line break before this.


              Each press release should include the contact details of {{Email}} and {{Phone}} at the bottom.


              Ensure there is a double line break before this.


              Output a JSON object in this format:


              {
                  "high": "High risk scenario press release content",
                  "medium": "Medium risk scenario press release content",
                  "low": "Low risk scenario press release content",
                  "documentId": {{documentId}}
              }
          outgoingConnections:
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/systemPrompt
          visualData: 1298.474426935451/-263.65929617574136/330/981//
        '[mcgQkCMsGk4tJBFjxhXTS]:destructure "Destructure"':
          data:
            paths:
              - $.data.high
              - $.data.medium
              - $.data.low
              - $.data.documentId
            text: ""
          outgoingConnections:
            - match_0->"Code" p-sMAbp17d-0PBwEbF7H0/input1
            - match_1->"Code" WgkJpgv4h3JS9A4kEUrUx/input1
            - match_2->"Code" FwIqZLCQSpOSDymXWM5_w/input1
            - match_3->"Text" R7D93AmlRa1HXREBKWuVT/documentId
            - match_3->"Text" _FHEz4jYaBQuCmdaw0JMt/documentId
            - match_3->"Text" iv4aQAxIg2qld3Kxgn1z4/documentId
          visualData: 2406.8901435626326/-744.8168319243129/280/655//
        '[o747HrcX1XEo2Bl_seAFB]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/url
          visualData: 128.1782826855232/1130.0610003671718/330/994//
        '[p-sMAbp17d-0PBwEbF7H0]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" _FHEz4jYaBQuCmdaw0JMt/input
          visualData: 2837.073803134408/-1085.4596234920493/230/829//
        '[p5Qh0kyc_g5eWylv3780o]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 661.2989123849472
            text: Define the severity
          visualData: 43.648670782855476/1017.0829941731288/1232.0641438214789/992//
        '[pj36ZGV8B0nhcuO1nltqU]:text "Text"':
          data:
            text: "{{input}}"
          visualData: 4348.838052517052/-830.4631643410783/330/813//
        '[q-7FV8Lss_M2GuC2trzea]:setGlobal "Set Global"':
          data:
            dataType: string
            id: role
            useIdInput: false
          visualData: -769.3811849653266/-394.08340480588504/230/968//
        '[qic03BQQlMsFH93Oh0O67]:subGraph "Subgraph"':
          data:
            graphId: GHgi_Qdv5HEfN9Cwup8cY
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - severity->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/req_body
          visualData: 486.9219445345881/1287.3263836178776/330/995/var(--node-color-1)/var(--node-color-1)
        '[vGUWgOtAY-i7sxm-WJ7eb]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              You should generate an expanded description of the crisis situation described in the prompt. The output should include natural line breaks.


              Also generate a concise title description in fewer than 10 words.


              Do not adjust the severity at this stage, leave that as Unknown.


              Output a only a JSON object in the following format:


              {

              "data": {
                  "severity": "Unknown",
                  "title": "Crisis title",
                  "date": "Crisis date",
                  "description": "Text of crisis"
                  }
              }


              Return only the final valid UTF-8 JSON object.
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/systemPrompt
          visualData: -199.33787655900795/156.50428744643352/330/991//
        '[xQfq8BV4M9MDHCKcpL6vJ]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/comms-teams
          outgoingConnections:
            - json->"Destructure" KJ0n7LZTEzcnuQDvmpaz4/object
          visualData: -341.409286403287/-502.1614298576312/280/463/var(--node-color-4)/var(--node-color-4)
        '[zxftMeqPv_Rfjt9lpoE6Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" qic03BQQlMsFH93Oh0O67/input
          visualData: 105.86316061727027/1431.5091608870898/280/993//
    hcy2UDhZVh6QP8e0AjKC7:
      metadata:
        description: Check the content of a single release using the vector DB
        id: hcy2UDhZVh6QP8e0AjKC7
        name: PR - Check single release
      nodes:
        '[0YE9EtaAR-geTE11xkRdf]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 5pFfLjYXfRWct7bondsH8/object
          visualData: 1314.5083531195799/1026.5346867397284/280/977//
        '[5pFfLjYXfRWct7bondsH8]:destructure "Destructure"':
          data:
            paths:
              - $.suitability
          outgoingConnections:
            - match_0->"Bool" _emBmfGLJIvtAg0GxSdad/input
          visualData: 1654.7585228712765/1113.2306601890105/280/978//
        '[6JaC_oSAGFBhKIVMkEWYH]:graphOutput "Graph Output"':
          data:
            dataType: boolean
            id: Analysis
          visualData: 2309.542929930828/1195.9668038861435/330/980/var(--node-color-3)/var(--node-color-3)
        '[7lZQ6SdsilaRpAUbvczRw]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            url: https://pinecone-rewrite.vercel.app/api/evaluate
            useBodyInput: true
          outgoingConnections:
            - res_body->"Text" b1aRe3TdJP-9VTorMrr4-/input
          visualData: 576.5288311205318/810.6861390462234/280/975/var(--node-color-4)/var(--node-color-4)
        '[MzLNx8qSegilkaBQOcD40]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Http Call" 7lZQ6SdsilaRpAUbvczRw/req_body
          visualData: 158.73080265533633/909.7163465652109/330/957/var(--node-color-3)/var(--node-color-3)
        '[_emBmfGLJIvtAg0GxSdad]:boolean "Bool"':
          data:
            useValueInput: true
            value: false
          outgoingConnections:
            - value->"Graph Output" 6JaC_oSAGFBhKIVMkEWYH/value
          visualData: 2028.9025712507832/1143.9540293327823/160/979//
        '[b1aRe3TdJP-9VTorMrr4-]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 0YE9EtaAR-geTE11xkRdf/input
          visualData: 917.6873774869994/975.5829089409737/330/976//
    jOpSxxKf2JqdCjND_3e_G:
      metadata:
        description: ""
        id: jOpSxxKf2JqdCjND_3e_G
        name: Severity - Boycott intent
      nodes:
        '[1pt1AoLaGy2XMo3A3rdx2]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a public relations professional working in a crisis
              communications department.


              You will be given some text describing a corporate crisis scenario that presents a risk to the company.


              Your task is to estimate the likelihood of a boycott or similar withdrawal of support for each key stakeholder group:
              	•	Customers - e.g., refusal to buy products, brand boycotts, public campaigns
              	•	Employees - e.g., resignations, internal protest, union action
              	•	Investors - e.g., divestment, shareholder activism, public criticism

              You must return a score from 1 to 10, where 10 indicates a very high risk of boycott (or equivalent action) for that group.


              Use the following scale as a guide:


              1. Very Low - No real risk of disengagement or protest.

              2. Low - Discontent may be voiced, but no action expected.

              3. Moderate - Some dissatisfaction; possible isolated actions.

              4. Noticeable - Small group may organize or speak out.

              5. Concerning - Growing appetite for action, pressure starting to build.

              6. Serious - Petitions, warnings, or soft disengagement begin.

              7. High - Visible calls for action; some stakeholders disengaging.

              8. Critical - Active movements form; mainstream traction gained.

              9. Severe - Widespread boycott/disengagement in progress.

              10. Extreme - Sustained, large-scale action with measurable damage to support or loyalty.


              For each item add some short text to describe the rationale for why you gave the rating. Use language that makes it clear that the rationale is predictive rather than describing actual outcomes so the reader does not misunderstand the rationale as being actual events.


              Output as a JSON object ONLY in this format:


              {
                "severity_boycottrisk": {
                  "customers": {
                    "score": 9,
                    "rationale": "Customers have initiated a trending boycott campaign after revelations of unethical sourcing, with widespread traction on social media and activist involvement."
                  },
                  "employees": {
                    "score": 4,
                    "rationale": "Some internal frustration is evident, but organized action has not materialized beyond internal Slack discussions and a few HR complaints."
                  },
                  "investors": {
                    "score": 6,
                    "rationale": "Ethical investment groups are questioning continued support and have begun pressuring the board for accountability and governance changes."
                  }
                }
              }
          outgoingConnections:
            - output->"Chat" XJCuxUWihIzR-cbjR6krZ/systemPrompt
          visualData: 416.72421911436925/-14.619811780539578/1483.8939389042782/22/var(--node-color-2)/var(--node-color-2)
        '[KQRuERJDGLd1l16j4ab5w]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2511.610012743351/518.1260740704022/330/20/var(--node-color-3)/var(--node-color-3)
        '[LHBPa2dRTTy5gniOy23ZA]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" XJCuxUWihIzR-cbjR6krZ/prompt
          visualData: 1486.9561718983412/856.114351892229/330/20/var(--node-color-3)/var(--node-color-3)
        '[XJCuxUWihIzR-cbjR6krZ]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" KQRuERJDGLd1l16j4ab5w/value
          visualData: 2019.815380508604/359.47484734212014/230/21//
    l_qOMNG_p0UM3yOSO2O29:
      metadata:
        description: ""
        id: l_qOMNG_p0UM3yOSO2O29
        name: Type fix subgraph
      nodes:
        '[9FhlORNwZYcIVHtLJaxqi]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" QEn1E8xVZzB_bS764rMrr/object
          visualData: 706.2361881598962/403.70878996983436/280/791//
        '[QEn1E8xVZzB_bS764rMrr]:destructure "Destructure"':
          data:
            paths:
              - $.data.history[0].rewrite
          outgoingConnections:
            - match_0->"Graph Output" wLpk1ymSPlqIjm7PlEhL7/value
          visualData: 1012.938941253115/409.617437044974/280/791//
        '[dTuFNljWI8EZD_ylncCwr]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 9FhlORNwZYcIVHtLJaxqi/input
          visualData: 358/398/330/791//
        '[wLpk1ymSPlqIjm7PlEhL7]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1338.9551292421154/354.9308525344692/330/797/var(--node-color-3)/var(--node-color-3)
        '[ziNEvMm2gbmrP5s8p2qTy]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" dTuFNljWI8EZD_ylncCwr/input
          visualData: -66.36410962894178/314.03516910390215/330/796/var(--node-color-3)/var(--node-color-3)
    oNDvNATb6Cp0mwhFoA39A:
      metadata:
        description: ""
        id: oNDvNATb6Cp0mwhFoA39A
        name: Scenarios - Submit
      nodes:
        '[1CrILRhQbgDe3WTIPQa5o]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" vGrMCp_P9c7YdmxhhVt0j/req_body
          visualData: 749.1089222202045/24.40391311731696/330/627//
        '[1qj6Co0QHa5bSTYQVEa3n]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" N-4ftkm3HlWZXOFajTkuX/req_body
          visualData: 716.5081530347497/665.8910922688326/330/632//
        '[6MfIA8qVDWK88vrdAM8uu]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 1237.835911400438/506.13532931495286/280/758/var(--node-color-4)/var(--node-color-4)
        '[AG3KlNFLjYWCmgFLLBti5]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
          outgoingConnections:
            - match_0->"Text" 1CrILRhQbgDe3WTIPQa5o/input
            - match_1->"Text" OtrcUUB5vFEU7ON7mpZBk/input
            - match_2->"Text" 1qj6Co0QHa5bSTYQVEa3n/input
          visualData: 290.4877952850993/136.88424718587225/280/998//
        '[LFQ7hV1m94UbW-qNJmK-c]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 323.81540695367414/963.0715829007078/330/1005//
        '[N-4ftkm3HlWZXOFajTkuX]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 1227.441575490263/950.9293040797393/280/757/var(--node-color-4)/var(--node-color-4)
        '[ODTD1f3YIQB7Jjx5qfflt]:getGlobal "Get Global"':
          data:
            dataType: string
            id: documentId
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" 1CrILRhQbgDe3WTIPQa5o/documentId
            - value->"Text" 1qj6Co0QHa5bSTYQVEa3n/documentId
            - value->"Text" LFQ7hV1m94UbW-qNJmK-c/input
            - value->"Text" OtrcUUB5vFEU7ON7mpZBk/documentId
          visualData: -20.88920141676641/818.3483016632435/230/1004//
        '[OtrcUUB5vFEU7ON7mpZBk]:text "Text"':
          data:
            text: |
              {
                "data": {
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
                }
              }
          outgoingConnections:
            - output->"Http Call" 6MfIA8qVDWK88vrdAM8uu/req_body
          visualData: 749.1089222202045/369.29622060822646/330/629//
        '[Z00m77150kI2e-9hLYAHl]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" AG3KlNFLjYWCmgFLLBti5/object
          visualData: -193.37087806327077/142.90424460028203/330/1000/var(--node-color-3)/var(--node-color-3)
        '[vGrMCp_P9c7YdmxhhVt0j]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
            useBodyInput: true
            useHeadersInput: false
          visualData: 1242.3627308669757/69.47053481805983/280/478/var(--node-color-4)/var(--node-color-4)
    zYlQ2Xk75J--kr6X__Awr:
      metadata:
        description: Write and individual set of QA pairs
        id: zYlQ2Xk75J--kr6X__Awr
        name: PR- Q&A agent subgraph
      nodes:
        '[-IjNUGgP_EOUbfrIroaZD]:text "Text"':
          data:
            jsonTemplate: ""
            text: >-
              You are crisis comms PR professional.


              You will be sent a press release and you should create a set of 4 questions and answer pairs. These questions and answers are the kind of queries that the press or public might ask as result of hearing about the details of the press release.


              Output the question and answer pairs as text in this string format (don't convert to JSON):

                  "qa": [
                    {
                      "question1": "Question 1",
                      "answer1": "Answer 1"
                    },
                    {
                      "question2": "Question 2",
                      "answer2": "Answer 2"
                    }
                  ]
          description: Holding statement system prompt
          outgoingConnections:
            - output->"Chat" OIvEjExXAsyhFYZZ_ZKZy/systemPrompt
          visualData: 690.1790071001392/158.81781408422745/330/204/var(--node-color-4)/var(--node-color-4)
        '[9gX-XwuOZ8FJIB5Zkoxo8]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2027.023440510591/659.96675371681/330/191/var(--node-color-3)/var(--node-color-3)
        '[OIvEjExXAsyhFYZZ_ZKZy]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: Generate Q&A Pairs
          outgoingConnections:
            - response->"Extract JSON" ZJiVrtrGVpapu423HZdNE/input
            - response->"Graph Output" 9gX-XwuOZ8FJIB5Zkoxo8/value
          visualData: 1145.2857516735453/558.6550098918765/230/180//
        '[ZJiVrtrGVpapu423HZdNE]:extractJson "Extract JSON"':
          visualData: 1565.426827466768/797.0277729946253/280/205//
        '[vOvnA4hJyoMgKjkbFacnz]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" OIvEjExXAsyhFYZZ_ZKZy/prompt
          visualData: 628.2555846757787/685.4363535235127/330/186/var(--node-color-3)/var(--node-color-3)
  metadata:
    description: Main press office flow
    id: rsPSGIUBe90RiHneohxrL
    title: Crisis Comms Graph
  plugins:
    - id: openai
      name: OpenAI
      type: built-in
    - id: pinecone
      name: Pinecone
      type: built-in
    - id: anthropic
      name: Anthropic
      type: built-in
  references: []
