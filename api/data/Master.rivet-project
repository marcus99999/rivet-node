version: 4
data:
  attachedData:
    trivet:
      testSuites: []
      version: 1
  graphs:
    -eizVpxv9JBIHuJFio6wd:
      metadata:
        description: Estimate the severity momentum
        id: -eizVpxv9JBIHuJFio6wd
        name: Advisory - Severity - Momentum
      nodes:
        '[1e1q51RKaxyylTq6uz5Mi]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://crisis-comms.vercel.app/api/momentum-summary?id={{input}}
          outgoingConnections:
            - output->"Http Call" r3ShAtoIHSLs3s6ceW9hD/url
          visualData: 229.4430371931836/299.46635032763567/330/1086/var(--node-color-2)/var(--node-color-2)
        '[B5X_QFBAQQ49y3tr-rgwR]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1714.963911121372/401.7394231449638/330/1087/var(--node-color-3)/var(--node-color-3)
        '[Yq9CuDZYI_HAjkON-Ij_r]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" 1e1q51RKaxyylTq6uz5Mi/input
          visualData: -233.5548547124057/308.84770434173805/330/1086/var(--node-color-3)/var(--node-color-3)
        '[cImvTc5TMiqi-xzymw2Jv]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" B5X_QFBAQQ49y3tr-rgwR/value
          visualData: 1193.8850330380174/186.96597022857463/230/1081//
        '[r3ShAtoIHSLs3s6ceW9hD]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/conversations
            useUrlInput: true
          outgoingConnections:
            - res_body->"Chat" cImvTc5TMiqi-xzymw2Jv/prompt
          visualData: 708.8354723089329/316.32839265415123/280/1086/var(--node-color-4)/var(--node-color-4)
        '[rJTUQ98apWwR-V1wMFecW]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: >-
              You are a media analyst working within a PR crisis response team.


              Your role is to assess the momentum of a potential crisis, based on whether it is growing or shrinking in scale over time.


              Scale is represented by the volume of media conversation per day, measured in:
              	•	reach (audience exposed to the story), and
              	•	numberOfStories (number of distinct media items).

              You will be provided with an object like this:


              {
                "crisisId": "dky8i30kisowxhuupwo8iz5l",
                "crisisTitle": "Nestlé India Criticised for Prioritising Taste over Health in Kids' Food",
                "momentumByDay": [
                  { "date": "31/05/25", "numberOfStories": 1, "reach": 95000 },
                  { "date": "30/05/25", "numberOfStories": 1, "reach": 35000 },
                  ...
                  { "date": "01/06/25", "numberOfStories": 2, "reach": 1800000 }
                ]
              }


              The data is an array of days, each with:
              	•	the reach (number of people exposed that day), and
              	•	the number of stories that day.

              Your task:


              You must produce a momentum score between 1 and 10, where:
              	•	1 = the story is clearly receding and declining in visibility
              	•	10 = the story is accelerating rapidly and growing in visibility and volume
              	•	5 = flat or stable — no clear growth or decline
              	•	Any value between 1-10 represents degrees of momentum.

              How to reason:


              ✅ Look at the recent trend:
              	•	Is reach growing in the most recent few days?
              	•	Is the number of stories increasing?

              ✅ Consider the pattern over time:
              	•	Sudden surges → higher momentum
              	•	Flattening → stable
              	•	Declining → low momentum

              ✅ Prioritise the most recent 3-5 days, but take the whole series into account.


              ✅ A crisis that has high recent growth, even with past fluctuations, should skew to a higher score.


              ✅ A crisis that is clearly fading should be scored low.


              Output format:


              Produce a JSON object with this exact format:


              {
                "severity_momentum": {
                  "score": [A number from 1 to 10],
                  "rationale": "[A short sentence explaining why you gave that score, referencing the pattern of stories and reach.]"
                }
              }


              Example rationale styles:
              	•	“Story volume and reach are growing rapidly in the last few days — high momentum.”
              	•	“Reach has flattened after initial surge — stable momentum.”
              	•	“Both story volume and reach are clearly declining — low momentum.”
              	•	“Momentum is mixed, with inconsistent reach and volume — moderate score.”

              Additional notes:


              ❌ Do NOT simply average the values.

              ❌ You are modelling perceived momentum, as a human would interpret it from the chart.

              ✅ If there was no data in the incoming prompt. Set the "rationale" field to say "We are still looking for mentions relating to this topic, please come back later".
          outgoingConnections:
            - output->"Chat" cImvTc5TMiqi-xzymw2Jv/systemPrompt
          visualData: 768.7212588974103/-184.1391797085875/330/1084/var(--node-color-2)/var(--node-color-2)
    3soSwiUKQ_X4fGdokyxAH:
      metadata:
        description: Individual press release rewrite
        id: 3soSwiUKQ_X4fGdokyxAH
        name: Advisory - PR rewrite agent
      nodes:
        '[4IRH4YJ1BKdchejYhJkUO]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 2227.6263947608086/749.6949871050882/330/973/var(--node-color-3)/var(--node-color-3)
        '[Xmbnoh9LlbLMA2d7kR3iV]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Code" tZ-TAvsyJmTjfBNokypbM/input1
          visualData: 32.40251112707543/745.9648103602689/330/975/var(--node-color-3)/var(--node-color-3)
        '[dHOn8TeIWKUpxenSiL3eX]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" 4IRH4YJ1BKdchejYhJkUO/value
          visualData: 1732.7750600150482/729.5803546886575/280/972//
        '[m7fxbATaOCr54la6o-DRe]:text "Text"':
          data:
            body: ""
            text: |-
              {
                "text": "{{input}}"
              }
          outgoingConnections:
            - output->"HTTP - Rewrite endpoint" u07GLNaref9rHCyXG761B/req_body
          visualData: 786.7150049404587/654.6083486159396/330/962//
        '[tZ-TAvsyJmTjfBNokypbM]:code "Code"':
          data:
            code: >-
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


              const inputText = inputs.input1.value;


              // Replace real line breaks (\n or \r\n) with the literal string "\n"

              const escapedText = inputText.replace(/\r?\n/g, '\\n');


              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" m7fxbATaOCr54la6o-DRe/input
          visualData: 456.14192062781547/422.97966171611455/230/974//
        '[u07GLNaref9rHCyXG761B]:httpCall "HTTP - Rewrite endpoint"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            text: ""
            url: https://pinecone-rewrite.vercel.app/api/rewrite
            useBodyInput: true
          outgoingConnections:
            - res_body->"Extract JSON" dHOn8TeIWKUpxenSiL3eX/input
          visualData: 1258.6831222377018/497.5937335663832/280/971/var(--node-color-4)/var(--node-color-4)
    8dIVb-m7djUWLo0j9GXBb:
      metadata:
        description: ""
        id: 8dIVb-m7djUWLo0j9GXBb
        name: Create - Culturescore - Cultural salience
      nodes:
        '[-hgmxrbb1GwclDfoCmIZl]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" u-DxopHLU8ctmkD00EeTs/input
          visualData: -818.1628186897306/1273.9467738183075/330/1590/var(--node-color-3)/var(--node-color-3)
        '[7jNQ0bKJpD0HbjGxyYopX]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" QQkdiRap6WKkucbrpOIvn/prompt
          visualData: 1423.6286159532376/1664.534051190452/280/1598//
        '[CMVZaKqaPAc1LDrDRQd0Y]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" frmBNNd1SVLRyJ0pg-SU9/url
          visualData: 394.59508671817724/1483.1969324505153/330/1591//
        '[HqOy_xeNPqzxfFYaxYj3y]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
            text: ""
          outgoingConnections:
            - match_0->"Text" zBvpfhOV9jbKLkhfR2F5w/input
            - match_1->"Text" CMVZaKqaPAc1LDrDRQd0Y/input
          visualData: 43.93716433552919/1317.1533056525013/280/1596//
        '[QQkdiRap6WKkucbrpOIvn]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" SKphm2PXag04YpWxVRLX9/value
          visualData: 1591.6087457998028/902.8224696842301/230/1566//
        '[SKphm2PXag04YpWxVRLX9]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 2148.966158513534/1081.1674241185078/330/1567/var(--node-color-3)/var(--node-color-3)
        '[UiRVhhCBxo39H9KxHelmC]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" ZYIb1Tl1B4eSPnTy7SRj6/audience
          visualData: 1409.9673792774126/1452.7619896689832/280/1600//
        '[ZYIb1Tl1B4eSPnTy7SRj6]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a cultural analyst specialising in consumer PR.


              In the user prompt, you will be given a description of a consumer PR campaign along with a defined {{audience}}.


              Your task is to assess the cultural salience of the campaign — that is, how strongly the idea is likely to resonate with the specified audience based on cultural trends, audience values, and relevance to their experience.


              Score

              Interpretation

              0

              No Relevance - Campaign is tone-deaf or completely disconnected from the audience's culture.

              1-3

              Low Salience - Audience unlikely to relate; idea may be seen as outdated, irrelevant, or superficial.

              4-5

              Moderate Salience - Some elements may resonate, but overall relevance is weak or mixed.

              6-7

              Good Salience - Audience will likely connect with the campaign, though it may not be breakthrough.

              8-9

              High Salience - Strong cultural fit; campaign is likely to generate interest, conversation, or approval.

              10

              Exceptional Salience - Deep cultural alignment; highly likely to spark emotional connection and cultural traction.


              Output:


              Return only a single numeric value from 0 to 10 in the "score" field" and a short 1 or 2 sentance rationale in the "rationale" field.


              Output as a JSON object ONLY in this format:


              {
                "culturescore_culturalsalience": {
                    "score": 8,
                    "rationale": "Rationale here."
                }
              }
          outgoingConnections:
            - output->"Chat" QQkdiRap6WKkucbrpOIvn/systemPrompt
          visualData: 1004.8920986133836/589.6446943623022/330/1575//
        '[frmBNNd1SVLRyJ0pg-SU9]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 7jNQ0bKJpD0HbjGxyYopX/object
          visualData: 956.0847194430402/1556.3872153154293/280/1595/var(--node-color-4)/var(--node-color-4)
        '[lz-9YrCZfInahSb_fcN6h]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" UiRVhhCBxo39H9KxHelmC/object
          visualData: 958.5924478450472/1103.3744055855075/280/1594/var(--node-color-4)/var(--node-color-4)
        '[u-DxopHLU8ctmkD00EeTs]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" HqOy_xeNPqzxfFYaxYj3y/object
          visualData: -361.3403721254128/1356.4794277888727/280/1601//
        '[zBvpfhOV9jbKLkhfR2F5w]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" lz-9YrCZfInahSb_fcN6h/url
          visualData: 408.87149487765913/1132.6404090474746/330/1592//
    8fhBx64QGpVrIT6XqLMrt:
      metadata:
        description: Apply best practices and create Q&A statements
        id: 8fhBx64QGpVrIT6XqLMrt
        name: Advisory - PR- Best practice & Q&A
      nodes:
        '[-HvpH3_vlr-lQwwFbODFe]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-pressrelease
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" eejM-ua-wKdVtsje_wqZj/input
          visualData: 4327.703994121275/-399.9328420120052/280/1570/var(--node-color-4)/var(--node-color-4)
        '[-V3mX_TdIK2sMIZeBsfAn]:getGlobal "Get Global"':
          data:
            dataType: string
            id: documentId
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" Opbyfte5MRFNu5YsoFpzw/crisisid
            - value->"Text" _xun_79EIycJcd_nUsd24/crisisid
            - value->"Text" sXaO-y1UPPYzNLtmpQCZw/crisisid
          visualData: 5511.694105906639/-5.965261642559355/230/1570//
        '[-kgpH0TBjFvfM8H9c9N-8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" HybVWMkqapLqooQgmPjod/req_body
          visualData: 2236.8265907068476/1485.2011964515843/280/700//
        '[0kMVxtP41NRcyej4vkbMO]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 98fnq5MNPxGvhhtMfS2cT/input
          visualData: 4660.945809009906/-686.6484674098947/330/1570//
        '[1GjN7fYCeUUGDt0rqodHa]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" ODJurltHNQDJ4V7wfThYc/object
          visualData: 5071.934102777707/-1110.9390290539152/280/1570//
        '[1Mc8h-DueAoO7z5XmdUn_]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 1GjN7fYCeUUGDt0rqodHa/input
          visualData: 4688.882924280506/-1111.9038934833793/330/1570//
        '[2-1stJD-1ZlJeod6DgIgb]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-pressrelease
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" 1Mc8h-DueAoO7z5XmdUn_/input
          visualData: 4325.726881733207/-1439.825786210852/280/1574/var(--node-color-4)/var(--node-color-4)
        '[2wdsSZIqnLyd5XyYGMSrD]:subGraph "Subgraph"':
          data:
            graphId: lzDkeo10TytZALkz8u7nq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Http Call" 9MsqhREMEpYz6DTD7mSPl/req_body
          visualData: 4572.556435134327/-2150.5653501347483/330/1570/var(--node-color-1)/var(--node-color-1)
        '[4y5XJhHvehu2FhbfFSOcu]:getGlobal "Get Global"':
          data:
            dataType: string
            id: story
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" Opbyfte5MRFNu5YsoFpzw/story
            - value->"Text" _xun_79EIycJcd_nUsd24/story
            - value->"Text" sXaO-y1UPPYzNLtmpQCZw/story
          visualData: 5173.141544335755/-1568.900773768393/230/1570//
        '[53VGWoy2POv4xS_sCHelY]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" givYg0K4zZa7xCEszaC2A/detail
            - output1->"Text" sXaO-y1UPPYzNLtmpQCZw/response
          visualData: 2157.4722107326074/-208.02240245710234/230/1287/var(--node-color-2)/var(--node-color-2)
        '[5Hx49_3tx7vg11u5zDxnB]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" 5LkY8Mu_v0tqj2jV-I95I/input
          visualData: 1361.5910494615036/694.2543683328099/330/841/var(--node-color-1)/var(--node-color-1)
        '[5LkY8Mu_v0tqj2jV-I95I]:text "Text"':
          data:
            text: |-
              {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "High"
              }
          outgoingConnections:
            - output->"Extract JSON" wOjyfm5GpYlcB2L_GOh87/input
          visualData: 1825.8557784704903/662.20854467958/330/695//
        '[5yprqq763NjbIsevY0tq0]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 6382.843042836206/-394.322931464272/330/1570/var(--node-color-1)/var(--node-color-1)
        '[6j2SwrDcIwLifrtNqNdL_]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" sy6hucwRj-4x7Bc7byq6Q/input
            - match_1->"Stringify history" LN8DHo33vCFwL7CJ3ygnV/input1
          visualData: 1468.7149769838593/-1713.408244781903/280/999//
        '[8WRU16msc0m6A1wEL3qDe]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" Opbyfte5MRFNu5YsoFpzw/response
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/detail
          visualData: 2175.9887199808218/-1950.7724093661475/230/1013/var(--node-color-2)/var(--node-color-2)
        '[98fnq5MNPxGvhhtMfS2cT]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" jtb7T-N-15zAQ1KWlv6GZ/object
          visualData: 5043.996987507107/-685.6836029804307/280/1570//
        '[9MsqhREMEpYz6DTD7mSPl]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-social
            useBodyInput: true
            useHeadersInput: false
          visualData: 5000.247807977531/-2454.3434038393502/280/1570/var(--node-color-4)/var(--node-color-4)
        '[9uM1rtiITUgpEN3PYTfKu]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-pressrelease
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" 0kMVxtP41NRcyej4vkbMO/input
          visualData: 4316.91447051936/-965.9102818921223/280/1570/var(--node-color-4)/var(--node-color-4)
        '[BEL1Tnw5MgkmBkHJWWrBa]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/role
          visualData: 3450.1122880453127/-1329.4442673135602/230/1570/var(--node-color-2)/var(--node-color-2)
        '[BFvuIXOPmjhMuvzfJ5qmG]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" yprS_XnqPy0aumVa4bQ3i/input1
          visualData: 1775.2256419791752/-812.8139888666074/330/1000//
        '[Et3sjdxYDIfmMn_vmhBMN]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" c1Jqgt3-BvfFcKroOhntB/input
          visualData: 1349.3445983517227/1118.572431397192/330/640/var(--node-color-1)/var(--node-color-1)
        '[GywnVm1WCbBf0jZjzRtUx]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" zS1BJ-fC48CLNOPqpbhn5/object
            - output->"Subgraph" h5k-44eeEQKUVT6CVVEBp/input
          visualData: 968.5188769682962/120.81770092334392/330/1008/var(--node-color-1)/var(--node-color-1)
        '[H3Fm81x8gTwGXYoLLSlLk]:text "Text"':
          data:
            text: |-
              {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "Medium"
              }
          outgoingConnections:
            - output->"Extract JSON" IqeXPetHyKTuaAAeoiCV8/input
          visualData: 1824.262105375531/992.889738466242/330/696//
        '[HybVWMkqapLqooQgmPjod]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-qapairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2952.2926914639334/1869.3584238414146/280/849/var(--node-color-4)/var(--node-color-4)
        '[I8Hh43o-NCmTGCH8qfDSg]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" givYg0K4zZa7xCEszaC2A/original
          visualData: 2473.59752133962/-299.30311690634096/230/1313/var(--node-color-2)/var(--node-color-2)
        '[IJqTXxPN2eOR5TSyVcxyg]:text "Text"':
          data:
            body: ""
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "Medium",
                  "crisis": "{{documentId}}",
                  "role": "{{role}}"
              }
          outgoingConnections:
            - output->"Http Call" 9uM1rtiITUgpEN3PYTfKu/req_body
            - output->"Subgraph" 2wdsSZIqnLyd5XyYGMSrD/prompt
          visualData: 3809.6601962881105/-963.8585014288208/330/1570//
        '[IqeXPetHyKTuaAAeoiCV8]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" g8AEP8e2wMiSjZRoBEebV/req_body
          visualData: 2240.013936896766/1154.5200026649222/280/699//
        '[KFPyBIeoLBVpJIpgIa7Ne]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" WnXhs0d1-hpjlGoOM8hev/object
          visualData: -519.2224696491793/-29.537935843380215/330/1554/var(--node-color-3)/var(--node-color-3)
        '[LN8DHo33vCFwL7CJ3ygnV]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/history
          visualData: 2182.8016553956577/-1511.3648823370538/230/999/var(--node-color-2)/var(--node-color-2)
        '[N_IuBLNn-i5aG-TJgFF58]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" Pq4w2GacVvITRKocdYza7/input1
          visualData: 3063.698948213145/-634.963750952992/330/1572//
        '[ODJurltHNQDJ4V7wfThYc]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" Opbyfte5MRFNu5YsoFpzw/document
          visualData: 5457.126173150842/-1089.9381220294451/280/1570//
        '[Opbyfte5MRFNu5YsoFpzw]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" t6dBzDAyWltO2egFWtLEw/stringGraph
          visualData: 5891.2921748706885/-1342.128553171609/330/1570//
        '[P_YHgyPG4JayvP9KbwXcZ]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" sXaO-y1UPPYzNLtmpQCZw/document
          visualData: 5474.598108799564/-225.72853706918883/280/1570//
        '[Pq4w2GacVvITRKocdYza7]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" IJqTXxPN2eOR5TSyVcxyg/role
          visualData: 3459.444071449959/-851.968016442457/230/1570/var(--node-color-2)/var(--node-color-2)
        '[RuT_InG_fJifeLuf0p-ja]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" d0PAVTcOCZeb0W8Lh-Cf7/original
          visualData: 2486.396499455209/-1937.0170770507798/230/1014/var(--node-color-2)/var(--node-color-2)
        '[Tzw1BEigHvrxiJG6Imitg]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" 6j2SwrDcIwLifrtNqNdL_/object
            - output->"Subgraph" 5Hx49_3tx7vg11u5zDxnB/input
          visualData: 975.3542984894425/-120.16410595381419/330/1010/var(--node-color-1)/var(--node-color-1)
        '[UV27QkIL6tpcZkP9kVw5M]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" N_IuBLNn-i5aG-TJgFF58/input
            - value->"Text" cpJ_k3pLpcOKZI4ST9Ic8/input
            - value->"Text" qlQJYz4qkRN9ipLZl95sC/input
          visualData: 2464.944036739152/-1491.8316239283713/230/1537//
        '[WOolU6oaL7Oiht_zsJrpo]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" tZiBIUEeCz0SXW7GrqIVa/object
            - output->"Subgraph" Et3sjdxYDIfmMn_vmhBMN/input
          visualData: 963.6444629165164/405.9164609880693/330/804/var(--node-color-1)/var(--node-color-1)
        '[WnXhs0d1-hpjlGoOM8hev]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
              - $.documentId
          outgoingConnections:
            - match_0->"Escape chars" RuT_InG_fJifeLuf0p-ja/input1
            - match_0->"Subgraph" Tzw1BEigHvrxiJG6Imitg/input
            - match_1->"Escape chars" plGH_lirUh_MZiTXWER08/input1
            - match_1->"Subgraph" GywnVm1WCbBf0jZjzRtUx/input
            - match_2->"Escape chars" I8Hh43o-NCmTGCH8qfDSg/input1
            - match_2->"Subgraph" WOolU6oaL7Oiht_zsJrpo/input
            - match_3->"Text" 5LkY8Mu_v0tqj2jV-I95I/documentId
            - match_3->"Text" H3Fm81x8gTwGXYoLLSlLk/documentId
            - match_3->"Text" IJqTXxPN2eOR5TSyVcxyg/documentId
            - match_3->"Text" c1Jqgt3-BvfFcKroOhntB/documentId
            - match_3->"Text" d0PAVTcOCZeb0W8Lh-Cf7/documentId
            - match_3->"Text" givYg0K4zZa7xCEszaC2A/documentId
          visualData: 76.99416098021987/-8.229871860167082/280/1555//
        '[ZIXdJYxZtpGJqMwyF2iCn]:subGraph "Subgraph"':
          data:
            graphId: lzDkeo10TytZALkz8u7nq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Http Call" bj6qKHb8naMgdzzEfrscJ/req_body
          visualData: 4580.418408899828/-2389.8752189622487/330/1570/var(--node-color-1)/var(--node-color-1)
        '[_xun_79EIycJcd_nUsd24]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" z0SC0f-hMiNR98zXEb2DV/stringGraph
          visualData: 5899.82891439083/-848.4459369993357/330/1570//
        '[aBKTE28_bqxqAkBVmwxdh]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" P_YHgyPG4JayvP9KbwXcZ/object
          visualData: 5127.24691419253/-235.3771813638286/280/1570//
        '[bj6qKHb8naMgdzzEfrscJ]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-social
            useBodyInput: true
            useHeadersInput: false
          visualData: 5002.913113953245/-2850.2167824126627/280/1570/var(--node-color-4)/var(--node-color-4)
        '[c1Jqgt3-BvfFcKroOhntB]:text "Text"':
          data:
            text: |-
              {
                  "crisis": "{{documentId}}",
                  {{input}},
                  "severity": "Low"
              }
          outgoingConnections:
            - output->"Extract JSON" -kgpH0TBjFvfM8H9c9N-8/input
          visualData: 1814.7000668057754/1315.6025667781075/330/697//
        '[cC4p0gQ0N80K8qeWzkC4w]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" givYg0K4zZa7xCEszaC2A/role
          visualData: 3459.4440714499597/-405.59771025351074/230/1570/var(--node-color-2)/var(--node-color-2)
        '[cpJ_k3pLpcOKZI4ST9Ic8]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" cC4p0gQ0N80K8qeWzkC4w/input1
          visualData: 3039.7624594127656/-189.5074067888774/330/1573//
        '[d0PAVTcOCZeb0W8Lh-Cf7]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "High",
                  "crisis": "{{documentId}}",
                  "role": "{{role}}"
              }
          outgoingConnections:
            - output->"Http Call" 2-1stJD-1ZlJeod6DgIgb/req_body
            - output->"Subgraph" ZIXdJYxZtpGJqMwyF2iCn/prompt
          visualData: 3870.878377564634/-1523.1740626914902/330/1570//
        '[eejM-ua-wKdVtsje_wqZj]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" aBKTE28_bqxqAkBVmwxdh/input
          visualData: 4744.195735695329/-236.3420457932926/330/1570//
        '[g8AEP8e2wMiSjZRoBEebV]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-qapairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2955.932231911226/1410.6056998284348/280/848/var(--node-color-4)/var(--node-color-4)
        '[givYg0K4zZa7xCEszaC2A]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "Low",
                  "crisis": "{{documentId}}",
                  "role": "{{role}}"
              }
          outgoingConnections:
            - output->"Http Call" -HvpH3_vlr-lQwwFbODFe/req_body
            - output->"Subgraph" hen_J_f1nA5aWJRW5PB7B/prompt
          visualData: 3843.2452056793486/-277.73538895008653/330/1570//
        '[h5k-44eeEQKUVT6CVVEBp]:subGraph "Subgraph"':
          data:
            graphId: zYlQ2Xk75J--kr6X__Awr
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          outgoingConnections:
            - output->"Text" H3Fm81x8gTwGXYoLLSlLk/input
          visualData: 1339.2994916524865/916.563410057345/330/639/var(--node-color-1)/var(--node-color-1)
        '[hen_J_f1nA5aWJRW5PB7B]:subGraph "Subgraph"':
          data:
            graphId: lzDkeo10TytZALkz8u7nq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Http Call" u4yi6KXb3H37woKSn8Csn/req_body
          visualData: 4570.984040381227/-1919.1174550727476/330/1570/var(--node-color-1)/var(--node-color-1)
        '[jtb7T-N-15zAQ1KWlv6GZ]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" _xun_79EIycJcd_nUsd24/document
          visualData: 5427.201848759994/-572.3154230317177/280/1570//
        '[khiwBEZ1TBidGeoldXUHD]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-qapairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2953.4384105711506/917.8690320322308/280/847/var(--node-color-4)/var(--node-color-4)
        '[plGH_lirUh_MZiTXWER08]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" IJqTXxPN2eOR5TSyVcxyg/original
          visualData: 2461.856207528469/-1207.0793160880717/230/1285/var(--node-color-2)/var(--node-color-2)
        '[qlQJYz4qkRN9ipLZl95sC]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" BEL1Tnw5MgkmBkHJWWrBa/input1
          visualData: 3006.2283935755627/-1158.862270497228/330/1571//
        '[r_OUNHMUHxIBSOwGbZRWT]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                  "detail": "{{detail}}",
                  "entity": "{{documentId}}",
                  "sub-entity": "",
                  "role": "{{role}}"
              }
          visualData: 3877.92003797699/-1894.3207528366815/330/1570//
        '[sXaO-y1UPPYzNLtmpQCZw]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" 5yprqq763NjbIsevY0tq0/stringGraph
          visualData: 5903.91210352728/-442.3597188769522/330/1570//
        '[sy6hucwRj-4x7Bc7byq6Q]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" 8WRU16msc0m6A1wEL3qDe/input1
          visualData: 1780.559776762585/-1714.9595776297851/330/999//
        '[t6dBzDAyWltO2egFWtLEw]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 6394.230610639208/-1069.9852877756584/330/1570/var(--node-color-1)/var(--node-color-1)
        '[tZiBIUEeCz0SXW7GrqIVa]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" zhfkXkn33LhKLQQgwWFkb/input
            - match_1->"Stringify history" xeFmdBAsiVhzX2DvcnF6l/input1
          visualData: 1430.7136869796282/280.9090053297521/280/1282//
        '[tv62jd9FoE96MDsSQyiow]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" IJqTXxPN2eOR5TSyVcxyg/history
          visualData: 2177.4675206122474/-634.1625215380815/230/1000/var(--node-color-2)/var(--node-color-2)
        '[u4yi6KXb3H37woKSn8Csn]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-social
            useBodyInput: true
            useHeadersInput: false
          visualData: 5003.392597483731/-2004.6385044527447/280/1570/var(--node-color-4)/var(--node-color-4)
        '[wOjyfm5GpYlcB2L_GOh87]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http Call" khiwBEZ1TBidGeoldXUHD/req_body
          visualData: 2247.9823023715626/862.086963157283/280/698//
        '[xeFmdBAsiVhzX2DvcnF6l]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" givYg0K4zZa7xCEszaC2A/history
          visualData: 2171.1894668266773/241.46585480912967/230/1003/var(--node-color-2)/var(--node-color-2)
        '[yprS_XnqPy0aumVa4bQ3i]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" IJqTXxPN2eOR5TSyVcxyg/detail
            - output1->"Text" _xun_79EIycJcd_nUsd24/response
          visualData: 2187.1886029953403/-1056.7589257334193/230/1557/var(--node-color-2)/var(--node-color-2)
        '[z0SC0f-hMiNR98zXEb2DV]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 6409.414034376543/-679.7296899867787/330/1570/var(--node-color-1)/var(--node-color-1)
        '[zS1BJ-fC48CLNOPqpbhn5]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" BFvuIXOPmjhMuvzfJ5qmG/input
            - match_1->"Stringify history" tv62jd9FoE96MDsSQyiow/input1
          visualData: 1421.8087955934404/-812.9255378830055/280/1001//
        '[zhfkXkn33LhKLQQgwWFkb]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Escape chars" 53VGWoy2POv4xS_sCHelY/input1
          visualData: 1751.460762638661/37.157313664175376/330/1006//
    BCFHJ9h-RbyROga-bUGnp:
      metadata:
        description: ""
        id: BCFHJ9h-RbyROga-bUGnp
        name: Universal - Persona synthesis
      nodes:
        '[5d9jLCLYo4gOOu2uC0wmT]:httpCall "HTTP - Persona"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useHeadersInput: false
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" uBgUKe7NIJg4TftZeFaM0/object
            - res_body->"Text" hqtNpLYtJCqH93aleO9cw/input
          visualData: 1000.9672944749254/470.439545164433/280/2079/var(--node-color-4)/var(--node-color-4)
        '[AJVeux02nTwU8EHVBMuMR]:httpCall "HTTP - Create persona"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 3469.6384479161675/903.8348707698312/280/2096/var(--node-color-4)/var(--node-color-4)
        '[Em3NlDWw4Rs1GpIkrIqmo]:text "CRISIS ID GEN-ALPHA"':
          data:
            body: ""
            text: ql7u4ceuyiqhb868mjb8x065
          outgoingConnections:
            - output->"Text" fwK8F3gNLgyFNfE0rDqTf/documentId
            - output->"Text" zAImHvMv-JWeSRSfaBamu/documentId
          visualData: 179.53036710300438/620.3731412017144/330/2070//
        '[R_94EasDYDveLSCh4a0Iq]:assemblePrompt "Assemble Prompt"':
          outgoingConnections:
            - prompt->"Chat" y3i_pcQ-UsgVt5gqDbf0O/prompt
          visualData: 1660.6913038617563/1369.9605768033273/280/2087//
        '[fwK8F3gNLgyFNfE0rDqTf]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You will be given the name and profile of an audience segment for
              a PR campaign.


              You will create some synthetic data that defines their persona such that this can be used for message testing.


              The required output format is below.


              You should generate a list of demographic markers relationf to interests, values, mpotivations and pains.


              Ensure that the documentId field is identical to the incoming value of {{documentId}}

              You should return the JSON only with no commentary or markdown.


              {
                documentId": "{{documentId}}",
                "interests": [
                  "Environmental and social justice",
                  "Grassroots campaigns",
                  "Protests and public advocacy",
                  "Ethical supply chains",
                  "Sustainable innovation",
                  "Whistleblower journalism",
                  "Community organising",
                  "Boycott movements",
                  "Human rights issues",
                  "Corporate accountability"
                ],
                "values": [
                  "Transparency",
                  "Equity and fairness",
                  "Sustainability",
                  "Democratic participation",
                  "Power redistribution",
                  "Ethical leadership",
                  "Long-term impact",
                  "Systemic change",
                  "Truth-telling",
                  "Intersectionality"
                ],
                "motivations": [
                  "Driving systemic change",
                  "Exposing unethical practices",
                  "Mobilising public opinion",
                  "Defending vulnerable communities",
                  "Holding power to account",
                  "Pushing for legislative reform",
                  "Raising awareness",
                  "Protecting the environment",
                  "Reclaiming narratives",
                  "Demanding corporate responsibility"
                ],
                "pains": [
                  "Greenwashing or performative activism",
                  "Corporate opacity",
                  "Lack of accountability",
                  "Tokenistic engagement",
                  "Slow or cosmetic policy change",
                  "Being misrepresented in media",
                  "Insufficient legal protection",
                  "Public fatigue or apathy",
                  "Censorship or platform bans",
                  "Institutional resistance"
                ]
              }
          outgoingConnections:
            - output->"Chat" y3i_pcQ-UsgVt5gqDbf0O/systemPrompt
          visualData: 2068.551296641065/714.1325485468967/330/2091//
        '[gjV8NF9JQ0J7aYOWLLwJx]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          visualData: 79.70650156738905/808.7596060808414/330/2069/var(--node-color-3)/var(--node-color-3)
        '[hqtNpLYtJCqH93aleO9cw]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 1443.5149114406513/281.3656073676411/330/2073//
        '[qS4_YaWt0Eu-2rSVeDHsR]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"HTTP - Create persona" AJVeux02nTwU8EHVBMuMR/req_body
          visualData: 2935.735420963605/1205.93564043605/280/2109//
        '[sw2liNALjhGKu-7fPStHO]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://crisis-comms.vercel.app/api/submit-persona/
          outgoingConnections:
            - output->"HTTP - Create persona" AJVeux02nTwU8EHVBMuMR/url
          visualData: 2964.217260850778/925.5151361667379/330/2108//
        '[uBgUKe7NIJg4TftZeFaM0]:destructure "Destructure"':
          data:
            paths:
              - $.data.personality
              - $.data.profile
          outgoingConnections:
            - match_0->"Assemble Prompt" R_94EasDYDveLSCh4a0Iq/message1
            - match_1->"Assemble Prompt" R_94EasDYDveLSCh4a0Iq/message2
          visualData: 1405.9481854481012/715.4875651342031/280/null//
        '[y3i_pcQ-UsgVt5gqDbf0O]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" qS4_YaWt0Eu-2rSVeDHsR/input
          visualData: 2544.162118785708/1121.9925413262058/230/2090//
        '[zAImHvMv-JWeSRSfaBamu]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/personas/{{documentId}}
          outgoingConnections:
            - output->"HTTP - Persona" 5d9jLCLYo4gOOu2uC0wmT/url
          visualData: 585.8135110596385/899.4690043580789/330/2092//
    EfrNMYIRnDPH9b2qi_inj:
      metadata:
        description: ""
        id: EfrNMYIRnDPH9b2qi_inj
        name: Advisory - Severity - Scale
      nodes:
        '[P3SYMfFBNNYuWbXxdSp8d]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1875.5338243402894/103.66301122119557/330/1084/var(--node-color-3)/var(--node-color-3)
        '[QB5egqbszyjG1nUgB5paM]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/conversations
            useUrlInput: true
          outgoingConnections:
            - json->"Chat" SKYkoImNVIomPCw2QpDoA/prompt
            - json->"Destructure" e1nMc32NAjbiaSQ1DTP_y/object
          visualData: 156.40648292293952/-159.99827488955293/280/1063/var(--node-color-4)/var(--node-color-4)
        '[SKYkoImNVIomPCw2QpDoA]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" TML2qP4sSbstAq1bXRm1y/input
          visualData: 986.5394461457543/-203.99314896184194/230/1070//
        '[TML2qP4sSbstAq1bXRm1y]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" P3SYMfFBNNYuWbXxdSp8d/value
          visualData: 1379.9068275470765/98.04230236194954/330/1071//
        '[bgzAE5faFdMAcBxE1TEfN]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" na8CDrlRN_EKe9VlVLzqK/input
          visualData: -785.9838440983992/-167.4789632019661/330/1083/var(--node-color-3)/var(--node-color-3)
        '[e1nMc32NAjbiaSQ1DTP_y]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].Topics.stories
          visualData: 640.6045345686065/242.9473639799578/280/1046//
        '[lztre-AS2RFVS6QlVfs1K]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a media analyst working within a PR crisis response team.
              Your role is to assess the *scale* of a potential crisis based on
              how widely it has been seen by the public.


              You will be provided with a small JSON object gicing you a **reach number**, representing how many people saw or engaged with the story.


              The JSON object looks roughly like this:


              {
                "crisisId": "dky8i30kisowxhuupwo8iz5l",
                "crisisTitle": "Nestlé India Criticised for Prioritising Taste over Health in Kids’ Food",
                "totalReach": 8935000,
                "socialReach": 7690000,
                "newsReach": 1245000
              }


              ### Instructions:


              Based on the total number of views in the "totalReach" field, use the following scale to rate the overall **scale of coverage** from 1 to 10:


              - 1-2: Fewer than 10,000 total views (very low visibility)

              - 3-4: 10,000 to 100,000 total views (moderate visibility)

              - 5-6: 100,001 to 500,000 total views (regional or niche-wide reach)

              - 7-8: 500,001 to 2,000,000 total views (national or high-profile online visibility)

              - 9: 2,000,001 to 5,000,000 views (very high visibility)

              - 10: More than 5,000,000 views (widespread national or international coverage)


              2. Create a short piece of copy for the rationale that details the socialReach, the newReach and the totalReach, with an explanation for the overall numeric score rating.


              3. Return the following JSON object:


              {
                "severity_scale": {
                  "score": [RATING],
                  "rationale": [The rationale copy]
              }


              ADDITIONAL NOTES

              ✅ If there was no data in the incoming prompt. Set the "rationale" field to say "We are still looking for mentions relating to this topic, please come back later".
          outgoingConnections:
            - output->"Chat" SKYkoImNVIomPCw2QpDoA/systemPrompt
          visualData: 495.4667382592778/-611.2041237801709/330/1085/var(--node-color-2)/var(--node-color-2)
        '[na8CDrlRN_EKe9VlVLzqK]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://crisis-comms.vercel.app/api/reach-summary?id={{input}}&type=crisis
          outgoingConnections:
            - output->"Http Call" QB5egqbszyjG1nUgB5paM/url
          visualData: -322.98595219280986/-176.8603172160685/330/1082/var(--node-color-2)/var(--node-color-2)
    GHgi_Qdv5HEfN9Cwup8cY:
      metadata:
        description: Estimate crisis severity
        id: GHgi_Qdv5HEfN9Cwup8cY
        name: Advisory - Severity - Master
      nodes:
        '[-z50Fnu2D56A10PrKG8bh]:subGraph "Subgraph"':
          data:
            graphId: EfrNMYIRnDPH9b2qi_inj
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message1
          visualData: 952.1505568885873/-238.14683473159477/330/80/var(--node-color-1)/var(--node-color-1)
        '[7TeQ6pCv2o5V2YXCcjDgF]:assemblePrompt "Assemble Prompt"':
          outgoingConnections:
            - prompt->"Chat" _s43ZTL5W4a5ldiyC7j3k/prompt
          visualData: 1520.034267464906/146.81349945678429/280/1462//
        '[7ouISIuZoDgTyf0yhM7sj]:destructure "Destructure"':
          data:
            paths:
              - $.data.title
              - $.data.date
              - $.data.description
              - $.data.crisis
            text: ""
          outgoingConnections:
            - match_2->"Subgraph" tSneJ2F42M20RGsm8W9u_/input
            - match_2->"Subgraph" ykrdQorXBm6sTD0CYykhr/input
            - match_3->"Subgraph" -z50Fnu2D56A10PrKG8bh/input
            - match_3->"Subgraph" 9LbLUH9DXSm4aUH_vBpcw/input
            - match_3->"Subgraph" k6jy8_Nk5sKxENwH9aZ6N/input
            - match_3->"Text" YW0DtNVN_8ZoHkfKNGC52/input
          visualData: 200.42723207197824/260.98481720614393/280/1105//
        '[9LbLUH9DXSm4aUH_vBpcw]:subGraph "Subgraph"':
          data:
            graphId: -eizVpxv9JBIHuJFio6wd
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message4
          visualData: 954.9104811826115/162.70519030652952/330/1101/var(--node-color-1)/var(--node-color-1)
        '[KfOHARDNuJGbsL7wsQRjB]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: severity
          visualData: 3118.7347660534633/134.10866784181292/330/1455/var(--node-color-3)/var(--node-color-3)
        '[YF20gMQ92bGqsY4vwMMbt]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 3546/516/280/1457/var(--node-color-4)/var(--node-color-4)
        '[YW0DtNVN_8ZoHkfKNGC52]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"Http Call" YF20gMQ92bGqsY4vwMMbt/url
          visualData: 2997.2219128174493/426.284438256349/330/1465//
        '[_FwqVLMhnvJzzdKNQ6sPG]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" 7ouISIuZoDgTyf0yhM7sj/object
          visualData: -234.27036317976768/137.96410395786404/330/1470/var(--node-color-3)/var(--node-color-3)
        '[_s43ZTL5W4a5ldiyC7j3k]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" vzD1SMeR-en172gQVjSp2/input
            - response->"Text" q4J6Cr_USUSIiqH2rVE7p/input
          visualData: 2030.3673332067467/298.02329671362577/230/109//
        '[ez9cYYrN1iMIypvzWQBmg]:extractJson "Extract JSON"':
          visualData: 122.28820819838799/673.5815786602941/280/1466//
        '[k6jy8_Nk5sKxENwH9aZ6N]:subGraph "Subgraph"':
          data:
            graphId: _7ny001Rtlr9P7w3EfY8D
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message3
          visualData: 953.7050009619236/-22.318816612781937/330/1098/var(--node-color-1)/var(--node-color-1)
        '[kvM70I68-pUwFzV4NG5ZU]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a data processor reviewing a corporate crisis impact
              assessment represented as a JSON object.


              The object includes the following 5 severity dimensions:

              	•	severity_scale - a JSON object with a single numeric items for score and a rationale field
              	•	severity_emotionalintensity - individual scores for customers, employees, investors
              	•	severity_influence - a single numeric score
              	•	severity_momentum - a single numeric score
              	•	severity_boycottrisk - individual scores for customers, employees, investors

              Your task:


              1.	Calculate an average score for each of the three stakeholder groups:
              	•	Customers
              	•	Employees
              	•	Investors

              2.	For each group, average the following five values:
              	•	severity_scale.[group].score
              	•	severity_influence.score
              	•	severity_momentum.score
              	•	severity_emotionalintensity.[group].score
              	•	severity_boycottrisk.[group].score

              3.	Apply the following weightings to each of the five metrics:


              {
                "severity_scale": 1,
                "severity_emotionalintensity": 1,
                "severity_influence": 1,
                "severity_momentum": 1,
                "severity_boycottrisk": 1
              }


              4.	Normalize the result and return a rounded average score between 1 and 10 for each stakeholder group. Round the number up or down to the nearest integer.


              5.	Calculate a fourth value, overall_average_score, as the mean of the three stakeholder averages.


              6.	Based on the overall score, assign a summary severity level using this scale:
              	•	If overall_average_score < 4: "Low"
              	•	If 4 ≤ score < 7: "Medium"
              	•	If score ≥ 7: "High"

              ✅ Output Format:


              Return a JSON object with two top-level keys:
              	1.	"severity" - the final summary string: "High", "Medium", or "Low"
              	2.	"severity_logic" - an object containing:
              	•	the original input JSON
              	•	the added average_score_customers, average_score_employees, and average_score_investors

              The final structure must look like this:


              {
              	"data": {
              		"severity": "High",
              		"severity_logic": {
              			...original data and new average fields...
              		}
              	}
              }


              Do not include any explanations, calculations, markdown formatting, or stray characters. Return only the final valid UTF-8 JSON object.
          outgoingConnections:
            - output->"Chat" _s43ZTL5W4a5ldiyC7j3k/systemPrompt
          visualData: 1852.927033839741/-224.3011851599706/330/1463/var(--node-color-2)/var(--node-color-2)
        '[q4J6Cr_USUSIiqH2rVE7p]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 2432.447930457893/218.98181178391317/330/107//
        '[tD42EuwVRmnv2Rog5xSJv]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": {
                  "severity": "Unknown",
                  "title": "Child Labor Allegations in Cocoa Supply Chain",
                  "date": "2025-06-26",
                  "description": "Candy company Mars uses cocoa harvested by kids as young as 5 in Ghana: CBS News investigation\n\nIn the blistering heat, CBS News found children in Ghana as young as 5 years old using machetes nearly as big as themselves to harvest the cocoa beans that end up in some of America's most-loved chocolates. Our team traveled across Ghana's remote cocoa belt to visit small subsistence farms that supply the U.S. chocolate giant Mars, which produces candies including M&Ms and Snickers.\n\nWe found children working at each one of the farms — despite the company's vow to have systems in place to eradicate child labor in its supply chain by 2025.\n\nMars has also boasted about rescuing thousands of children, who are listed as beneficiaries of what it calls a robust monitoring system meant to keep children off cocoa plantations and in schools.\n\nCBS News exclusively obtained copies of these lists from a whistleblower and was able to confirm that some of the listed children were still working in the fields.\n\nMunira, 15, is one of those children. She has worked in the cocoa fields since she was 5 years old. Education is a luxury, with her school an hour-long walk away and transportation options expensive. Last year, her family harvested only one bag of decent-quality cocoa. A 140-pound bag of the product fetches only about $115.",
                  "crisis": "msaj64ic64x0x8tz284rbh9u"
                }
              }
          outgoingConnections:
            - output->"Extract JSON" ez9cYYrN1iMIypvzWQBmg/input
          visualData: -288.01409446907525/676.572646454737/330/1469//
        '[tSneJ2F42M20RGsm8W9u_]:subGraph "Subgraph"':
          data:
            graphId: TIrXJT0lI1gQdU0jtzkhz
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message2
          visualData: 955.4057306610589/395.5980908963679/330/1100/var(--node-color-1)/var(--node-color-1)
        '[vzD1SMeR-en172gQVjSp2]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" KfOHARDNuJGbsL7wsQRjB/value
            - output->"Http Call" YF20gMQ92bGqsY4vwMMbt/req_body
          visualData: 2476.083253749114/562.6404419130982/280/130//
        '[ykrdQorXBm6sTD0CYykhr]:subGraph "Subgraph"':
          data:
            graphId: jOpSxxKf2JqdCjND_3e_G
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" 7TeQ6pCv2o5V2YXCcjDgF/message5
          visualData: 958.0479475145355/595.53577318013/330/136/var(--node-color-1)/var(--node-color-1)
    InjRSbXpuhFO-7TgZ2VyH:
      metadata:
        description: Apply best practices and create Q&A statements
        id: InjRSbXpuhFO-7TgZ2VyH
        name: Universal - HS write & message test
      nodes:
        '[0EbhcNDiOXpDQl9tMtuXa]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 8WowafyCVuyoMEqOjxEb9/object
          visualData: 176.102302390815/546.1172685778872/280/2080//
        '[8WowafyCVuyoMEqOjxEb9]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" C0QNTN8bcNS9fxutN7Kpq/input
            - match_0->"Text" WWZ_Br-DoPfrp5Mv77_V1/entity
          visualData: 602.3647326512285/493.7380822247168/280/2078//
        '[C0QNTN8bcNS9fxutN7Kpq]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect entity" L1g1ELpTdbius2orNeo5T/url
          visualData: 1581.783646790868/1451.2315457157738/330/2075//
        '[DMxVeVlMa75fqxCZotlHI]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" WWZ_Br-DoPfrp5Mv77_V1/story
          visualData: 2821.5476720776446/1539.597719156266/230/2076/var(--node-color-2)/var(--node-color-2)
        '[L1g1ELpTdbius2orNeo5T]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" uLmm__QEitLErk6lytdsX/object
          visualData: 2050.952130792442/1510.1896749306513/280/2058/var(--node-color-4)/var(--node-color-4)
        '[ODCnEZmry4bCdcuVFCBko]:destructure "Destructure"':
          data:
            paths:
              - $.detail
          outgoingConnections:
            - match_0->"Escape chars" eTaFikaSKR_tXB6Cuak6w/input1
          visualData: 1729.9370826875308/1048.9969784471757/280/2066//
        '[TG8jDJl5_dlO5g6ZyRowt]:httpCall "HTTP - Submit holding statement"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-entity-holdingstatement
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Destructure" jUqha9pAWWAy45jVSHF5e/object
          visualData: 1209.2768326401124/668.0615533048633/280/2054/var(--node-color-4)/var(--node-color-4)
        '[Uzi8-tpk-yiTMIZU_glEY]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" 0EbhcNDiOXpDQl9tMtuXa/input
            - data->"Subgraph" oD8NNqTG5FgUeJmUhtJda/input
          visualData: -285.73357416289224/558.299951421568/330/2073/var(--node-color-3)/var(--node-color-3)
        '[VF4ca2rN_S4znHxplZ1Hq]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" ODCnEZmry4bCdcuVFCBko/object
          visualData: 1064.736682251785/1226.338117622543/280/2061//
        '[WWZ_Br-DoPfrp5Mv77_V1]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "holding_statement",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisis": "{{entity}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" vhOxQ8Pd9KDEo9NCGbsQX/stringGraph
          visualData: 3355.2885691657734/1060.5064776340726/330/2070//
        '[eTaFikaSKR_tXB6Cuak6w]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" WWZ_Br-DoPfrp5Mv77_V1/response
          visualData: 2200.1429114842176/869.6057550596502/230/2068/var(--node-color-2)/var(--node-color-2)
        '[jUqha9pAWWAy45jVSHF5e]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" WWZ_Br-DoPfrp5Mv77_V1/document
          visualData: 1908.392287170366/650.14101620553/280/2041//
        '[oD8NNqTG5FgUeJmUhtJda]:subGraph "Subgraph"':
          data:
            graphId: igOxpBJfjUy_hFWfY9tSi
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Extract JSON" VF4ca2rN_S4znHxplZ1Hq/input
            - output->"HTTP - Submit holding statement"
              TG8jDJl5_dlO5g6ZyRowt/req_body
          visualData: 514.7389562305565/1049.6075998191504/330/2052/var(--node-color-1)/var(--node-color-1)
        '[uLmm__QEitLErk6lytdsX]:destructure "Destructure"':
          data:
            paths:
              - $.data.description
          outgoingConnections:
            - match_0->"Escape chars" DMxVeVlMa75fqxCZotlHI/input1
          visualData: 2426.889035733013/1740.6664714931628/280/2077//
        '[vhOxQ8Pd9KDEo9NCGbsQX]:subGraph "Subgraph"':
          data:
            graphId: lVKdxXB5CQuDxfEkNhk_k
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 3863.22849397689/1276.7121197630045/330/2071/var(--node-color-1)/var(--node-color-1)
    KpT800xhGZdwy4QxONPKN:
      metadata:
        description: ""
        id: KpT800xhGZdwy4QxONPKN
        name: Advisory - Scenarios - Create
      nodes:
        '[LvY-_lVMY_t8lNzypgQPH]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" czMnCg4tMq2UNYX-apRAi/role
          visualData: 174.1841578432909/182.2574549266893/230/908/var(--node-color-5)/var(--node-color-5)
        '[NBBoEpRdNhXaj_342LBYq]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"HTTP - Get tone" a-18mwhrkh4qEPOJw9uJG/url
          visualData: -779.1975027897024/-159.7514616186138/330/1767//
        '[a-18mwhrkh4qEPOJw9uJG]:httpCall "HTTP - Get tone"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" m49JehlgwqAk-XHvKBinJ/object
          visualData: -350.9279049945599/-420.0629033782294/280/1767/var(--node-color-4)/var(--node-color-4)
        '[cZ0ftay5oLWMqkrWqtnXp]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 1758/528/330/897/var(--node-color-3)/var(--node-color-3)
        '[czMnCg4tMq2UNYX-apRAi]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be given a JSON object with a number of data points including "title",  "date" and "description". 


              It is your job to predict possible risk scenarios based on the crisis defined in the prompt and to give details of potential outcomes for each case.


              Each time you are given a prompt you should generate a total of 3 short scenarios to demonstrate a possible outcome of the crisis described in the prompt.


              You should write 3 possible outcomes: A high risk scenario, a medium risk scenario and a low risk scenario.


              In each case be sure to reference the issue, the location and the date it occured.


              Each of your 3 scenarios should begin with a description of approximately two paragraphs of prose that clearly outlines the potential situation.


              After this description, insert two escaped line breaks (\n\n) followed by 3-4 concise bullet points that explicitly outline potential outcomes.


              GUIDE ON SCALE OF SCENARIOS


              To give an idea of the scale of each scenario, please use the following guide. Keep in mind these are not explicit descriptors but are designed to give a magnitude description of each scale gradation:


              1. Example Parameters of a High-Risk Scenario: 


              Definition: The crisis is having a direct and significant impact on the organisation's operations or reputation.  A severe crisis may be characterised by significant negative discussion of the organisation in traditional or social media.  Any crisis with a significant legal element would be a severe crisis.  Any crisis involving injury or death is a severe crisis. Any crisis that involves criticism by government or official regulators is a severe crisis.   


              2. Example Parameters of a Medium-Risk Scenario: 


              Definition: The crisis is having a crisis that affects operations or reputation, but the impact has either not been felt yet or is not causing high levels of damage or disruption.  Moderate crises may involve damage to property or products, but would not include injury or death.  Moderate crisis may include public criticism, but not at high levels.  


              3. Example Parameters of a Low-Risk Scenario: 


              Definition: Minor incidents have limited or no impact on reputation or operations.  They are either not yet known publicly, or are not being discussed in any significant volume.  The incident is not likely to escalate or get worse.  A minor incident would not cause harm to operations or reputation if it were to become public.  


              ⚠️ FORMAT GUIDANCE

              For all line breaks or paragraph breaks (including within paragraphs or bullet spacing), use escaped newline characters (\n) — not actual carriage returns or line breaks in the text.


              Avoid any trailing new line characters at the end of scenario descriptions.


              You should also generate a short summary title descriptor for each scenario of fewer than 10 words that describes the scenario outcome at a high level.


              Output the content as a JSON object ONLY in the following format:


              {
                  "high-title": "High risk summary title",
                  "high": "High risk scenario body content",
                  "medium-title": "Medium risk summary tile",
                  "medium": "Medium risk scenario body content",
                  "low-title": "Low risk summary title",
                  "low": "Low risk scenario body content"
              }
          description: Scenario generation system prompt
          outgoingConnections:
            - output->"Chat" f4QfJvKebW1dU6H8AJ13r/systemPrompt
          visualData: 522.4147762859524/225.79663544028764/330/1768//
        '[ddFSw_LIPxK0zXCSh9Zqo]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be given a JSON object with a number of data points including "title",  "date" and "description". 


              It is your job to predict possible risk scenarios based on the crisis defined in the prompt and to give details of potential outcomes for each case.


              Each time you are given a prompt you should generate a total of 3 short scenarios to demonstrate a possible outcome of the crisis described in the prompt.


              You should write 3 possible outcomes: A high risk scenario, a medium risk scenario and a low risk scenario.


              In each case be sure to reference the issue, the location and the date it occured.


              Each of the 3 scenarios should begin with a description of approximately two paragraphs of prose that clearly outlines the potential situation.


              After this description, insert two escaped line breaks (\n\n) followed by 3-4 concise bullet points that explicitly outline potential outcomes.


              ⚠️ For all line breaks or paragraph breaks (including within paragraphs or bullet spacing), use escaped newline characters (\n) — not actual carriage returns or line breaks in the text.


              Avoid any trailing new line characters at the end of scenario descriptions.


              You should also generate a short summary title descriptor for each scenario of fewer than 10 words that describes the scenario outcome at a high level.


              Output the content as a JSON object ONLY in the following format:


              {
                  "high-title": "High risk summary title",
                  "high": "High risk scenario body content",
                  "medium-title": "Medium risk summary tile",
                  "medium": "Medium risk scenario body content",
                  "low-title": "Low risk summary title",
                  "low": "Low risk scenario body content"
              }
          description: Scenario generation system prompt
          visualData: 893.3672217522919/111.03584801662197/330/1770/var(--node-color-6)/var(--node-color-6)
        '[f4QfJvKebW1dU6H8AJ13r]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: High risk scenario
          outgoingConnections:
            - response->"Extract JSON" xFOuKLadBzj0d_RNnrzN5/input
          visualData: 943/558/230/901//
        '[m49JehlgwqAk-XHvKBinJ]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_0->"TEXT - Define role" riku0ppgEMw8SVaaQdp6w/tone
            - match_1->"TEXT - Define role" riku0ppgEMw8SVaaQdp6w/task
            - match_2->"TEXT - Define role" riku0ppgEMw8SVaaQdp6w/company
          visualData: 13.589073097536527/-19.65608853397032/280/1767//
        '[nrW4PhSpsORIwFKPjOwSu]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" f4QfJvKebW1dU6H8AJ13r/prompt
          visualData: 23/755/330/909/var(--node-color-3)/var(--node-color-3)
        '[riku0ppgEMw8SVaaQdp6w]:text "TEXT - Define role"':
          data:
            text: >-
              You are a crisis communications public relations (PR) professional
              working for {{company}}.


              {{task}}


              IMPORTANT

              Your writing tone is {{tone}}.
          description: Role definition copy
          visualData: 446.740355555172/-92.99582654332448/330/1767/var(--node-color-3)/var(--node-color-3)
        '[xFOuKLadBzj0d_RNnrzN5]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" cZ0ftay5oLWMqkrWqtnXp/value
          visualData: 1358.421582439276/731.3571609080569/280/907//
    SZiVEz7iWEzO58OzSARGq:
      metadata:
        description: ""
        id: SZiVEz7iWEzO58OzSARGq
        name: Advisory - Mitigation
      nodes:
        '[-9y7bKgt9t-UZOHqbplYb]:httpCall "HTTP - Get crises"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useHeadersInput: false
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" u7Rn-6O_j8eqFduEmxdI9/object
          visualData: 859.2572493121296/7.424121481928296/280/1518/var(--node-color-4)/var(--node-color-4)
        '[-SR7aCK96w8jYJskz2M82]:httpCall "HTTP - Insert mitigation"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            url: ""
            useBodyInput: true
            useUrlInput: true
          visualData: 3624.3532879579857/252.73167273078911/280/1518/var(--node-color-4)/var(--node-color-4)
        '[2qTXQQ-mueH3dYlY6HDiL]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"HTTP - Insert mitigation" -SR7aCK96w8jYJskz2M82/url
          visualData: 2463.308262134986/34.68298699565935/330/1518//
        '[9FDqQSeUUwDtGPcR4rZhL]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=company&populate=region
          outgoingConnections:
            - output->"HTTP - Get crises" -9y7bKgt9t-UZOHqbplYb/url
          visualData: 379.4852567129502/242.2963491594785/330/1518//
        '[HxY7Vco1zpsd8-UCSkyLy]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: Mitigation
          visualData: 3575.376671052552/852.1333340959568/330/1518/var(--node-color-3)/var(--node-color-3)
        '[Lt8vpUsRKyAho1XDe4oi3]:text "Text"':
          data:
            body: ""
            headers: ""
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/personas?filters%5Bcrises%5D%5BdocumentId%5D%5B$contains%5D={{crisis}}
          outgoingConnections:
            - output->"HTTP - Get personas" pDTq9inWYMOHOVRtxKqIf/url
          visualData: 412.58379640431656/878.1210697021618/330/1518//
        '[RgRRIeOl8kbmWyNY6FMnr]:extractJson "Extract JSON"':
          visualData: 1553.3785161763567/478.94518527576383/280/1518//
        '[_ckdvCzJS4lQbYUtcxiys]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" 2qTXQQ-mueH3dYlY6HDiL/input
            - data->"Text" 9FDqQSeUUwDtGPcR4rZhL/input
            - data->"Text" Lt8vpUsRKyAho1XDe4oi3/crisis
          visualData: -232.57762674817556/371.83922172583124/330/1520/var(--node-color-3)/var(--node-color-3)
        '[dT8AezNdPD0yf66YE3Akm]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a senior crisis communications strategist advising a major
              FMCG (fast-moving consumer goods) company facing a significant PR
              crisis. Your task is to generate a comprehensive set of specific,
              actionable, and realistic mitigation strategies that minimize
              reputational harm and address stakeholder concerns.


              Requirements:
              	•	Propose mitigation strategies categorized by priority:
              	•	Immediate (0-48 hours)
              	•	Medium (2-4 weeks)
              	•	Long (1+ months)
              	•	Tailor your recommendations to the FMCG sector, with emphasis on food and beverage.
              	•	Ensure all suggestions are legally appropriate, considering potential regulatory scrutiny, liability, and public backlash.
              	•	Avoid generic actions; recommendations should reflect the caliber of a high-level corporate reputation advisor managing a real-world crisis.
              	•	Do not repeat or summarize the crisis description or add any editorial framing.
              	•	Do not fill out the owner field. Leave that as null.
              	•	Create a minimum of 3 mitigations per time period.
              	•	Take any regional legal and cultural restrcitons into account.

              Input Variables:
              	•	Geographic Regions:
              {{regions}}
              	•	Primary Stakeholders (JSON format):
              {{stakeholders}}


              Output Instructions:


              All mitigation item should ONLY appear in the "Possible Mitigations" item.


              Generate the output strictly in the following JSON structure, suitable for use in a drag-and-drop mitigation planning interface:


              {
                "columns": [
                  {
                    "id": 1,
                    "title": "Possible Mitigations",
                    "cards": [
                      {
                        "id": 1,
                        "title": "Mitigation strategy title",
                        "description": "Detailed explanation of the action.",
                        "owner": null,
                        "priority": "Immediate"
                      }
                      // Additional cards
                    ]
                  },
                  {
                    "id": 2,
                    "title": "In Progress",
                    "cards": [
                    ]
                  },
                  {
                    "id": 3,
                    "title": "Done",
                    "cards": [
                    ]
                  }
                ]
              }


              Only include valid JSON in your response. Do not include Markdown, explanation, or surrounding commentary.
          outgoingConnections:
            - output->"Chat" hbB1Ycbh1OcW9kmOClMaI/systemPrompt
          visualData: 1947.66802429767/259.49767414275584/330/1518//
        '[hbB1Ycbh1OcW9kmOClMaI]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4-turbo
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Esape chars" j5DK8R0YfI46-D5F9M3YU/input1
          visualData: 2054.7947682974313/865.5730475481939/230/1518//
        '[j0zDABDt5pu8dftQxZ3nM]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                  "data": {
                    "mitigation": "{{input}}"
                  }
                }
          outgoingConnections:
            - output->"HTTP - Insert mitigation" -SR7aCK96w8jYJskz2M82/req_body
          visualData: 3044.9230002912086/1055.5219355813986/330/1525//
        '[j5DK8R0YfI46-D5F9M3YU]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Graph Output" HxY7Vco1zpsd8-UCSkyLy/value
            - output1->"Text" j0zDABDt5pu8dftQxZ3nM/input
          visualData: 2554.7293743452324/775.8011302707007/230/1524/var(--node-color-2)/var(--node-color-2)
        '[pDTq9inWYMOHOVRtxKqIf]:httpCall "HTTP - Get personas"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Text" dT8AezNdPD0yf66YE3Akm/stakeholders
            - res_body->"Extract JSON" RgRRIeOl8kbmWyNY6FMnr/input
          visualData: 1090.662810440584/609.4606810722275/280/1518/var(--node-color-4)/var(--node-color-4)
        '[tm2ajeiD5cZc1OxCFTapr]:text "Text"':
          data:
            normalizeLineEndings: true
            text: dky8i30kisowxhuupwo8iz5l
          visualData: -162.55199158966448/600.539437027118/330/1526//
        '[u7Rn-6O_j8eqFduEmxdI9]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.title
              - $.data.description
              - $.data.region.region
              - $.data.company.title
              - $.data.date
              - $.data.severity
              - $.data.brand
              - $.data.documentId
          outgoingConnections:
            - match_1->"Chat" hbB1Ycbh1OcW9kmOClMaI/prompt
            - match_2->"Text" dT8AezNdPD0yf66YE3Akm/regions
          visualData: 1261.5111465242953/-7.9355592891890865/280/1518//
    TIrXJT0lI1gQdU0jtzkhz:
      metadata:
        description: ""
        id: TIrXJT0lI1gQdU0jtzkhz
        name: Advisory - Severity - Emotional intensity
      nodes:
        '[4-CXAo2JBQr55vA1pyFpi]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" eB-AF2eWf52GBDbMiX6Se/value
          visualData: 827.9186717527157/607.7098605602876/230/20//
        '[6ZaWwKsiGgdVdXRtKJb3C]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" LnDAS8NRLrMyQQ50ndXED/role
          visualData: -1382.0226986418043/485.63407977788967/230/22//
        '[LnDAS8NRLrMyQQ50ndXED]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >
              Your role is {{role}}


              ACTION FOR THIS TASK

              You will be given some text describing a corporate crisis scenario that presents a risk to the company.


              Your task is to estimate the emotional intensity of the scenario for each key stakeholder group:
              	•	Customers
              	•	Employees
              	•	Investors

              You must return a score from 1 to 10, where 10 is the most emotionally severe for that group. Consider how upsetting, distressing, or trust-breaking the situation is for each group based on the text.


              Use the following emotional severity scale as a guideline:


              1. Very Low - Minor annoyance or negligible impact.

              2. Low - Slight concern or frustration, isolated.

              3. Moderate - Awareness of issue, mild reputational unease.

              4. Noticeable - Frustration or criticism becomes visible.

              5. Concerning - Trust begins to erode or ethical issues arise.

              6. Serious - Stakeholders feel misled or personally affected.

              7. Alarming - Escalating concern, calls for accountability.

              8. Critical - Direct harm or significant loss of trust.

              9. Severe - Long-term damage to confidence or wellbeing.

              10. Extreme - Crisis of trust or identity; potential for severed relationships or existential risk.


              For each item add some short text to describe the rationale for why you gave the rating. Use language that makes it clear that the rationale is predictive rather than describing actual outcomes so the reader does not misunderstand the rationale as being actual events.


              Output as a JSON object ONLY in this format:


              {
                "severity_emotionalintensity": {
                  "customers": {
                    "score": 8,
                    "rationale": "Customers have been directly harmed by the faulty product, with widespread media coverage and safety concerns leading to fear and outrage."
                  },
                  "employees": {
                    "score": 5,
                    "rationale": "Employees are concerned about the company's image and potential layoffs but are not directly affected by the incident."
                  },
                  "investors": {
                    "score": 7,
                    "rationale": "Investors fear reputational fallout and regulatory penalties that could affect long-term value, but the business remains operational."
                  }
                }
              }
          outgoingConnections:
            - output->"Chat" 4-CXAo2JBQr55vA1pyFpi/systemPrompt
          visualData: -994.0089025133748/285.12531371706797/1483.8939389042782/16/var(--node-color-2)/var(--node-color-2)
        '[Zuwhu-2EIC9x2facEXJBs]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" 4-CXAo2JBQr55vA1pyFpi/prompt
          visualData: 208.94726938496646/908.239665609297/330/19/var(--node-color-3)/var(--node-color-3)
        '[eB-AF2eWf52GBDbMiX6Se]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1233.6011102299763/570.2513877874702/330/8/var(--node-color-3)/var(--node-color-3)
    WoecD9--01VjQHhXTmwtU:
      metadata:
        description: Interative press release rewriter
        id: WoecD9--01VjQHhXTmwtU
        name: (OLD) PR - Rewrite supervisor agent
      nodes:
        '[6JMB-7JMK_o3mDn4Nyw66]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1813.6176691846756/636.1963994533993/330/866/var(--node-color-3)/var(--node-color-3)
        '[ZqDtSofTEoqAtIupdx6LE]:loopController "Loop Controller"':
          data:
            atMaxIterationsAction: break
            maxIterations: 2
          outgoingConnections:
            - break->"Text" lMF6X1DupFsFWvPRvsKDS/input
            - output1->"Subgraph" pUmp7YYzE2Qb2_bjZOcA4/input
          visualData: 448.2173767164668/1057.9399416194742/280/883//
        '[lMF6X1DupFsFWvPRvsKDS]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" 6JMB-7JMK_o3mDn4Nyw66/value
          visualData: 771.1588915227672/693.2274241079336/330/877//
        '[nQoPwHb3U2PvvKnnx-8Yc]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1Default
          visualData: -385.7726013864726/989.9731066433529/330/887/var(--node-color-3)/var(--node-color-3)
        '[pUmp7YYzE2Qb2_bjZOcA4]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/input1
            - output->"Subgraph" tGjoPWvOpRqQlUEhNXlhw/input
          visualData: 943.5205826682051/1767.6145513624945/330/886/var(--node-color-1)/var(--node-color-1)
        '[tGjoPWvOpRqQlUEhNXlhw]:subGraph "Subgraph"':
          data:
            graphId: hcy2UDhZVh6QP8e0AjKC7
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - Analysis->"Loop Controller" ZqDtSofTEoqAtIupdx6LE/continue
          visualData: 1240.295371560674/1301.6917878280167/330/885/var(--node-color-1)/var(--node-color-1)
    _7ny001Rtlr9P7w3EfY8D:
      metadata:
        description: Estimate the severity of influence
        id: _7ny001Rtlr9P7w3EfY8D
        name: Advisory - Severity - Influence
      nodes:
        '[-3u4TY3RxoDwOwv2PoGAe]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/conversations
            useUrlInput: true
          outgoingConnections:
            - res_body->"Chat" nj_dt62HVgvrZ5wpCrhZA/prompt
          visualData: 728.5227232646456/685.1154374371388/280/1092/var(--node-color-4)/var(--node-color-4)
        '[6bZjrNwERO89tYahpSzuN]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://crisis-comms.vercel.app/api/influence-summary?id={{input}}
          outgoingConnections:
            - output->"Http Call" -3u4TY3RxoDwOwv2PoGAe/url
          visualData: 249.13028814889606/668.2533951106232/330/1092/var(--node-color-2)/var(--node-color-2)
        '[CoJckDxjix8NO-JvBpGPl]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a media analyst working within a PR crisis response team.


              ACTION FOR THIS TASK

              Your role is to assess the influence exposure of a story — meaning how influential are the media and social outlets discussing the story.


              You will receive an object that looks like this:


              {
                "crisisId": "dky8i30kisowxhuupwo8iz5l",
                "crisisTitle": "Nestlé India Criticised for Prioritising Taste over Health in Kids’ Food",
                "influenceScores": [2,1,10,10,10,5,10,10,10,10,3,10,9,10,10,10,10,10,10,10,2,1,10,10,10,5,10,10,10,10,3,10,9,10,7,10,10,4,10,1]
              }


              Each number in the influenceScores array represents a story, and the number represents the influence of that story’s source — on a scale from 1 (low influence) to 10 (very high influence).


              Scoring logic:


              You must produce a single severity_influence score between 1 and 10, that represents the overall influence exposure of the story.


              It is NOT a simple average. Your scoring should be weighted toward prominence of high influence stories:


              ✅ If there is a significant number of 9s or 10s, the overall score should skew high — even if some lower scores exist.


              ✅ If there is a broad mix of medium and low scores (1-5), the score should be lower.


              ✅ If almost all scores are low (1-5), the overall score should reflect low influence exposure.


              ✅ If the story has mostly 10s with just a few lower outliers, the overall score should still be very high.


              Output format:


              Produce a JSON object with this exact format:


              {
                "severity_influence": {
                  "score": [A number from 1 to 10],
                  "rationale": "[A short sentence explaining why you gave that score, referencing the overall pattern of influence scores.]"
                }
              }


              Examples of rationale phrasing:
              	•	“The majority of stories were published on very high influence platforms (9s and 10s), indicating broad and strong exposure.”
              	•	“There is a mix of high and low influence stories, but the large cluster of 10s skews the overall exposure upward.”
              	•	“Influence is mixed and weighted toward medium-tier platforms, leading to a moderate exposure score.”
              	•	“Most stories are on low-influence platforms, with only a few high-profile mentions.”

                ADDITIONAL NOTES
                ✅ If there was no data in the incoming prompt. Set the "rationale" field to say "We are still looking for mentions relating to this topic, please come back later".
          outgoingConnections:
            - output->"Chat" nj_dt62HVgvrZ5wpCrhZA/systemPrompt
          visualData: 857.4828987343444/255.03966694086816/330/1088/var(--node-color-2)/var(--node-color-2)
        '[cQHPUJqbPtRObhSzVS_Ig]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1779.6841057456163/744.0308187896541/330/1093/var(--node-color-3)/var(--node-color-3)
        '[nj_dt62HVgvrZ5wpCrhZA]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" cQHPUJqbPtRObhSzVS_Ig/value
          visualData: 1344.3238002870742/621.6729384805782/230/1090//
        '[zNA61vZ_dE5lnqBcUhUp6]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Text" 6bZjrNwERO89tYahpSzuN/input
          visualData: -213.86760375669326/677.6347491247257/330/1092/var(--node-color-3)/var(--node-color-3)
    a1C0PHzycmkfS-hZRJ7lb:
      metadata:
        description: ""
        id: a1C0PHzycmkfS-hZRJ7lb
        name: Create - Culturescore - Scale
      nodes:
        '[5ez1uAcstnK1rPJdUQCYT]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 3373.2829455518727/2088.513548885576/330/1084/var(--node-color-3)/var(--node-color-3)
        '[BGktFzaa8L9aHk8syNrrt]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://crisis-comms.vercel.app/api/reach-summary?id={{input}}
          outgoingConnections:
            - output->"Http Call" kXdWFK7wQqfGpSPkLdrob/url
          visualData: 1200.1415057387123/2057.0151495127143/330/1610/var(--node-color-5)/var(--node-color-5)
        '[Oj_8jPSwO5x-l4_au9i-A]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" ix80hbk6WjRtGnUgT-PPq/input
          visualData: 2484.2885673573373/1780.8573887025382/230/1070//
        '[Zk3DZqBoV2jzhFSgesJyR]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" BGktFzaa8L9aHk8syNrrt/input
          visualData: 847.2870341397448/1951.4395283891067/280/1609//
        '[gfDbQ--X1mpzdpT5TfzDj]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a media analyst working within a consumer PR team. Your
              role is to assess the *scale* of the opportunity of proposed
              communications campaign based on how widely it has been seen by
              the public.


              You will be provided with a small JSON object gicing you a **reach number**, representing how many people saw or engaged with the story.


              The JSON object looks roughly like this:


              {
                "crisisId": "dky8i30kisowxhuupwo8iz5l",
                "crisisTitle": "Nestlé India Criticised for Prioritising Taste over Health in Kids’ Food",
                "totalReach": 8935000,
                "socialReach": 7690000,
                "newsReach": 1245000
              }


              ### Instructions:


              Based on the total number of views in the "totalReach" field, use the following scale to rate the overall **scale of coverage** from 1 to 10:


              - 1-2: Fewer than 10,000 total views (very low visibility)

              - 3-4: 10,000 to 100,000 total views (moderate visibility)

              - 5-6: 100,001 to 500,000 total views (regional or niche-wide reach)

              - 7-8: 500,001 to 2,000,000 total views (national or high-profile online visibility)

              - 9: 2,000,001 to 5,000,000 views (very high visibility)

              - 10: More than 5,000,000 views (widespread national or international coverage)


              2. Create a short piece of copy for the rationale that details the socialReach, the newReach and the totalReach, with an explanation for the overall numeric score rating.


              3. Return the following JSON object:


              {
                "culturescore_scale": {
                  "score": [RATING],
                  "rationale": [The rationale copy]
              }


              ADDITIONAL NOTES

              ✅ If there was no data in the incoming prompt. Set the "rationale" field to say "We are still looking for mentions relating to this topic, please come back later".
          outgoingConnections:
            - output->"Chat" Oj_8jPSwO5x-l4_au9i-A/systemPrompt
          visualData: 1993.2158594708608/1373.6464138842093/330/1085/var(--node-color-2)/var(--node-color-2)
        '[ix80hbk6WjRtGnUgT-PPq]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" 5ez1uAcstnK1rPJdUQCYT/value
          visualData: 2877.6559487586596/2082.89284002633/330/1071//
        '[kXdWFK7wQqfGpSPkLdrob]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/conversations
            useUrlInput: true
          outgoingConnections:
            - json->"Chat" Oj_8jPSwO5x-l4_au9i-A/prompt
          visualData: 1654.1556041345225/1824.8522627748273/280/1063/var(--node-color-4)/var(--node-color-4)
        '[wTfNoO1vGR-YR_kQv1VEZ]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" y9Kf1rzRxr0C8AUE9JFkR/input
          visualData: 128.9548502386192/1805.9439190335013/330/1608/var(--node-color-3)/var(--node-color-3)
        '[y9Kf1rzRxr0C8AUE9JFkR]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" Zk3DZqBoV2jzhFSgesJyR/object
          visualData: 518.9235917502764/1816.7362075932542/280/1607//
    cGJILKi8TD1YSzAKUAzKV:
      metadata:
        description: The main press room pipeline flow
        id: cGJILKi8TD1YSzAKUAzKV
        name: Advisory - Master
      nodes:
        '[-9u1wOd79FRibDuN_PXTo]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "holding_statement",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" 4xeoHOPZa751TcUptrNTl/stringGraph
          visualData: 7551.914969770921/-1713.4235310925676/330/1312//
        '[-TdYHZM2LJuz23yM_SbNx]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "High",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Create holding statement"
              EdSuIRskNWWxNKlLBgMQh/req_body
          visualData: 5692.102555564887/-2285.0955660182663/330/1071//
        '[0mouFF980bt242hGgYlXk]:setGlobal "Set Global"':
          data:
            dataType: string
            id: documentId
            useIdInput: false
          visualData: -681.6293251009471/1151.865887516662/230/1079//
        '[0qTTZyxV6eaYUo8yr0N4U]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" KCt3dmUgSCv1CL6Nnco0u/history
          visualData: 4719.8214507506855/-767.2835257097495/230/1462/var(--node-color-2)/var(--node-color-2)
        '[1mRKcxaiTgLwLLKdmgtGm]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Set Global" CUV14RQmCdM2ueUbiTCjn/value
          visualData: 1307.5463351034061/134.84206297793511/230/1482/var(--node-color-2)/var(--node-color-2)
        '[2uPrdf3woHnGtAJDrw2Lz]:graphOutput "Graph Output - Document title"':
          data:
            dataType: string
            id: Title
          visualData: -938.057092823623/-22.731978074260127/330/1479/var(--node-color-3)/var(--node-color-3)
        '[4PpdHSOarBvynuMBQSfp0]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Subgraph" gS957dQIpZe538bFQvRMd/input
          visualData: 3119.561038751958/-2253.4746919201866/330/1060//
        '[4xeoHOPZa751TcUptrNTl]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 8039.623480421165/-1518.336986364752/330/1464/var(--node-color-1)/var(--node-color-1)
        '[5Vt_w52al8pELwha4UnRD]:getGlobal "Get Global"':
          data:
            dataType: string
            id: story
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" -9u1wOd79FRibDuN_PXTo/story
            - value->"Text" slwZi5WuxceneksXs_M6Y/story
            - value->"Text" tEzx1gfv3oT5tzEpObm53/story
          visualData: 6712.606186043038/-2640.7520992440213/230/1327//
        '[5tCwdNa9Fme3QWLBifr_T]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" vVX3Yn-222AziZr5PX_5i/input
          visualData: 6450.106162161549/-1671.3024778411764/330/1311//
        '[6vVFzcVSOS2Y2_VHDhdnL]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Graph Output" nT_8sfzahbwZNsPj2AWK0/value
            - data->"Mitigation" ykAfnK8lI7luub7SggyJ0/stringGraph
            - data->"Text" W888kIoF-SH_n2m0tV7Rc/input
            - data->"Text" yUsMVzssmowpwlFaD33G8/entity
          visualData: -2965.3355639550264/633.288353708819/330/1775/var(--node-color-3)/var(--node-color-3)
        '[7eyt6KkrPUqx01ZWsuWGh]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.title
              - $.data.description
              - $.data.region.region
              - $.data.company.title
              - $.data.date
              - $.data.severity
              - $.data.brand
              - $.data.documentId
          outgoingConnections:
            - match_0->"Graph Output - Document title"
              2uPrdf3woHnGtAJDrw2Lz/value
            - match_0->"Text" CocxXqVO7vwIgKSISUEL9/Crisis
            - match_0->"Text" zNdE05qaH8cEWgJgCkWGh/title
            - match_1->"Text" CocxXqVO7vwIgKSISUEL9/Description
            - match_2->"Text" CocxXqVO7vwIgKSISUEL9/Location
            - match_3->"Text" CocxXqVO7vwIgKSISUEL9/Company
            - match_4->"Text" CocxXqVO7vwIgKSISUEL9/Date
            - match_6->"Text" CocxXqVO7vwIgKSISUEL9/Product
            - match_7->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/documentId
            - match_7->"Set Global" 0mouFF980bt242hGgYlXk/value
            - match_7->"Text" CocxXqVO7vwIgKSISUEL9/documentId
            - match_7->"Text" lTDwHyIvD8GtM-vUQWnZJ/documentId
            - match_7->"Text" zNdE05qaH8cEWgJgCkWGh/documentId
          visualData: -1112.456167558564/660.9274817907149/280/425//
        '[8jE-ZpLfAnzdBIVRdCP5R]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" KCt3dmUgSCv1CL6Nnco0u/original
          visualData: 5134.224700632292/-1224.230891837498/230/1078/var(--node-color-2)/var(--node-color-2)
        '[8kQ8t8qRadfNV1_Q0UKef]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" go-76mD_mFK_Pu79briiA/original
          visualData: 5110.966695523628/-1923.3834630157526/230/1076/var(--node-color-2)/var(--node-color-2)
        '[AFc-0rv400chnesKtxyHc]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 8033.453282308793/-962.7351737202993/330/1463/var(--node-color-1)/var(--node-color-1)
        '[Ax5hkueX-YZVwVDb0c62a]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" -9u1wOd79FRibDuN_PXTo/document
          visualData: 7180.508535265784/-1660.6889691170727/280/1311//
        '[BVMuY0r8TcD1bvaQNiT6F]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" -TdYHZM2LJuz23yM_SbNx/history
          visualData: 4744.820852706041/-2141.7890111366323/230/1060/var(--node-color-2)/var(--node-color-2)
        '[BZZSdCliXLEnBwJ_JiFWi]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" rycG3u2QjX1s7Lt8ABerx/input
          visualData: 6497.780341621388/-1019.2427329711078/330/1314//
        '[C1sO8r5dVRpL5QnH7ofZx]:text "Don’t like choc"':
          data:
            body: ""
            text: trg7ingzxb9yo65r87b40dvs
          visualData: -3140.75845776152/62.73760711031275/330/1751//
        '[CUV14RQmCdM2ueUbiTCjn]:setGlobal "Set Global"':
          data:
            dataType: string
            id: story
            useIdInput: false
          visualData: 1631.826223649463/144.90479319948153/230/1460//
        '[CocxXqVO7vwIgKSISUEL9]:text "Text"':
          data:
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}, and the detailed description is {{Description}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.


              The documentId is {{documentId}}
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/prompt
          visualData: -616.6863254955473/704.4978608989321/330/1450//
        '[DOH9j6ldq5b44D5MY0YHO]:chat "Chat"':
          data:
            additionalParameters: []
            body: ""
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            text: >-
              There is an emerging crisis for {{Company}}. That crisis is
              {{Crisis}}.


              The crisis happened on {{Date}} at {{Location}}.


              It relates to the prodcut {{Product}}.


              You should geneate an expanded description of the crisis situation described in the prompt.


              At the top add the title <h1>Crisis Description</h1>\n.


              Output a JSON object in the following format:


              {

              "Crisis Description": [
                  {
                  "Description1": "<h1>Crisis Description</h1>\nText of crisis"
                  }
              ]

              }
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" H2LewNpd8KUIDKEIDZj-K/input
            - response->"Extract JSON" zxftMeqPv_Rfjt9lpoE6Q/input
            - response->"Subgraph" GGEwPqFn8e-aYjpv4Lp3Q/input
          visualData: 209.54528303704194/327.58531005263103/304.7865093297828/985//
        '[EdSuIRskNWWxNKlLBgMQh]:httpCall "HTTP - Create holding statement"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-holdingstatement
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" fYmCn_cOJYBmJFERsTjL7/input
          visualData: 6091.347825018738/-2300.498822713318/280/1294/var(--node-color-4)/var(--node-color-4)
        '[FjQI4UdqOmvAKOKYuNChp]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" q-Jg-oegWFhpJfpNaq5YM/input
            - match_1->"Stringify history" 0qTTZyxV6eaYUo8yr0N4U/input1
          visualData: 3931.5582403898065/-1018.7228709543153/280/1063//
        '[Fw9yt9G5_folRZdEl4KpZ]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Subgraph" KV0JmRNqaqaPAiTAakT-Y/input
          visualData: 3099.1198189552306/-1631.3435858667438/330/1061//
        '[GE3dothNsb-QgfptTQIAJ]:subGraph "Subgraph"':
          data:
            graphId: oNDvNATb6Cp0mwhFoA39A
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 1213.040222792338/870.0117626784718/330/1770/var(--node-color-1)/var(--node-color-1)
        '[GGEwPqFn8e-aYjpv4Lp3Q]:subGraph "Subgraph"':
          data:
            graphId: KpT800xhGZdwy4QxONPKN
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/prompt
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/prompt
            - output->"Subgraph" GE3dothNsb-QgfptTQIAJ/input
          visualData: 797.4970378384913/708.2022885642999/330/1767/var(--node-color-1)/var(--node-color-1)
        '[H2LewNpd8KUIDKEIDZj-K]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" k-klyzvhniFfqH5hvjuOU/object
          visualData: 612.6715368493043/319.2460630139273/280/1273//
        '[HD1rxQpwP9XrZwNWaaoLF]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 600
            text: Get comms team
          visualData: -407.119081962525/-603.5767147483365/830.1844441677374/462//
        '[HfflPV-SqxtJY7immzBiY]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" sVqhMd9Dv_z6t-iLCYdE0/input
            - match_1->"Stringify history" rZDXS2m5Sw_t7IdGh4W45/input1
          visualData: 3937.3649049463147/-1648.7459753354367/280/1061//
        '[HmDdB8p2wc8vu8FcBadjI]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" tEzx1gfv3oT5tzEpObm53/document
          visualData: 7243.561482293314/-2166.650422094084/280/1307//
        '[IwTKZWYXuAna_v309uJ1p]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" Xk1Tw7lxeDqacNIT1bMNu/input
          visualData: 1554.2430639057575/-612.7891319636341/230/1101//
        '[JNCqGPjRdw12CRqJj6tCY]:text "CRISIS ID FOR SKITTLES"':
          data:
            body: ""
            text: nvsvrsajrztv8ih5yjpq7uj5
          visualData: -3182.637652289986/398.4094655377173/330/1774//
        '[KCt3dmUgSCv1CL6Nnco0u]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "Low",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Create holding statement"
              k6JG9xcW7kayuT_sKxgg8/req_body
          visualData: 5686.684001810778/-1029.7291690177606/330/1281//
        '[KJ0n7LZTEzcnuQDvmpaz4]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].role
              - $.data[0].name
              - $.data[0].email
              - $.data[0].phone
              - $.data[0].documentId
          outgoingConnections:
            - match_0->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/Position
            - match_1->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/Spokesman
            - match_1->"Text" lTDwHyIvD8GtM-vUQWnZJ/Spokesman
            - match_2->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/Email
            - match_2->"Text" lTDwHyIvD8GtM-vUQWnZJ/Email
            - match_3->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/Phone
            - match_3->"Text" lTDwHyIvD8GtM-vUQWnZJ/Phone
          visualData: 44.4321762346097/-397.50808679427195/280/742/var(--node-color-5)/var(--node-color-5)
        '[KV0JmRNqaqaPAiTAakT-Y]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" HfflPV-SqxtJY7immzBiY/object
          visualData: 3516.5189972081184/-1669.0014292376593/330/1061/var(--node-color-1)/var(--node-color-1)
        '[Kvidt5PDaXXL-X3MNTQ1I]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" FjQI4UdqOmvAKOKYuNChp/object
          visualData: 3510.7123326516107/-1038.978324856538/330/1063/var(--node-color-1)/var(--node-color-1)
        '[LBWEhgpN_DvovGAccwRCS]:httpCall "HTTP - Create holding statement"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-holdingstatement
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" 5tCwdNa9Fme3QWLBifr_T/input
          visualData: 6063.8906990899195/-1678.3677166598752/280/1293/var(--node-color-4)/var(--node-color-4)
        '[N9YOhpmU3aaCsH0rF8pKv]:text "TEXT - Define role"':
          data:
            text: >-
              You are a crisis communications public relations (PR) professional
              working for {{company}}.


              {{task}}


              IMPORTANT

              Your writing tone is {{tone}}.
          description: Role definition copy
          outgoingConnections:
            - output->"Holding statement system prompt"
              ZEJe86ipFxX2Pgn0SpYkX/role
            - output->"Set Global Role" q-7FV8Lss_M2GuC2trzea/value
            - output->"Text" lTDwHyIvD8GtM-vUQWnZJ/role
            - output->"Text" vGUWgOtAY-i7sxm-WJ7eb/role
          visualData: -1271.0241059707735/-541.5700031736941/330/1498/var(--node-color-3)/var(--node-color-3)
        '[NNAmUBvMRaT47tbDU5-WC]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" HmDdB8p2wc8vu8FcBadjI/object
          visualData: 6896.21028768628/-2176.299066388724/280/1307//
        '[OJzyrdkuWTUnJ2Z6kZ8id]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 2352.3414340712166
            text: Holding statement
          visualData: 1158.2735741915471/-2668.394934842209/5276.089509143422/1065//
        '[OzfcqLFo3Rn18m4eME4ys]:httpCall "HTTP - Get tone"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" f-alM-DrASwCvKMXDfB9-/object
          visualData: -2068.6923665205054/-868.637080008599/280/1496/var(--node-color-4)/var(--node-color-4)
        '[P-ksQNwNI_x344C2ks26n]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: Mitigations
          visualData: 297.9220805717546/1632.863430707764/330/null/var(--node-color-3)/var(--node-color-3)
        '[P1s1Jkq4pQh1VXrNEUFNe]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" slwZi5WuxceneksXs_M6Y/document
          visualData: 7228.182714725624/-1008.629224247004/280/1314//
        '[PL7deJDgrL1vwG8Fs8-jA]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" -TdYHZM2LJuz23yM_SbNx/detail
            - output1->"Text" tEzx1gfv3oT5tzEpObm53/response
          visualData: 4747.240396669109/-2539.152574305091/230/1279/var(--node-color-2)/var(--node-color-2)
        '[QG0B00OmZYN6SmNbPqPFN]:subGraph "Subgraph"':
          data:
            graphId: 8fhBx64QGpVrIT6XqLMrt
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 3235.7641321094325/857.3825872770936/330/1501/var(--node-color-1)/var(--node-color-1)
        '[QoK6o3d1jwnrnqPevijYa]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" -TdYHZM2LJuz23yM_SbNx/original
          visualData: 5107.645921021185/-2518.7569662714754/230/1278/var(--node-color-2)/var(--node-color-2)
        '[SZ4yIii2XvaHMue86QDO6]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 779.5121328978863
            text: Create role
          visualData: -2574.9956458445304/-925.4781397859413/2124.031931164753/1779//
        '[TkiAWaAbj2CrKNN4Ou7wZ]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: Severity
          visualData: 951.5222363238577/1274.4549571901343/330/1481/var(--node-color-3)/var(--node-color-3)
        '[W888kIoF-SH_n2m0tV7Rc]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=company&populate=region
          outgoingConnections:
            - output->"HTTP - Get crises" cKjknBn_o8XEPm2EFP1C3/url
          visualData: -2049.5349796843857/557.529835175264/330/1763//
        '[Xk1Tw7lxeDqacNIT1bMNu]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" mcgQkCMsGk4tJBFjxhXTS/object
          visualData: 2017.605049893614/-732.2070674590149/280/658//
        '[Yh7uuKhGTKEJl40mOg0FE]:comment "Comment"':
          data:
            backgroundColor: rgba(255,0,0,0.05)
            color: rgba(212,212,212,1)
            height: 576.7027015866272
            text: |
              Expanded description
          visualData: -240.0097102675435/83.23420835040659/806.588848743939/888//
        '[ZEJe86ipFxX2Pgn0SpYkX]:text "Holding statement system prompt"':
          data:
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be passed a JSON object in this format:


              {
                "output": {
                  "type": "object",
                  "value": {
                    "high-title": "Severe Backlash and Boycotts Emerge",
                    "high": "In the wake of the backlash...",
                    "medium-title": "Moderate Criticism but Stable Sales",
                    "medium": "While the backlash against...",
                    "low": "The backlash against Skittles..."
                  }
                }
              }


              You will see a High risk scenario, a Medium risk scenario and a Low risk scenario. For each there is a short title (high-title,medium-title,low-title) and a longer description (high/medium/low).


              Your job is to write a short form output that would go out to the media to inform press that a full response is being worked on.


              It should emphasize the organization's commitment to gathering more information and taking appropriate action. It should maintain the organization's credibility and reflect its values.  


              This note is sent to the media prior to a full press release.


              The total length should be 2 or 3 short paragraphs.


              Create one output holding statement for each of the 3 cases.


              Each response should take the form of a short high level description of the issue and an explanation that a full response is being prepared.


              Start the response with the healine of one sentence that summarizes the holding statement content. Put the headline in all capitals. Ensure there is a double line break after this. 


              On the next line add today's date (in the format Tuesday 17th June 2025) followed by a line break. Do not prefix it with Date: or similar. Just have the date only.


              Use natural line breaks in the prose like \n.


              Each response should be signed off by the company PR spokesperson called {{Spokesman}} whose company role is {{Position}}. This should form part of the holding statement response.


              Ensure there is a double line break before this.


              Each response should include the contact details of {{Email}} and {{Phone}}.


              Ensure there is a double line break before this.


              Output only a JSON object in the following format:


              {

              "data": {
                  "high": "Holding statement 1 content",
                  "medium": "Holding statement 2 content",
                  "low": "Holding statement 3 content",
                  "documentId": {{documentId}}
                  }
              }


              Do not include any loose items, markdown or other commentary.
          outgoingConnections:
            - output->"Chat" IwTKZWYXuAna_v309uJ1p/systemPrompt
          visualData: 1006.1841699238838/-668.8593305481993/330/1442//
        '[ZeCTJ2Vb3__XmamedIvvs]:text "HAAGEN"':
          data:
            body: ""
            text: eg2mhbnnt16dyaomt4dvtti2
          visualData: -3482.0020708804573/688.9648331453159/330/1777//
        '[_Ua5Iaa7bVa0WnfBltgtN]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" -9u1wOd79FRibDuN_PXTo/response
            - output1->"Text" go-76mD_mFK_Pu79briiA/detail
          visualData: 4719.128107348857/-1913.1859334898859/230/1280/var(--node-color-2)/var(--node-color-2)
        '[ancy-mfuttJ79LFtk4zEf]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Text" zKdgkKa2zUZ5TKLX_tXgg/input
            - match_1->"Stringify history" BVMuY0r8TcD1bvaQNiT6F/input1
          visualData: 3957.806124743042/-2270.8770813888796/280/1060//
        '[ar6v6LMNTaqxVthRlZG20]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" foghClfs0RpllTUuFHt-Q/input
          visualData: 2332.2252789392724/810.2308143125948/230/1489//
        '[cKjknBn_o8XEPm2EFP1C3]:httpCall "HTTP - Get crises"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useHeadersInput: false
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 7eyt6KkrPUqx01ZWsuWGh/object
          visualData: -1480.2231785001838/559.3316352095475/280/1467/var(--node-color-4)/var(--node-color-4)
        '[cXG44O2UPJrrr6iCMJbj6]:httpCall "HTTP - Update timeline"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: https://crisis-comms.vercel.app/api/submit-timeline
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: false
          visualData: -596.7130561679548/108.28985300826301/280/1474/var(--node-color-4)/var(--node-color-4)
        '[cuCCQJ8eyAIOus86mcozC]:getGlobal "Get Global"':
          data:
            dataType: string
            id: documentId
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" -9u1wOd79FRibDuN_PXTo/crisisid
            - value->"Text" slwZi5WuxceneksXs_M6Y/crisisid
            - value->"Text" tEzx1gfv3oT5tzEpObm53/crisisid
          visualData: 7082.593894020007/-771.1683207504001/230/1336//
        '[dZzpjkTcyMIFqR4NBAMrV]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Subgraph" Kvidt5PDaXXL-X3MNTQ1I/input
          visualData: 3093.3131543987224/-1001.3204814856224/330/1063//
        '[em890oRajSrO-Lsj6dme5]:text "CRISIS ID FOR MARS"':
          data:
            body: ""
            text: y2wlt0x5xdcjtvgwokzcbk1k
          visualData: -3482.0020708804573/535.0835990660192/330/1776//
        '[f-alM-DrASwCvKMXDfB9-]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_0->"TEXT - Define role" N9YOhpmU3aaCsH0rF8pKv/tone
            - match_0->"Text" lTDwHyIvD8GtM-vUQWnZJ/Tone
            - match_1->"TEXT - Define role" N9YOhpmU3aaCsH0rF8pKv/task
            - match_2->"TEXT - Define role" N9YOhpmU3aaCsH0rF8pKv/company
          visualData: -1704.175388428409/-468.2302651643399/280/1757//
        '[fYmCn_cOJYBmJFERsTjL7]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |
              {{input}}
          outgoingConnections:
            - output->"Extract JSON" NNAmUBvMRaT47tbDU5-WC/input
          visualData: 6513.159109189079/-2177.263930818188/330/1307//
        '[foghClfs0RpllTUuFHt-Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" QG0B00OmZYN6SmNbPqPFN/input
          visualData: 2707.9982531179526/813.3114725619207/280/1490//
        '[g-YyMF0aaFQaPragGhYKP]:text "Text"':
          data:
            normalizeLineEndings: true
            text: xim3nf27socidx5sx640b02d
          visualData: -3489.586163542448/850.9288239508719/330/1778//
        '[gS957dQIpZe538bFQvRMd]:subGraph "Subgraph"':
          data:
            graphId: 3soSwiUKQ_X4fGdokyxAH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Destructure" ancy-mfuttJ79LFtk4zEf/object
          visualData: 3536.960217004846/-2291.132535291102/330/1060/var(--node-color-1)/var(--node-color-1)
        '[go-76mD_mFK_Pu79briiA]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Create holding statement"
              LBWEhgpN_DvovGAccwRCS/req_body
          visualData: 5683.354512654977/-1674.6576368516412/330/1069//
        '[hMBnQG7H5-eoGm-4FGM03]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 797.1053359441566
            text: Long form press release - NOTE TITLE IS PASSED BUT NOT USED - COULD BE
              ADDED
          visualData: 1780.9199859891603/380.47046833164717/1896.2162036442342/1027//
        '[jEdzh4HfFDqUIiBp6Hug9]:code "Code - Todays date"':
          data:
            allowConsole: false
            allowFetch: false
            allowProcess: false
            allowRequire: false
            allowRivet: false
            code: >
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }

              return {
                output1: {
                  type: 'string',
                  value: new Date().toISOString()
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" zNdE05qaH8cEWgJgCkWGh/date
          visualData: -1785.1900583653169/78.38534682749429/230/1502/var(--node-color-2)/var(--node-color-2)
        '[k-klyzvhniFfqH5hvjuOU]:destructure "Destructure"':
          data:
            paths:
              - $.data.description
          outgoingConnections:
            - match_0->"Esape chars" 1mRKcxaiTgLwLLKdmgtGm/input1
          visualData: 941.3382557878363/285.21824787883486/280/1271//
        '[k6JG9xcW7kayuT_sKxgg8]:httpCall "HTTP - Create holding statement"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-holdingstatement
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Text" BZZSdCliXLEnBwJ_JiFWi/input
          visualData: 6067.438576042865/-1027.296893882482/280/1066/var(--node-color-4)/var(--node-color-4)
        '[lTDwHyIvD8GtM-vUQWnZJ]:text "Text"':
          data:
            text: >-
              Your role is: {{role}}


              You will be passed a JSON object in the following format:


              {
                "output": {
                  "type": "object",
                  "value": {
                    "high-title": "Severe Backlash and Boycotts Emerge",
                    "high": "In the wake of the backlash...",
                    "medium-title": "Moderate Criticism but Stable Sales",
                    "medium": "While the backlash against...",
                    "low-title": "Limited Boycotts Emerge",
                    "low": "The backlash against Skittles..."
                  }
                }
              }


              This object contains three scenarios: High, Medium, and Low risk.  

              Each scenario includes:

              - A **short title**: `"high-title"`, `"medium-title"`, `"low-title"`

              - A **longer description**: `"high"`, `"medium"`, `"low"`


              ---


              ## ✍️ PRESS RELEASE INSTRUCTIONS


              For **each** scenario, write a full press release suitable for media distribution during a crisis. Follow this structure:


              1. **Date only** (e.g., “Tuesday 17th June 2025”)  

              2. **Summary paragraph** (max 20 words)  

              3. **Three bullet points** A bullet list with a precise of key aspects of the crisis scenario(each max 15 words)  

              4. **Body paragraphs** with escalating detail  

              5. **Include a quote** from the company's spokesperson {{Spokesman}}, demonstrating leadership and reassurance  

              6. **Sign off** with {{Spokesman}}'s name  

              7. **Add contact details** at the end:  
                 {{Email}}  
                 {{Phone}}  

              Use `\n` for single line breaks and **double line breaks** between key sections (e.g., between bullets and body copy).


              The final press release must be:

              - At least **5 full paragraphs**

              - Written in the tone: **{{Tone}}**


              ---


              ## 🚫 AVOID

              - Speculation or unverified claims  

              - Breach of privacy or confidentiality  

              - Inaccurate or misleading statements  


              ---


              ## 📤 OUTPUT FORMAT


              Respond with a single JSON object like below with no additionally commentary:


              {
                "high": "High risk scenario press release content",
                "medium": "Medium risk scenario press release content",
                "low": "Low risk scenario press release content",
                "documentId": "{{documentId}}"
              }
          outgoingConnections:
            - output->"Chat" ar6v6LMNTaqxVthRlZG20/systemPrompt
          visualData: 1884.2939551458796/622.1715923573347/330/1771//
        '[mcgQkCMsGk4tJBFjxhXTS]:destructure "Destructure"':
          data:
            paths:
              - $.data.high
              - $.data.medium
              - $.data.low
              - $.data.documentId
            text: ""
          outgoingConnections:
            - match_0->"Esape chars" QoK6o3d1jwnrnqPevijYa/input1
            - match_0->"Text" 4PpdHSOarBvynuMBQSfp0/input
            - match_1->"Esape chars" 8kQ8t8qRadfNV1_Q0UKef/input1
            - match_1->"Text" Fw9yt9G5_folRZdEl4KpZ/input
            - match_2->"Esape chars" 8jE-ZpLfAnzdBIVRdCP5R/input1
            - match_2->"Text" dZzpjkTcyMIFqR4NBAMrV/input
            - match_3->"Text" -TdYHZM2LJuz23yM_SbNx/documentId
            - match_3->"Text" KCt3dmUgSCv1CL6Nnco0u/documentId
            - match_3->"Text" go-76mD_mFK_Pu79briiA/documentId
          visualData: 2406.8901435626326/-744.8168319243129/280/655//
        '[nT_8sfzahbwZNsPj2AWK0]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: ID consumed
          visualData: -2031.9689089878525/773.1254515867473/330/1413/var(--node-color-3)/var(--node-color-3)
        '[p5Qh0kyc_g5eWylv3780o]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 307.66693623311176
            text: Define the severity
          visualData: 39.90322358921307/1164.4039171230634/818.5333872466224/1453//
        '[q-7FV8Lss_M2GuC2trzea]:setGlobal "Set Global Role"':
          data:
            dataType: string
            id: role
            text: ""
            useIdInput: false
          visualData: -784.1495551117125/-802.4239607790054/230/1455/var(--node-color-5)/var(--node-color-5)
        '[q-Jg-oegWFhpJfpNaq5YM]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Esape chars" qg7650rwZTB-qCMshVSbi/input1
          visualData: 4284.017411897066/-1023.985900660515/330/1063//
        '[qg7650rwZTB-qCMshVSbi]:code "Esape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" KCt3dmUgSCv1CL6Nnco0u/detail
            - output1->"Text" slwZi5WuxceneksXs_M6Y/response
          visualData: 4722.721461743727/-1148.3094445040601/230/1461/var(--node-color-2)/var(--node-color-2)
        '[qic03BQQlMsFH93Oh0O67]:subGraph "Subgraph"':
          data:
            graphId: GHgi_Qdv5HEfN9Cwup8cY
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - severity->"Graph Output" TkiAWaAbj2CrKNN4Ou7wZ/value
          visualData: 435.25485961428205/1269.6467665279545/330/1480/var(--node-color-1)/var(--node-color-1)
        '[rZDXS2m5Sw_t7IdGh4W45]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" go-76mD_mFK_Pu79briiA/history
          visualData: 4724.379632909313/-1519.6579050831895/230/1061/var(--node-color-2)/var(--node-color-2)
        '[rycG3u2QjX1s7Lt8ABerx]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" P1s1Jkq4pQh1VXrNEUFNe/object
          visualData: 6880.83152011859/-1018.2778685416438/280/1314//
        '[sVqhMd9Dv_z6t-iLCYdE0]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Esape chars" _Ua5Iaa7bVa0WnfBltgtN/input1
          visualData: 4289.824076453574/-1654.0090050416363/330/1061//
        '[slwZi5WuxceneksXs_M6Y]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "holding_statement",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" AFc-0rv400chnesKtxyHc/stringGraph
          visualData: 7620.308261321361/-1128.5816450798495/330/1313//
        '[t0FLzQxrcLw-tdaC5wIMc]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 8012.794194362761/-1969.470240307767/330/1465/var(--node-color-1)/var(--node-color-1)
        '[tEzx1gfv3oT5tzEpObm53]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "holding_statement",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisisid": "{{crisisid}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" t0FLzQxrcLw-tdaC5wIMc/stringGraph
          visualData: 7585.137755566229/-2220.1286539857097/330/1308//
        '[vGUWgOtAY-i7sxm-WJ7eb]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK

              You should generate an expanded description of the crisis situation described in the prompt. The output should include natural line breaks.


              Do not confabulate or hallucinate. Do not add details that you are unsure of.


              Also generate a concise title description in fewer than 10 words.


              Do not adjust the severity at this stage, leave that as Unknown.


              Output only a JSON object in the following format:


              {

              "data": {
                  "severity": "Unknown",
                  "title": "Crisis title",
                  "date": "Crisis date",
                  "description": "Text of crisis",
                  "crisis": the numeric documentId from the prompt
                  }
              }


              Return only the final valid UTF-8 JSON object.
          outgoingConnections:
            - output->"Chat" DOH9j6ldq5b44D5MY0YHO/systemPrompt
          visualData: -199.33787655900795/156.50428744643352/330/991//
        '[vVX3Yn-222AziZr5PX_5i]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" Ax5hkueX-YZVwVDb0c62a/object
          visualData: 6833.15734065875/-1670.3376134117125/280/1311//
        '[w72oTf1tc7rAiyFebway5]:text "CRISIS ID FOR LEAD"':
          data:
            body: ""
            text: ye8w2fo87pymtxxfx0vyfzaa
          visualData: -3157.045448470819/213.90418272202905/330/1758//
        '[xQfq8BV4M9MDHCKcpL6vJ]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/comms-teams
          outgoingConnections:
            - json->"Destructure" KJ0n7LZTEzcnuQDvmpaz4/object
          visualData: -341.409286403287/-502.1614298576312/280/463/var(--node-color-4)/var(--node-color-4)
        '[yUsMVzssmowpwlFaD33G8]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"HTTP - Get tone" OzfcqLFo3Rn18m4eME4ys/url
          visualData: -2496.961964315648/-608.3256382489834/330/1766//
        '[ykAfnK8lI7luub7SggyJ0]:subGraph "Mitigation"':
          data:
            graphId: SZiVEz7iWEzO58OzSARGq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - Mitigation->"Graph Output" P-ksQNwNI_x344C2ks26n/value
          visualData: -268.64521031658035/1591.9200913271618/330/1486/var(--node-color-1)/var(--node-color-1)
        '[zKdgkKa2zUZ5TKLX_tXgg]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Esape chars" PL7deJDgrL1vwG8Fs8-jA/input1
          visualData: 4310.265296250302/-2276.140111095079/330/1060//
        '[zNdE05qaH8cEWgJgCkWGh]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: >-
              {
                  "title": "{{title}} generated",
                  "description": "Generated a full set of media documents for {{title}}.",
                  "type": "generated",
                  "date": "{{date}}",
                  "documentId": "{{documentId}}"
                }
          outgoingConnections:
            - output->"HTTP - Update timeline" cXG44O2UPJrrr6iCMJbj6/req_body
          visualData: -1026.1862962504174/270.25543628186745/330/1497//
        '[zxftMeqPv_Rfjt9lpoE6Q]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Subgraph" qic03BQQlMsFH93Oh0O67/input
          visualData: 72.15413587448862/1252.976177990135/280/1451//
    haJzmqbpZveXTdmqgMZ0D:
      metadata:
        description: ""
        id: haJzmqbpZveXTdmqgMZ0D
        name: Create - Culturescore - Backlash avoidance
      nodes:
        '[Ce1L3almcnjC_w3IYn9C2]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" MWU-EHMquukfiapOA9yMT/object
          visualData: -386.0662429543354/1670.5764635053392/280/1607//
        '[MWU-EHMquukfiapOA9yMT]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" VmFszWcJL1qo87YbZ07Sp/input
            - match_1->"Text" WgUn1hePOAimz3QzsKPVe/input
          visualData: 13.850583400609025/1698.259217693937/280/1606//
        '[Ma__SElHvD8xZ7DI5nz2t]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" RcZbaNYQTiYE7aWHTNIFJ/value
          visualData: 1973.5488283169557/1180.9194722245677/230/1604//
        '[RcZbaNYQTiYE7aWHTNIFJ]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2401.8671349238216/1160.3784582760197/330/1603/var(--node-color-3)/var(--node-color-3)
        '[Ut2VGZsDX9zkIt3fN8vza]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" se2nlKAu5xchTC-RSlhww/object
          visualData: 928.5058669101271/1319.6384818675192/280/1602/var(--node-color-4)/var(--node-color-4)
        '[VmFszWcJL1qo87YbZ07Sp]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" Ut2VGZsDX9zkIt3fN8vza/url
          visualData: 378.78491394273897/1348.9044853294863/330/1602//
        '[WgUn1hePOAimz3QzsKPVe]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" zbZ0gpev14HIQ2mfmANv4/url
          visualData: 364.5085057832571/1699.4610087325268/330/1602//
        '[gR4pIgwr0lBj0tGp4a5rG]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" Ce1L3almcnjC_w3IYn9C2/input
          visualData: -812.5040863348214/1596.9659189658682/330/1608/var(--node-color-3)/var(--node-color-3)
        '[kg2s3AgDvtPr5GOX4_Ce0]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You will be given a short description of a consumer PR campaign.


              Your task is to assess the likelihood that this will avoid engaging customers in a backlash or boycott — i.e., how safe or protected the company is from public or organized withdrawal of support based on the audiences defined in {{audience}}.


              You must return a score from 0 to 10, where:
              	•	10 = very low risk of backlash (the company is safe from this group).
              	•	0 = extremely high risk of backlash (this group is highly likely to act negatively).

              Use this guide:


              Score

              Interpretation

              10

              Extremely Low Risk - This group is unlikely to react negatively.

              8-9

              Low Risk - Mild concern may exist, but active backlash is very unlikely.

              6-7

              Moderate Risk - Group may be watching closely but unlikely to act.

              4-5

              Notable Risk - Discontent could grow; potential early signs of reaction.

              2-3

              High Risk - Backlash is likely; warning signs or activist energy already visible.

              0-1

              Extreme Risk - Immediate or ongoing backlash is either underway or imminent.


              Each score must be supported by a short rationale, using predictive language (e.g., “may result in”, “likely to provoke”, “risk signals present”) — do not describe actual events unless clearly hypothetical.


              Respond only with a JSON object in the format below — no additional text, markdown, or commentary.


              {
                "culturescore_backlashavoidance": {
                  "score": 7,
                  "rationale": "While the issue may generate discussion, current sentiment tracking suggests limited likelihood of organized consumer backlash."
                }
              }
          outgoingConnections:
            - output->"Chat" Ma__SElHvD8xZ7DI5nz2t/systemPrompt
          visualData: 1579.5267647762216/806.203034133126/330/1605//
        '[se2nlKAu5xchTC-RSlhww]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" kg2s3AgDvtPr5GOX4_Ce0/audience
          visualData: 1318.232632123521/1423.7735786016078/280/1609//
        '[yIUoJLbJw4V_egFfXcz-d]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" Ma__SElHvD8xZ7DI5nz2t/prompt
          visualData: 1393.5420350183176/1880.7981274724634/280/1602//
        '[zbZ0gpev14HIQ2mfmANv4]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" yIUoJLbJw4V_egFfXcz-d/object
          visualData: 925.99813850812/1772.6512915974408/280/1602/var(--node-color-4)/var(--node-color-4)
    hcy2UDhZVh6QP8e0AjKC7:
      metadata:
        description: Check the content of a single release using the vector DB
        id: hcy2UDhZVh6QP8e0AjKC7
        name: (OLD) PR - Check single release
      nodes:
        '[0YE9EtaAR-geTE11xkRdf]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 5pFfLjYXfRWct7bondsH8/object
          visualData: 1314.5083531195799/1026.5346867397284/280/977//
        '[5pFfLjYXfRWct7bondsH8]:destructure "Destructure"':
          data:
            paths:
              - $.suitability
          outgoingConnections:
            - match_0->"Bool" _emBmfGLJIvtAg0GxSdad/input
          visualData: 1654.7585228712765/1113.2306601890105/280/978//
        '[6JaC_oSAGFBhKIVMkEWYH]:graphOutput "Graph Output"':
          data:
            dataType: boolean
            id: Analysis
          visualData: 2309.542929930828/1195.9668038861435/330/980/var(--node-color-3)/var(--node-color-3)
        '[7lZQ6SdsilaRpAUbvczRw]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            url: https://pinecone-rewrite.vercel.app/api/evaluate
            useBodyInput: true
          outgoingConnections:
            - res_body->"Text" b1aRe3TdJP-9VTorMrr4-/input
          visualData: 576.5288311205318/810.6861390462234/280/975/var(--node-color-4)/var(--node-color-4)
        '[MzLNx8qSegilkaBQOcD40]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Http Call" 7lZQ6SdsilaRpAUbvczRw/req_body
          visualData: 158.73080265533633/909.7163465652109/330/957/var(--node-color-3)/var(--node-color-3)
        '[_emBmfGLJIvtAg0GxSdad]:boolean "Bool"':
          data:
            useValueInput: true
            value: false
          outgoingConnections:
            - value->"Graph Output" 6JaC_oSAGFBhKIVMkEWYH/value
          visualData: 2028.9025712507832/1143.9540293327823/160/979//
        '[b1aRe3TdJP-9VTorMrr4-]:text "Text"':
          data:
            text: "{{input}}"
          outgoingConnections:
            - output->"Extract JSON" 0YE9EtaAR-geTE11xkRdf/input
          visualData: 917.6873774869994/975.5829089409737/330/976//
    hoenAxCMNvoeN7fveNmvO:
      metadata:
        description: Write and individual set of QA pairs
        id: hoenAxCMNvoeN7fveNmvO
        name: Universal - Q&A pairs
      nodes:
        '[2isSg2wlPgBqGGfpH8qYf]:httpCall "Http - Submit QA"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-entity-qapairs
            useBodyInput: true
            useHeadersInput: false
          visualData: 2547.8983081972506/315.72265551527613/280/1904/var(--node-color-4)/var(--node-color-4)
        '[Bak54OLENwKSSAYciRPua]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: Generate Q&A Pairs
          outgoingConnections:
            - response->"Graph Output" IjoNGY_ToAN_OWpCP0KwT/value
            - response->"Text" envyb0JOn8KRUnuwCSpib/input
          visualData: 1189.552365338835/807.3292219527685/230/1913//
        '[CRw35k_q7RlCqNwqJNPvZ]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
              - $.role
              - $.iteration
            text: ""
          outgoingConnections:
            - match_1->"Text" beyDct1Xok4A0BjE6-_lr/input
            - match_1->"Text" envyb0JOn8KRUnuwCSpib/scenario
            - match_2->"QA system prompt" zNTIF4KV-wafEaR-Wf0c3/role
            - match_3->"Text" envyb0JOn8KRUnuwCSpib/slot
          visualData: 200.69747357727513/1313.6629404379435/280/1916//
        '[IjoNGY_ToAN_OWpCP0KwT]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1662.7941581352968/877.2467784632804/330/1901/var(--node-color-3)/var(--node-color-3)
        '[ON-rItw-Il_Z2DJ7iSq9n]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" Bak54OLENwKSSAYciRPua/prompt
          visualData: 1513.5294163856179/1491.4265497997233/280/1919//
        '[bTGs3WFqXswv2u-6OrHEi]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" mgLYRmbFrmxESRg1IY1NW/input
          visualData: -568.6739522452779/1343.9559682815993/330/1920/var(--node-color-3)/var(--node-color-3)
        '[beyDct1Xok4A0BjE6-_lr]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" reM6onQ2YJAnT5m416-on/url
          visualData: 617.5943575372539/1471.6725975653674/330/1917//
        '[envyb0JOn8KRUnuwCSpib]:text "Text"':
          data:
            text: |-
              {
                  "scenario": "{{scenario}}",
                  {{input}},
                  "severity": "High",
                  "slot": "slot{{slot}}"
              }
          outgoingConnections:
            - output->"Extract JSON" hbTAo2xvqq2BkIOkbMaPe/input
          visualData: 1661.622059709881/446.2641623169153/330/1902//
        '[hbTAo2xvqq2BkIOkbMaPe]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Http - Submit QA" 2isSg2wlPgBqGGfpH8qYf/req_body
          visualData: 2153.7482610549478/513.1852601652452/280/1903//
        '[mgLYRmbFrmxESRg1IY1NW]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" CRw35k_q7RlCqNwqJNPvZ/object
          visualData: -164.14148773552202/1334.356625025632/280/1914//
        '[reM6onQ2YJAnT5m416-on]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" ON-rItw-Il_Z2DJ7iSq9n/object
          visualData: 1015.2828786983126/1430.387424421126/280/1918/var(--node-color-4)/var(--node-color-4)
        '[zNTIF4KV-wafEaR-Wf0c3]:text "QA system prompt"':
          data:
            jsonTemplate: ""
            text: >-
              {{role}}


              ACTION FOR THIS TASK


              You will be sent a press release and you should create a set of 10 questions and answer pairs. These questions and answers are the kind of queries that the press or public might ask as result of hearing about the details of the PR campaign.


              The questions should focus on answering questions that the media will likely wish to ask to aid their understanding of the campaign in advance to a press write up social media posting.


              Output the question and answer pairs as text in this string format (don't convert to JSON):

                  "qa": [
                    {
                      "question1": "Question 1",
                      "answer1": "Answer 1"
                    },
                    {
                      "question2": "Question 2",
                      "answer2": "Answer 2"
                    }
                  ]
          description: Holding statement system prompt
          outgoingConnections:
            - output->"Chat" Bak54OLENwKSSAYciRPua/systemPrompt
          visualData: 597.7399020932107/596.2761138353255/330/1921//
    igOxpBJfjUy_hFWfY9tSi:
      metadata:
        description: Individual press release rewrite
        id: igOxpBJfjUy_hFWfY9tSi
        name: Universal - HS write & rewrite agent
      nodes:
        '[0Gqx9hfDyw82xF2okkoxe]:httpCall "Http - Comms team"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" wflh-J4z7bJTEx4HIp1oQ/object
            - json->"Text" qt9iJpilcUIO9XLzyUqoM/input
          visualData: -1762/1287/280/1952/var(--node-color-4)/var(--node-color-4)
        '[11zxxo-ogfPEq6C6LTuHV]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Escape chars" YUn8Qrg3uocmMSt1c5vV2/input1
            - response->"Escape chars" dYu45nP8THeQgsm-ZeOw8/input1
          visualData: -297.8554187390494/958.6812985136298/230/1964//
        '[2-jD_3vVzeOvd7Zb41uLy]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.role
          outgoingConnections:
            - match_0->"Text" KHbYuk5Hj6oqv0PV5af2E/entity
            - match_0->"Text" oy2b1n0LbyWkCiovxNB0o/entity
            - match_1->"Text" MMaHv-RW6uCe9QnHfp8yk/role
          visualData: -1700.0098012137755/494.7406100354071/280/2040//
        '[2BFSOHoAnpQC_IFnegQEU]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" Cj3jU_DQp8sh-E6Ul_yO4/object
          visualData: -708.0671800295399/1608/280/1959/var(--node-color-4)/var(--node-color-4)
        '[B3WPsDKY5pvqViR_8uO4I]:httpCall "Http - Get role & tones"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tones?populate=*
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" juBujzKq7DABtNOQ4RrRC/object
          visualData: -2513.632400776933/885.824515420267/280/2053/var(--node-color-4)/var(--node-color-4)
        '[C4mCiC0IG6fWWhj0IhHEu]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" 11zxxo-ogfPEq6C6LTuHV/prompt
          visualData: -243.03101192134955/2169.159645604944/280/1959//
        '[Cj3jU_DQp8sh-E6Ul_yO4]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" MMaHv-RW6uCe9QnHfp8yk/audience
          visualData: -256.6922485971745/1957.3875840834758/280/1959//
        '[IiRoeet7sfkl3CN3KAC7q]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" QkJh31BWLfTQ94pPzdiuR/history
          visualData: 2469.5944630433105/876.9987853215694/230/2015/var(--node-color-2)/var(--node-color-2)
        '[KHbYuk5Hj6oqv0PV5af2E]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"Http - Get role & tones" B3WPsDKY5pvqViR_8uO4I/url
          visualData: -2966.7513689550324/943.4012854272489/330/2054//
        '[L1fLTP7ZzyiDju3mRT6Wj]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 3371.115062316022/553.7961925111833/330/2029/var(--node-color-3)/var(--node-color-3)
        '[LolGNi_uGejU-LDnSzgxr]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: -1934.083063873665/1681.7596898448155/330/2038//
        '[MMaHv-RW6uCe9QnHfp8yk]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              You work for {{company}}


              The holding statement should address the audiences supplied in this JSON object {{audience}}


              ACTION FOR THIS TASK

              It is your job to write short output for a holding statement that would go out to the media.


              The holding statement should be about the topic provided in the user prompt.


              Start with today's {{date}} (in the format Tuesday 17th June 2025) followed by a line break. Do not prefix it with Date: or similar. Just have the date only.


              The full response should be a maximum of 3 paragraphs.


              The holding statement should be written in this {{tone}}.


              Use natural line breaks in the prose like \n.


              The response should be signed off by the company PR spokesperson called {{spokesman}}. Ensure there is a line break before this.


              The holding statement should include the contact details of {{email}} and {{phone}} at the bottom.


              Ensure there is a double line break before this. Ensure there is no excess spacing at the bottom the file.


              INSTRUCTIONS ON WHAT TO AVOID

              - Ensure all information provided is factually accurate and based on credible sources.

              - Avoid making speculative or unverified claims.

              - Respect privacy and confidentiality in all recommendations.


              Output a body of text only.
          outgoingConnections:
            - output->"Chat" 11zxxo-ogfPEq6C6LTuHV/systemPrompt
          visualData: -773/473/330/1949/var(--node-color-5)/var(--node-color-5)
        '[O-qbVKzev0QC7kt0z4nFi]:code "Code - Todays date"':
          data:
            allowConsole: false
            allowFetch: false
            allowProcess: false
            allowRequire: false
            allowRivet: false
            code: >
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }

              return {
                output1: {
                  type: 'string',
                  value: new Date().toISOString()
                }
              };
            inputNames: []
            outputNames: output1
          outgoingConnections:
            - output1->"Text" MMaHv-RW6uCe9QnHfp8yk/date
          visualData: -1187.1632517732355/217.8528951745352/230/1963/var(--node-color-2)/var(--node-color-2)
        '[QkJh31BWLfTQ94pPzdiuR]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "scenario": "{{scenario}}"
              }
          outgoingConnections:
            - output->"Graph Output" L1fLTP7ZzyiDju3mRT6Wj/value
          visualData: 2962.1028422179384/532.8116716163622/330/2030//
        '[TTOrDG_udFe2TGfqbTDZS]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" iIlIZt0QF1hWWfv3Wy7bz/input
            - match_1->"Text" QkJh31BWLfTQ94pPzdiuR/scenario
            - match_1->"Text" qy_6hOk26iUTHDdSsv-t3/input
          visualData: -1622.722463539058/1821.7789000669939/280/1959//
        '[UZFapYksFxv6m-qeJKQdW]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Escape chars" cnqBIAJQZvyisYmfLjWnO/input1
            - match_1->"Stringify history" IiRoeet7sfkl3CN3KAC7q/input1
          visualData: 2029.3796657898831/784.8226835774988/280/2003//
        '[W-O2-h56YtUa1x_mY9EeE]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 2-jD_3vVzeOvd7Zb41uLy/object
          visualData: -2101.7157131495746/604.3040357202656/280/2041//
        '[XrcMwFyrnUN3KsDRQcb_R]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" C4mCiC0IG6fWWhj0IhHEu/object
          visualData: -710.5749084315471/2061.0128097299216/280/1959/var(--node-color-4)/var(--node-color-4)
        '[YUn8Qrg3uocmMSt1c5vV2]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" QkJh31BWLfTQ94pPzdiuR/original
          visualData: 2481.1427053019493/329.56637959799366/230/2045/var(--node-color-2)/var(--node-color-2)
        '[aZ-NZL_X5w0gpbh_IXa1p]:text "Text"':
          data:
            body: ""
            text: |-
              {
                "text": "{{input}}"
              }
          outgoingConnections:
            - output->"HTTP - Rewrite endpoint" d-KZHyexz-w9IHaliNh-Z/req_body
          visualData: 800.6374366211857/784.7488517671501/330/2017//
        '[b4W6rGzyFjtLgbAzMXVCm]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" TTOrDG_udFe2TGfqbTDZS/object
          visualData: -2028/1861.1050222033653/280/1959//
        '[cnqBIAJQZvyisYmfLjWnO]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" QkJh31BWLfTQ94pPzdiuR/detail
          visualData: 2476.7759952550578/-142.61581972228174/230/2044/var(--node-color-2)/var(--node-color-2)
        '[d-KZHyexz-w9IHaliNh-Z]:httpCall "HTTP - Rewrite endpoint"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            text: ""
            url: https://pinecone-rewrite.vercel.app/api/rewrite
            useBodyInput: true
          outgoingConnections:
            - res_body->"Extract JSON" g-B3iNt1kQOtuzJB418DQ/input
          visualData: 1258.6831222377018/497.5937335663832/280/971/var(--node-color-4)/var(--node-color-4)
        '[dYu45nP8THeQgsm-ZeOw8]:code "Escape chars"':
          data:
            code: |-
              const inputText = inputs.input1.value;

              // Escape double quotes (") as \" and real line breaks as \n
              const escapedText = inputText
                .replace(/\\/g, '\\\\')         // escape backslashes first
                .replace(/"/g, '\\"')           // escape double quotes
                .replace(/\r?\n/g, '\\n');      // escape newlines

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" aZ-NZL_X5w0gpbh_IXa1p/input
          visualData: 456.14192062781547/422.97966171611455/230/2055/var(--node-color-2)/var(--node-color-2)
        '[eIyE6LnDAwhJ2RJ3F9TWr]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" W-O2-h56YtUa1x_mY9EeE/input
            - data->"Extract JSON" b4W6rGzyFjtLgbAzMXVCm/input
          visualData: -2581.1274405675367/475.50177755273836/330/1965/var(--node-color-3)/var(--node-color-3)
        '[g-B3iNt1kQOtuzJB418DQ]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" UZFapYksFxv6m-qeJKQdW/object
          visualData: 1704.0676846124609/546.5708364971639/280/1999//
        '[iIlIZt0QF1hWWfv3Wy7bz]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" 2BFSOHoAnpQC_IFnegQEU/url
          visualData: -1257.7881329969282/1637.266003461967/330/1959//
        '[juBujzKq7DABtNOQ4RrRC]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_0->"Text" MMaHv-RW6uCe9QnHfp8yk/tone
            - match_2->"Text" MMaHv-RW6uCe9QnHfp8yk/company
          visualData: -2079.4161015234354/973.7527830343993/280/2052//
        '[oy2b1n0LbyWkCiovxNB0o]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises?filters[documentId][$eq]={{entity}}&populate=comms_lead
          outgoingConnections:
            - output->"Http - Comms team" 0Gqx9hfDyw82xF2okkoxe/url
            - output->"Text" LolGNi_uGejU-LDnSzgxr/input
          visualData: -2573.9023359191224/1656.1669189629974/330/2046//
        '[qt9iJpilcUIO9XLzyUqoM]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: -1321.1362012541167/1520.5252332893604/330/2037//
        '[qy_6hOk26iUTHDdSsv-t3]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" XrcMwFyrnUN3KsDRQcb_R/url
          visualData: -1272.06454115641/1987.8225268650078/330/1959//
        '[wflh-J4z7bJTEx4HIp1oQ]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].comms_lead.name
              - $.data[0].comms_lead.email
              - $.data[0].comms_lead.phone
          outgoingConnections:
            - match_0->"Text" MMaHv-RW6uCe9QnHfp8yk/spokesman
            - match_1->"Text" MMaHv-RW6uCe9QnHfp8yk/email
            - match_2->"Text" MMaHv-RW6uCe9QnHfp8yk/phone
          visualData: -1319.2345613471034/1210.9510544029044/280/2042//
    jOpSxxKf2JqdCjND_3e_G:
      metadata:
        description: ""
        id: jOpSxxKf2JqdCjND_3e_G
        name: Advisory - Severity - Boycott intent
      nodes:
        '[1pt1AoLaGy2XMo3A3rdx2]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be given some text describing a corporate crisis scenario that presents a risk to the company.


              Your task is to estimate the likelihood of a boycott or similar withdrawal of support for each key stakeholder group:
              	•	Customers - e.g., refusal to buy products, brand boycotts, public campaigns
              	•	Employees - e.g., resignations, internal protest, union action
              	•	Investors - e.g., divestment, shareholder activism, public criticism

              You must return a score from 1 to 10, where 10 indicates a very high risk of boycott (or equivalent action) for that group.


              Use the following scale as a guide:


              1. Very Low - No real risk of disengagement or protest.

              2. Low - Discontent may be voiced, but no action expected.

              3. Moderate - Some dissatisfaction; possible isolated actions.

              4. Noticeable - Small group may organize or speak out.

              5. Concerning - Growing appetite for action, pressure starting to build.

              6. Serious - Petitions, warnings, or soft disengagement begin.

              7. High - Visible calls for action; some stakeholders disengaging.

              8. Critical - Active movements form; mainstream traction gained.

              9. Severe - Widespread boycott/disengagement in progress.

              10. Extreme - Sustained, large-scale action with measurable damage to support or loyalty.


              For each item add some short text to describe the rationale for why you gave the rating. Use language that makes it clear that the rationale is predictive rather than describing actual outcomes so the reader does not misunderstand the rationale as being actual events.


              Output as a JSON object ONLY in this format:


              {
                "severity_boycottrisk": {
                  "customers": {
                    "score": 9,
                    "rationale": "Customers have initiated a trending boycott campaign after revelations of unethical sourcing, with widespread traction on social media and activist involvement."
                  },
                  "employees": {
                    "score": 4,
                    "rationale": "Some internal frustration is evident, but organized action has not materialized beyond internal Slack discussions and a few HR complaints."
                  },
                  "investors": {
                    "score": 6,
                    "rationale": "Ethical investment groups are questioning continued support and have begun pressuring the board for accountability and governance changes."
                  }
                }
              }
          outgoingConnections:
            - output->"Chat" XJCuxUWihIzR-cbjR6krZ/systemPrompt
          visualData: 416.72421911436925/-14.619811780539578/1483.8939389042782/22/var(--node-color-2)/var(--node-color-2)
        '[FMN3myud8AeDshAxs3gFl]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" 1pt1AoLaGy2XMo3A3rdx2/role
          visualData: 30.05573084417361/94.22019567972885/230/25//
        '[KQRuERJDGLd1l16j4ab5w]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2511.610012743351/518.1260740704022/330/20/var(--node-color-3)/var(--node-color-3)
        '[LHBPa2dRTTy5gniOy23ZA]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" XJCuxUWihIzR-cbjR6krZ/prompt
          visualData: 1486.9561718983412/856.114351892229/330/20/var(--node-color-3)/var(--node-color-3)
        '[XJCuxUWihIzR-cbjR6krZ]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" KQRuERJDGLd1l16j4ab5w/value
          visualData: 2019.815380508604/359.47484734212014/230/21//
    ktYNmtYq1GrJd_zgCoTcg:
      metadata:
        description: ""
        id: ktYNmtYq1GrJd_zgCoTcg
        name: Create - Culturescore - Emotional intensity
      nodes:
        '[1DV4oWkZDupVE5YA3i5Yn]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" naSf0Af4DghgLXQmZK3xf/audience
          visualData: 2411.3199341043833/1718.9590541491516/280/1604//
        '[2aJKNirVkA5agSN9FC97O]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" o8pX04z6AzKqggp7MkxiJ/input
            - match_1->"Text" ic7e53tK4b60V3Inyah3s/input
          visualData: 1045.2897191624998/1583.3503701326697/280/1605//
        '[4371H0vyNoU41sDx0lfkk]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" tPLtM5O_KQ7v6kgi5YaMd/object
          visualData: 1957.4372742700107/1822.5842797955975/280/1604/var(--node-color-4)/var(--node-color-4)
        '[ic7e53tK4b60V3Inyah3s]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" 4371H0vyNoU41sDx0lfkk/url
          visualData: 1395.9476415451477/1749.3939969306837/330/1604//
        '[naSf0Af4DghgLXQmZK3xf]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a cultural analyst specialising in consumer PR.


              In the user prompt, you will be given a description of a consumer PR campaign, along with a defined {{audience}}.


              Your task is to assess the emotional intensity of the campaign — that is, how strongly the idea is likely to evoke emotion within the specified audience, based on cultural trends, audience values, and the relevance or emotional tone of the concept.


              Scoring Scale (0-10):


              0

              No Emotional Impact - Campaign is flat, emotionally disengaging, or tone-deaf.

              1-3

              Low Intensity - Audience is unlikely to feel anything beyond mild curiosity or disinterest.

              4-5

              Moderate Intensity - Campaign may prompt some emotional response, but not consistently or strongly.

              6-7

              Notable Intensity - Campaign is likely to trigger emotional reactions such as humour, pride, nostalgia, or empathy.

              8-9

              High Intensity - Strong emotional pull; campaign may spark discussion, sharing, or emotional investment.

              10

              Peak Intensity - Powerful emotional resonance; likely to provoke deep personal identification, inspiration, or catharsis.


              Output:


              Return only a JSON object in the following format. Do not include any extra commentary, markdown, or stray characters.


              {
                "culturescore_emotionalintensity": {
                  "score": 8,
                  "rationale": "Rationale here."
                }
              }
          outgoingConnections:
            - output->"Chat" yuHPRsES2yDtAAj25Hz8e/systemPrompt
          visualData: 1498.3022612740958/704.0227477665467/330/1579//
        '[o8pX04z6AzKqggp7MkxiJ]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" z_i81AhyBqHEF9qryLELo/url
          visualData: 1410.2240497046296/1398.837473527643/330/1606//
        '[pVgbNTAdTHxo010HWnNIH]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 2642.376321174246/1195.5454775227522/330/1579/var(--node-color-3)/var(--node-color-3)
        '[tPLtM5O_KQ7v6kgi5YaMd]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" yuHPRsES2yDtAAj25Hz8e/prompt
          visualData: 2424.9811707802082/1930.73111567062/280/1604//
        '[vPrjrjpcWjV8tBbBatmJ_]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 2aJKNirVkA5agSN9FC97O/object
          visualData: 640.0121827015577/1622.676492269041/280/1604//
        '[yuHPRsES2yDtAAj25Hz8e]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" pVgbNTAdTHxo010HWnNIH/value
          visualData: 2085.0189084605154/1017.2005230884745/230/1579//
        '[zQ4eH1AENAc6WNg_dFtjW]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" vPrjrjpcWjV8tBbBatmJ_/input
          visualData: 260.3268983943451/1542.1096442347543/330/1603/var(--node-color-3)/var(--node-color-3)
        '[z_i81AhyBqHEF9qryLELo]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 1DV4oWkZDupVE5YA3i5Yn/object
          visualData: 1959.9450026720178/1369.5714700656758/280/1604/var(--node-color-4)/var(--node-color-4)
    lVKdxXB5CQuDxfEkNhk_k:
      metadata:
        description: ""
        id: lVKdxXB5CQuDxfEkNhk_k
        name: Universal - Message testing
      nodes:
        '[1BrrzV964n8oytbpMa0Sb]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: Persona dump
          visualData: 1612.077785916582/100.14471258687698/330/1368/var(--node-color-3)/var(--node-color-3)
        '[8dLLLq4BiGMvuhyRdPoj0]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "An investigative report by a prominent Indian media outlet reveals that many of Nestlé India's best-selling products for children — Maggi noodles — are high in sugar, salt, and fat, with little nutritional benefit. The report is based on internal product formulation documents and interviews with former employees who allege that nutrition goals often took a back seat to taste and profit.  A senior pediatrician quoted in the story says Nestlé is hooking a generation onto junk through comfort branding The controversy intensifies when parenting groups and nutritionists begin questioning the company's Good Food, Good Life positioning.  Trigger Points: - The story hits just before exam season, when kids consume more packaged snacks - Critics tie the findings to India's rising childhood obesity and diabetes rates  Media/Social Sentiment: - Trending hashtags: #NestleTargetsKids #NotSoHealthy - Viral posts from parenting influencers and doctors calling for a boycott - News debates on Should Nestlé products be in your child's lunchbox?",
                    "response": "We are going to throw every single employee off a bridge..",
                    "document": "ms3wx92f7uug638zzzfpi9mo",
                    "crisis": "lmfu2zzm92t31sfw047ifs7g"
                  }
                ]
              }
          visualData: -1206.7468607004275/182.55539960719315/330/2062//
        '[EEA5kzJ_j7O5PXtPxdqXN]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" eOQgNgWIUk4qri1SRH_7p/input
          visualData: -1213.9225284118118/-60.726229703504885/330/2061/var(--node-color-3)/var(--node-color-3)
        '[G9P-ke1FCCp1a431O7XUH]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            text: ""
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" s6VJJsSyMuic2mbQe9d-T/input
          visualData: 793/445/230/41//
        '[J6yyJ2AT-F5gJXFMNzfkW]:httpCall "HTTP - Get personas"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - res_body->"Extract JSON" zlYY8j7cxw56sGSOWAWFD/input
          visualData: -40.18206799360684/845.7067845470713/280/2055/var(--node-color-4)/var(--node-color-4)
        '[NnTag_JamoNPM25H3-E5w]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].type
              - $.data[0].story
              - $.data[0].response
              - $.data[0].document
              - $.data[0].crisis
            text: ""
          outgoingConnections:
            - match_0->"Persona system prompt" O9IToozo87EkSxBqBWWuo/type
            - match_1->"Persona system prompt" O9IToozo87EkSxBqBWWuo/story
            - match_2->"Persona system prompt" O9IToozo87EkSxBqBWWuo/response
            - match_3->"Persona system prompt" O9IToozo87EkSxBqBWWuo/documentid
            - match_4->"Persona system prompt" O9IToozo87EkSxBqBWWuo/crisis
            - match_4->"Text" UBditugLjbWTHGQfX_Hzb/crisis
          visualData: -313.8674332402255/64.71686387617487/280/2056//
        '[O9IToozo87EkSxBqBWWuo]:text "Persona system prompt"':
          data:
            normalizeLineEndings: true
            text: >-
              You have been given a JSON item in the following format:


              {
                "data": {
                "id": 3,
                "documentId": "bhrp283cg1523zr5h6m09xra",
                "personality": "Customer",
                "profile": "Details of the profile.",
                "warmth": "Adversary"
                "interests": {
                      "interests": [
                        "Interests of persona"...
                      ]
                    },
                    "values": {
                      "values": [
                        "Values of persona"...
                      ]
                    },
                    "motivations": {
                      "motivation": [
                        "Motivations of persona"...
                      ]
                    },
                    "pains": {
                      "pains": [
                        "Pains of persona"...
                      ]
                    }
                }...
              }



              ---



              ### TASK INSTRUCTIONS



              Iterate over **every item** in the `data` array. For **each and every item**, generate a complete response using this exact structure:



              **Stakeholder Brief (for each item):**


              - Use the value of `"personality"` as the **Role**


              - Use the value of `"profile"` as the **Perspective**


              - Use the value of `"interests"` as the **Interests**


              - Use the value of `"values"` as the **Values**


              - Use the value of `"motivations"` as the **Motivations**


              - Use the value of `"pains"` as the **Pains**


              - Use the value of `"id"` as the **Persona**


              - Use "warmth" to determine the tone of voice:
              	•	"Adversary" = critical, sceptical, and distrustful tone
              	•	"Neutral" = balanced, analytical, and fair tone
              	•	"Supporter" = positive, constructive, and trusting tone

              These are specific to each item and must be used individually per stakeholder.


              Also use the two **global inputs** for every item:


              - **Crisis Event:** `{{story}}` — a brief summary of the sitaution


              - **Campaign:** `{{response}}` — the full announcement of the campaign


              ---


              ### RESPONSE FORMAT (PER STAKEHOLDER):


              For each item, write a stakeholder reaction in **three short, natural-sounding paragraphs** from the stakeholder's point of view. The analysis should consider how the stakeholder interprets the **Campaign:**. The stakeholder feedback should detail their specific reaction to the details of the **Campaign:**. They should comment on if it has motivated them to engage with the brand.


              The response must:
              	•	Focus on the effectiveness of the company's message
              	•	Clearly state which elements have interested them, and which have not
              	•	Reflect the stakeholder's tone of voice, based on "warmth"

              Then, continue with:


              - A line break  


              - Add a single sentence stating reasons whether the stakeholder feels **engaged** or **not engaged** by the company's campaign (do **not** include any numeric score here).



              Finally, assign a numeric **satisfaction rating from 0 to 10**, and include it in the output JSON under `satisfaction`.



              ---



              ### JSON OUTPUT FORMAT (REQUIRED)



              You must return a **single valid JSON object** in exactly this format:



              {
                "data": [
                  {
                    "title": "Temporary loop title",
                    "view": "Full stakeholder reaction text here...",
                    "persona": Numeric persona id from that iteration,
                    "satisfaction": 0,
                    "{{type}}": "{{documentid}}",
                    "crisis": {{crisis}},
                    "suggestion": {
                      "short1": "Suggestion 1 of fewer than 7 words",
                      "detail1": "2 sentences with a detailed prompt of the changes this persona would want",
                      "short2": "Suggestion 2 of fewer than 7 words",
                      "detail2": "2 sentences with a detailed prompt of the changes this persona would want",
                      "short3": "Suggestion 3 of fewer than 7 words",
                      "detail3": "2 sentences with a detailed prompt of the changes this persona would want"
                    }
                  }
                ]
              }



              ### IMPORTANT


              - The {{type}} content will only ever by "press_release" or "holding_statement".


              {{documentid}} will be the numeric id containted in the system prompt. Do not accidentally insert the actual press release in that field.


              Ensure the data associated with "press_release" or "holding_statement" is always the numeric id from {{documentid}}. It should NEVER be "holding_statement": "holding_statement" OR "press_release": "press_release". It would always be either:


              "holding_statement": "{{documentid}}"

              OR

              "press_release": "{{documentid}}"


              - Ensure all seven items are present in the same order in iterated item in the JSON.


              - Ensure title is updated and does not retain the placeholder text "Temporary loop title".


              FINAL OUTPUT SANITISATION RULES (MUST FOLLOW):


              - All field values in the JSON output must be clean strings.


              - Do NOT include any unescaped control characters such as:
                • raw line breaks (newline characters)
                • tab characters
                • carriage returns
              - Use natural paragraph formatting using standard spaces and punctuation only.


              - All newline breaks must be safely embedded within strings (if needed) and never inserted as raw line breaks in the JSON structure.


              - Output must be valid JSON that can be parsed without error using standard JSON.parse().


              - Do not include any markdown or fencing characters such as ``` or ```json, only return the JSON itself
          outgoingConnections:
            - output->"Chat" G9P-ke1FCCp1a431O7XUH/systemPrompt
          visualData: 353.89646653682263/72.32866466045371/330/2058/var(--node-color-5)/var(--node-color-5)
        '[Q76tUdJrdfqwd8aDKDxgE]:httpCall "HTTP - Insert opinion"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/opinion-bulk
            useBodyInput: true
            useHeadersInput: false
          visualData: 1632.3375380520067/447.9954656480777/280/2059/var(--node-color-4)/var(--node-color-4)
        '[UBditugLjbWTHGQfX_Hzb]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/personas?filters%5Bcrises%5D%5BdocumentId%5D%5B$contains%5D={{crisis}}
          outgoingConnections:
            - output->"HTTP - Get personas" J6yyJ2AT-F5gJXFMNzfkW/url
          visualData: -473.07507441682793/900.6037020603044/330/2060//
        '[eOQgNgWIUk4qri1SRH_7p]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" NnTag_JamoNPM25H3-E5w/object
          visualData: -712.620130282685/-16.1908453396276/280/1359//
        '[s6VJJsSyMuic2mbQe9d-T]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" 1BrrzV964n8oytbpMa0Sb/value
            - output->"HTTP - Insert opinion" Q76tUdJrdfqwd8aDKDxgE/req_body
          visualData: 1145.2383975767154/324.26280353681756/330/1335//
        '[zlYY8j7cxw56sGSOWAWFD]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Chat" G9P-ke1FCCp1a431O7XUH/prompt
          visualData: 368.5079362608488/741.2908821468498/280/1302//
    lzDkeo10TytZALkz8u7nq:
      metadata:
        description: Apply best practices and create Q&A statements
        id: lzDkeo10TytZALkz8u7nq
        name: Advisory - Social - Create
      nodes:
        '[-5I-RN6bReLecixHeJKdi]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" pZGp7vxOVzPJMD4TO_McL/object
          visualData: -371.1952413690669/586.8830869674348/280/1534//
        '[-yT9Evb7OVW9H-Tpexhab]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1982.476294768714/517.3503142175965/330/1547/var(--node-color-3)/var(--node-color-3)
        '[C4HUjfsmisDc3KLHsZMEr]:text "Social post creation"':
          data:
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be passed a JSON object in this format:


              {
                  "original": "Text detail...",
                  "detail": "Text detail...",
                  "history": Object,
                  "severity": "Severity rating",
                  "crisis": "documentId"
              }


              You will take the text item in the "detail" item and your job is to interpret that and write three short outputs that would be suitable for use on social media.


              The text should be in the format of a "tweet".


              The tweet would be posted on corporate social channels.


              The total length of each item should be less than 600 characters in total.


              Use natural line breaks in the post like \n.


              Output only a JSON object in the following format:


              {
                  "post1": "Post detail 1...",
                  "post2": "Post detail 2...",
                  "post3": "Post detail 3..."
              }


              Do not include any loose items, markdown or other commentary.
          outgoingConnections:
            - output->"Chat" sx7lFFatNdx8NY1vtmcql/systemPrompt
          visualData: 157.54224569271912/-86.71605321757934/330/1533/var(--node-color-2)/var(--node-color-2)
        '[D_Civ8Vm33E9Sb14LtTaJ]:comment "Comment"':
          data:
            backgroundColor: rgba(0,0,0,0.05)
            color: rgba(255,255,255,1)
            height: 358.55334918726214
            text: Check this call - may need to roll back to an old file as may have
              accidentally edited this file
          visualData: 2126.6067096102024/-187.649395205853/217.84902918590024/1548//
        '[Gse8mes9Za5OrZ9Oxo77r]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 5368.425802376846/-1068.2067020087904/330/1334/var(--node-color-1)/var(--node-color-1)
        '[O8CCTzK8Ohlz-vw7SFD1K]:text "Text"':
          data:
            text: |-
              {
                  "message": {{detail}},
                  "severity": "{{severity}}",
                  "crisis": "{{crisis}}"
              }
          outgoingConnections:
            - output->"Graph Output" -yT9Evb7OVW9H-Tpexhab/value
            - output->"Http Call" m_Zx9uX6-mE-V3wBxI_bs/req_body
          visualData: 1324.5820842811145/238.17385486970645/330/1528//
        '[RUwJaSc8vgcCEkXdeEoC7]:graphInput "Graph Input"':
          data:
            dataType: string
            id: prompt
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" -5I-RN6bReLecixHeJKdi/input
          visualData: -769.952105682811/510.8546356459405/330/1536/var(--node-color-3)/var(--node-color-3)
        '[YWvBJVczgxv5E3wQIkpgq]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 5383.609226114181/-677.9511042199107/330/1333/var(--node-color-1)/var(--node-color-1)
        '[ZyOC1b7xt8K2iRkm6ljj_]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": [
                  {
                  "original": "Text detail...",
                  "detail": "In response to the Skittles Pride Collaboration, we acknowledge the concerns raised by some groups and the subsequent calls for boycotts on social media. We are committed to addressing these concerns with urgency and transparency. Our focus remains on fostering an inclusive environment that respects diverse perspectives.  We are actively engaging in open dialogue with our customers, employees, and community members to better understand their viewpoints. Our priority is to ensure that our actions and communications align with the values of our brand and the communities we serve.  To address the situation, we are implementing a comprehensive communication plan that includes direct outreach to our stakeholders. We reaffirm our commitment to diversity and inclusion, recognizing the importance of these values to our brand identity.  We are taking this matter seriously and are dedicated to maintaining transparency throughout the process. Regular updates will be provided as we navigate this situation, with the aim of rebuilding trust and demonstrating our dedication to being a responsible corporate citizen.  We appreciate the continued support of our loyal customers and stakeholders during this time. Together, we will work towards a resolution that reflects our values and commitment to inclusivity.",
                  "history": "history",
                  "severity": "High",
                  "crisis": "nvsvrsajrztv8ih5yjpq7uj5",
                  "role": "role"
                  }
                ]
              }
          visualData: -370.27908646194885/-73.81947658525405/330/1545//
        '[iDRIIpXOrmW7y5ItpJUKP]:subGraph "Subgraph"':
          data:
            graphId: o8S-CeePSytOJAterI2wq
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 5357.038234573845/-392.5443456974041/330/1326/var(--node-color-1)/var(--node-color-1)
        '[m_Zx9uX6-mE-V3wBxI_bs]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-social
            useBodyInput: true
            useHeadersInput: false
          visualData: 1809.452982477974/-114.01356395089391/280/1546/var(--node-color-4)/var(--node-color-4)
        '[pZGp7vxOVzPJMD4TO_McL]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.severity
              - $.crisis
              - $.role
            text: ""
          outgoingConnections:
            - match_0->"Chat" sx7lFFatNdx8NY1vtmcql/prompt
            - match_1->"Text" O8CCTzK8Ohlz-vw7SFD1K/severity
            - match_2->"Text" O8CCTzK8Ohlz-vw7SFD1K/crisis
            - match_3->"Social post creation" C4HUjfsmisDc3KLHsZMEr/role
          visualData: 78.10867887211202/561.4943710252628/280/1521//
        '[sx7lFFatNdx8NY1vtmcql]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" O8CCTzK8Ohlz-vw7SFD1K/detail
          visualData: 771.862026708221/143.61529321689667/230/1508//
    o8S-CeePSytOJAterI2wq:
      metadata:
        description: ""
        id: o8S-CeePSytOJAterI2wq
        name: Advisory - Message testing
      nodes:
        '[0toQ7otCbGYV4BJhfroQs]:text "MAGGI"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": [
                  {
                    "type": "holding_statement",
                    "story": "An investigative report by a prominent Indian media outlet reveals that many of Nestlé India's best-selling products for children — Maggi noodles — are high in sugar, salt, and fat, with little nutritional benefit. The report is based on internal product formulation documents and interviews with former employees who allege that nutrition goals often took a back seat to taste and profit.  A senior pediatrician quoted in the story says Nestlé is hooking a generation onto junk through comfort branding The controversy intensifies when parenting groups and nutritionists begin questioning the company's Good Food, Good Life positioning.  Trigger Points: - The story hits just before exam season, when kids consume more packaged snacks - Critics tie the findings to India's rising childhood obesity and diabetes rates  Media/Social Sentiment: - Trending hashtags: #NestleTargetsKids #NotSoHealthy - Viral posts from parenting influencers and doctors calling for a boycott - News debates on Should Nestlé products be in your child's lunchbox?",
                    "response": "Nestlé India acknowledges the concerns raised following a recent investigative report and is committed to addressing them with transparency and responsibility. We recognize the importance of maintaining trust with our consumers, health experts, and advocacy groups, and are taking decisive steps to address the situation.  The report has led to significant discussions on social media, and we are aware of the impact this has had on our brand perception. We are actively engaging with major retailers to address their concerns and are committed to restoring confidence in our products. We are also aware of the potential legal scrutiny regarding our advertising practices and are taking this matter seriously.  In response, we are implementing the following actions: - Engaging in open dialogue with consumers and stakeholders to reaffirm our commitment to children's health and nutrition. - Conducting a comprehensive review of our advertising practices to ensure compliance with all relevant regulations. - Launching a transparent communication strategy to keep stakeholders informed of our progress and efforts to address these issues.  We deeply value the trust our consumers place in us and are dedicated to restoring that trust through accountability and meaningful action. We appreciate the feedback we have received and are committed to making changes that prioritize the health and safety of our consumers.  Thank you for your understanding and support during this challenging time.",
                    "document": "dve74eedznwlkogkbmhfzluz",
                    "crisisid": "nvsvrsajrztv8ih5yjpq7uj5"
                  }
                ]
              }
          visualData: -1150.457473814161/488.7927993493507/330/1366//
        '[3jzPS5iSz008yygaMwqM8]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: Persona dump
          visualData: 1612.077785916582/100.14471258687698/330/1368/var(--node-color-3)/var(--node-color-3)
        '[5EiLKmo7w9b4gFBgcGYGH]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 2048
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            text: ""
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" 5Y3FictwbAFC76GeVupmD/input
          visualData: 793/445/230/41//
        '[5MXvKU7VrRMcqa06Uu95g]:httpCall "HTTP - Get personas"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - res_body->"Extract JSON" W7K_wlTZmm7h6113_lBR7/input
          visualData: -7.218032393627169/803.9523394537637/280/1272/var(--node-color-4)/var(--node-color-4)
        '[5Y3FictwbAFC76GeVupmD]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Graph Output" 3jzPS5iSz008yygaMwqM8/value
            - output->"HTTP - Insert opinion" LRsfzaFpuaSwSyF2M7Q6n/req_body
          visualData: 1145.2383975767154/324.26280353681756/330/1335//
        '[DXAvqxOfU-d_soA_drX3j]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" xhBkRsJdMKOgM6bdi3J-f/object
          visualData: -712.620130282685/-16.1908453396276/280/1359//
        '[LRsfzaFpuaSwSyF2M7Q6n]:httpCall "HTTP - Insert opinion"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/opinion-bulk
            useBodyInput: true
            useHeadersInput: false
          visualData: 1633.4363392386726/322.73213036815497/280/1313/var(--node-color-4)/var(--node-color-4)
        '[W7K_wlTZmm7h6113_lBR7]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Chat" 5EiLKmo7w9b4gFBgcGYGH/prompt
          visualData: 368.5079362608488/741.2908821468498/280/1302//
        '[ior0x9Ow0Q_LH4R2-jRL8]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" DXAvqxOfU-d_soA_drX3j/input
          visualData: -1171.9481857882429/-60.81898604789532/330/1360/var(--node-color-3)/var(--node-color-3)
        '[kaqyS8z6lnhb9qI8EonOo]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "An investigative report by a prominent Indian media outlet reveals that many of Nestlé India's best-selling products for children — Maggi noodles — are high in sugar, salt, and fat, with little nutritional benefit. The report is based on internal product formulation documents and interviews with former employees who allege that nutrition goals often took a back seat to taste and profit.  A senior pediatrician quoted in the story says Nestlé is hooking a generation onto junk through comfort branding The controversy intensifies when parenting groups and nutritionists begin questioning the company's Good Food, Good Life positioning.  Trigger Points: - The story hits just before exam season, when kids consume more packaged snacks - Critics tie the findings to India's rising childhood obesity and diabetes rates  Media/Social Sentiment: - Trending hashtags: #NestleTargetsKids #NotSoHealthy - Viral posts from parenting influencers and doctors calling for a boycott - News debates on Should Nestlé products be in your child's lunchbox?",
                    "response": "We are going to throw every single employee off a bridge..",
                    "document": "atk2z96cnvaefi4j5l4tv83m",
                    "crisisid": "nvsvrsajrztv8ih5yjpq7uj5"
                  }
                ]
              }
          visualData: -1139.4008115364286/152.3298273756293/330/1365//
        '[lzjxmw4IEOlvyLbivSIQm]:text "Text"':
          data:
            body: ""
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/personas?filters%5Bcrises%5D%5BdocumentId%5D%5B$contains%5D={{crisis}}
          outgoingConnections:
            - output->"HTTP - Get personas" 5MXvKU7VrRMcqa06Uu95g/url
          visualData: -464.28466492350003/1052.238265820211/330/1367//
        '[xDt2dHDGaMAshg_hApWi9]:text "Persona system prompt"':
          data:
            normalizeLineEndings: true
            text: >-
              You have been given a JSON item in the following format:


              {
                "data": {
                "id": 3,
                "documentId": "bhrp283cg1523zr5h6m09xra",
                "personality": "Customer",
                "profile": "Details of the profile.",
                "warmth": "Adversary"
                "interests": {
                      "interests": [
                        "Interests of persona"...
                      ]
                    },
                    "values": {
                      "values": [
                        "Values of persona"...
                      ]
                    },
                    "motivations": {
                      "motivation": [
                        "Motivations of persona"...
                      ]
                    },
                    "pains": {
                      "pains": [
                        "Pains of persona"...
                      ]
                    }
                }...
              }



              ---



              ### TASK INSTRUCTIONS



              Iterate over **every item** in the `data` array. For **each and every item**, generate a complete response using this exact structure:



              **Stakeholder Brief (for each item):**


              - Use the value of `"personality"` as the **Role**


              - Use the value of `"profile"` as the **Perspective**


              - Use the value of `"interests"` as the **Interests**


              - Use the value of `"values"` as the **Values**


              - Use the value of `"motivations"` as the **Motivations**


              - Use the value of `"pains"` as the **Pains**


              - Use the value of `"id"` as the **Persona**


              - Use "warmth" to determine the tone of voice:
              	•	"Adversary" = critical, sceptical, and distrustful tone
              	•	"Neutral" = balanced, analytical, and fair tone
              	•	"Supporter" = positive, constructive, and trusting tone

              These are specific to each item and must be used individually per stakeholder.


              Also use the two **global inputs** for every item:


              - **Crisis Event:** `{{story}}` — a brief summary of the sitaution


              - **Campaign:** `{{response}}` — the full announcement of the campaign


              ---


              ### RESPONSE FORMAT (PER STAKEHOLDER):


              For each item, write a stakeholder reaction in **three short, natural-sounding paragraphs** from the stakeholder's point of view. The analysis should consider how the stakeholder interprets the **Campaign:**. The stakeholder feedback should detail their specific reaction to the details of the **Campaign:**. They should comment on if it has motivated them to engage with the brand.


              The response must:
              	•	Focus on the effectiveness of the company's message
              	•	Clearly state which elements have interested them, and which have not
              	•	Reflect the stakeholder's tone of voice, based on "warmth"

              Then, continue with:


              - A line break  


              - Add a single sentence stating reasons whether the stakeholder feels **engaged** or **not engaged** by the company's campaign (do **not** include any numeric score here).



              Finally, assign a numeric **satisfaction rating from 0 to 10**, and include it in the output JSON under `satisfaction`.



              ---



              ### JSON OUTPUT FORMAT (REQUIRED)



              You must return a **single valid JSON object** in exactly this format:



              {
                "data": [
                  {
                    "title": "Temporary loop title",
                    "view": "Full stakeholder reaction text here...",
                    "persona": Numeric persona id from that iteration,
                    "satisfaction": 0,
                    "{{type}}": "{{documentid}}",
                    "crisis": {{crisis}},
                    "suggestion": {
                      "short1": "Suggestion 1 of fewer than 7 words",
                      "detail1": "2 sentences with a detailed prompt of the changes this persona would want",
                      "short2": "Suggestion 2 of fewer than 7 words",
                      "detail2": "2 sentences with a detailed prompt of the changes this persona would want",
                      "short3": "Suggestion 3 of fewer than 7 words",
                      "detail3": "2 sentences with a detailed prompt of the changes this persona would want"
                    }
                  }
                ]
              }



              ### IMPORTANT


              - The {{type}} content will only ever by "press_release" or "holding_statement".


              {{documentid}} will be the numeric id containted in the system prompt. Do not accidentally insert the actual press release in that field.


              Ensure the data associated with "press_release" or "holding_statement" is always the numeric id from {{documentid}}. It should NEVER be "holding_statement": "holding_statement" OR "press_release": "press_release". It would always be either:


              "holding_statement": "{{documentid}}"

              OR

              "press_release": "{{documentid}}"


              - Ensure all seven items are present in the same order in iterated item in the JSON.


              - Ensure title is updated and does not retain the placeholder text "Temporary loop title".


              FINAL OUTPUT SANITISATION RULES (MUST FOLLOW):


              - All field values in the JSON output must be clean strings.


              - Do NOT include any unescaped control characters such as:
                • raw line breaks (newline characters)
                • tab characters
                • carriage returns
              - Use natural paragraph formatting using standard spaces and punctuation only.


              - All newline breaks must be safely embedded within strings (if needed) and never inserted as raw line breaks in the JSON structure.


              - Output must be valid JSON that can be parsed without error using standard JSON.parse().


              - Do not include any markdown or fencing characters such as ``` or ```json, only return the JSON itself
          outgoingConnections:
            - output->"Chat" 5EiLKmo7w9b4gFBgcGYGH/systemPrompt
          visualData: 345.10605704349473/121.77471806042323/330/1356/var(--node-color-2)/var(--node-color-2)
        '[xhBkRsJdMKOgM6bdi3J-f]:destructure "Destructure"':
          data:
            paths:
              - $.data[0].type
              - $.data[0].story
              - $.data[0].response
              - $.data[0].document
              - $.data[0].crisisid
            text: ""
          outgoingConnections:
            - match_0->"Persona system prompt" xDt2dHDGaMAshg_hApWi9/type
            - match_1->"Persona system prompt" xDt2dHDGaMAshg_hApWi9/story
            - match_2->"Persona system prompt" xDt2dHDGaMAshg_hApWi9/response
            - match_3->"Persona system prompt" xDt2dHDGaMAshg_hApWi9/documentid
            - match_4->"Persona system prompt" xDt2dHDGaMAshg_hApWi9/crisis
            - match_4->"Text" lzjxmw4IEOlvyLbivSIQm/crisis
          visualData: -300.68181900023365/10.875605729541405/280/1348//
    oNDvNATb6Cp0mwhFoA39A:
      metadata:
        description: ""
        id: oNDvNATb6Cp0mwhFoA39A
        name: Advisory - Scenarios - Submit
      nodes:
        '[1CrILRhQbgDe3WTIPQa5o]:text "Text"':
          data:
            text: |
              {
                  "title": "{{title}}",
                  "detail": "{{input}}",
                  "severity": "High",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Submit scenario" vGrMCp_P9c7YdmxhhVt0j/req_body
          visualData: 1139.0392673838164/-44.572934944116184/330/1022//
        '[1qj6Co0QHa5bSTYQVEa3n]:text "Text"':
          data:
            text: |
              {
                  "title": "{{title}}",
                  "detail": "{{input}}",
                  "severity": "Low",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Submit scenario" N-4ftkm3HlWZXOFajTkuX/req_body
          visualData: 1178.2307278133226/884.0831626672435/330/1026//
        '[6MfIA8qVDWK88vrdAM8uu]:httpCall "HTTP - Submit scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-scenario
            useBodyInput: true
            useHeadersInput: false
          visualData: 1689.704650741663/465.31229678879856/280/1023/var(--node-color-4)/var(--node-color-4)
        '[AG3KlNFLjYWCmgFLLBti5]:destructure "Destructure"':
          data:
            paths:
              - $.high
              - $.medium
              - $.low
              - $.high-title
              - $.medium-title
              - $.low-title
          outgoingConnections:
            - match_0->"Escape chars" NfF1QuChlgvE0W3a1yjsv/input1
            - match_1->"Escape chars" GDqFcz_Y8Y9alSR8jBnaU/input1
            - match_2->"Escape chars" CyJZJea-eMnyXOOf7mVY0/input1
            - match_3->"Text" 1CrILRhQbgDe3WTIPQa5o/title
            - match_4->"Text" OtrcUUB5vFEU7ON7mpZBk/title
            - match_5->"Text" 1qj6Co0QHa5bSTYQVEa3n/title
          visualData: 290.4877952850993/136.88424718587225/280/998//
        '[CyJZJea-eMnyXOOf7mVY0]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" 1qj6Co0QHa5bSTYQVEa3n/input
          visualData: 788.8296094686916/888.550399746584/230/1029/var(--node-color-2)/var(--node-color-2)
        '[GDqFcz_Y8Y9alSR8jBnaU]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" OtrcUUB5vFEU7ON7mpZBk/input
          visualData: 767.7142478172325/392.9353366261563/230/1028/var(--node-color-2)/var(--node-color-2)
        '[LFQ7hV1m94UbW-qNJmK-c]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 323.81540695367414/963.0715829007078/330/1031//
        '[N-4ftkm3HlWZXOFajTkuX]:httpCall "HTTP - Submit scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-scenario
            useBodyInput: true
            useHeadersInput: false
          visualData: 1711.6872026970589/904.4755084465291/280/1025/var(--node-color-4)/var(--node-color-4)
        '[NfF1QuChlgvE0W3a1yjsv]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" 1CrILRhQbgDe3WTIPQa5o/input
          visualData: 721.2604521840224/-211.0719163050949/230/1027/var(--node-color-2)/var(--node-color-2)
        '[ODTD1f3YIQB7Jjx5qfflt]:getGlobal "Get Global"':
          data:
            dataType: string
            id: documentId
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"Text" 1CrILRhQbgDe3WTIPQa5o/documentId
            - value->"Text" 1qj6Co0QHa5bSTYQVEa3n/documentId
            - value->"Text" LFQ7hV1m94UbW-qNJmK-c/input
            - value->"Text" OtrcUUB5vFEU7ON7mpZBk/documentId
          visualData: -329.8892014167664/421.34830166324355/230/1035//
        '[OtrcUUB5vFEU7ON7mpZBk]:text "Text"':
          data:
            text: |
              {
                  "title": "{{title}}",
                  "detail": "{{input}}",
                  "severity": "Medium",
                  "crisis": "{{documentId}}"
              }
          outgoingConnections:
            - output->"HTTP - Submit scenario" 6MfIA8qVDWK88vrdAM8uu/req_body
          visualData: 1153.1161751514558/418.5653977949644/330/1024//
        '[Z00m77150kI2e-9hLYAHl]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" AG3KlNFLjYWCmgFLLBti5/object
          visualData: -347.7169630176482/86.98115236792142/425.72297281994804/1034/var(--node-color-3)/var(--node-color-3)
        '[vGrMCp_P9c7YdmxhhVt0j]:httpCall "HTTP - Submit scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: https://crisis-comms.vercel.app/api/submit-scenario
            useBodyInput: true
            useHeadersInput: false
          visualData: 1694.11451907446/1.3772360174935017/280/1032/var(--node-color-4)/var(--node-color-4)
    omDWTL29bPavJp3tqmx4V:
      metadata:
        description: ""
        id: omDWTL29bPavJp3tqmx4V
        name: Create - Scenarios - Submit
      nodes:
        '[3R28XcWIai3Hj8V49Ac14]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                  "entity": "{{entity}}",
                  "scenario": "{{scenario}}"
              }
          outgoingConnections:
            - output->"Subgraph" DKuBHHZM56Kw1LlntCWAQ/input
          visualData: 2319.419577341717/1157.2933059964485/330/1955//
        '[3_p39awSQBwb7ubVKexHz]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" lSwYH6WvGyFNq07duM1Vv/object
          visualData: 588.7884424808426/-219.40432160699288/280/1791//
        '[87zRfCwVwP6x7p5jxVshZ]:graphInput "Graph Input"':
          data:
            dataType: object
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Destructure" JYl7qJ7axLois0lvpsOU-/object
            - data->"HTTP - Submit scenario" UqaKQVr_xnhFSNLtXu7QB/req_body
          visualData: -1013.4982822587107/4.679120042042001/425.72297281994804/2075/var(--node-color-3)/var(--node-color-3)
        '[B3-ryhc3hExmtEsGrJ-Re]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          outgoingConnections:
            - output->"Eval" Xilb6P_NYWlu4zvOn4YqE/input1
          visualData: 2816.643999337221/640.4286462334334/330/1804//
        '[BdY7MGvxfkjmw_Ct57jfA]:subGraph "Subgraph"':
          data:
            graphId: r8FT7A0IWUaeF6tg4M7H0
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2879.3736716373132/1802.4450952030757/330/2080/var(--node-color-1)/var(--node-color-1)
        '[CJI7qTOh51YQBKKmYS4wi]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 1962.5979358874292/-88.86577186398429/330/1806//
        '[DKuBHHZM56Kw1LlntCWAQ]:subGraph "Subgraph"':
          data:
            graphId: ywZp1_oH_7T_1ARvht2gZ
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2762.118323447706/1032.5172840930672/330/1851/var(--node-color-1)/var(--node-color-1)
        '[IELxW_mW1gKPvHR97pU3n]:pop "Pop"':
          data:
            fromFront: true
          outgoingConnections:
            - lastItem->"Text" 3R28XcWIai3Hj8V49Ac14/scenario
            - lastItem->"Text" OZg6MCQ7lIYKgoa8LUPJT/input
            - lastItem->"Text" lvCjgHrCOrRnQjYHSHUyR/scenario
            - restOfArray->"Array" k_RmW3CL49ptSGFM3O3pL/input1
          visualData: 1763.6713852425098/641.2170022865121/230/1849//
        '[JYl7qJ7axLois0lvpsOU-]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenarios
              - $.scenarios.idea_summary
          outgoingConnections:
            - match_0->"Text" 3R28XcWIai3Hj8V49Ac14/entity
            - match_0->"Text" MN5jMjBKbfIzYkykInBtX/input
            - match_0->"Text" lvCjgHrCOrRnQjYHSHUyR/entity
            - match_0->"Text" pugEetb1EcQ3O7Pr26KXT/entity
            - match_1->"Array" O5zbc8y6KM7cMRl3PTSGj/input1
          visualData: -218.94350493899847/475.88456497117215/280/1758//
        '[JuzPr4Vd_mhivVnDXeATM]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 3317.2780827154465/2352.4931237976934/330/2077//
        '[MN5jMjBKbfIzYkykInBtX]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 191.752473020094/373.6130680572602/330/1759//
        '[O5zbc8y6KM7cMRl3PTSGj]:array "Array"':
          data:
            flatten: true
            flattenDeep: false
          visualData: 290.3068049640271/799.3649826634578/230/1781//
        '[O8otPXyEzhAST8oEx6EKP]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                  "entity": "lmfu2zzm92t31sfw047ifs7g",
                  "scenario": "nkpmla34bdxmfm9rl9tecci0",
                  "role": "You are a consumer PR strategist focused on driving awareness, engagement, and brand love for products and experiences in everyday culture. Your role is to create campaign ideas and messaging that resonate with specific audience segments—amplifying stories through earned media, influencer partnerships, stunts, social moments, and brand activations. You translate marketing goals into culturally relevant narratives, identifying the creative hooks, emotional levers, and formats that make campaigns talkable and shareable. Whether launching a new product, reigniting relevance, or responding to trends, your job is to ensure the brand is seen, heard, and positively talked about in the right places, by the right people.",
                  "slot": "slot1"
              }
          visualData: 2344.099551810627/2227.436607427279/330/2074//
        '[OZg6MCQ7lIYKgoa8LUPJT]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 2324.1764370527417/363.0109074097374/330/1812//
        '[UEeJop3Aa-P3tdkksEfAF]:array "Array"':
          data:
            flatten: true
            flattenDeep: false
          outgoingConnections:
            - output->"Loop Controller" j-rJJSkf-HG0hDggKktRT/input1Default
          visualData: 1377.993502954499/-231.20565141669252/230/1848//
        '[UqaKQVr_xnhFSNLtXu7QB]:httpCall "HTTP - Submit scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            text: ""
            url: https://crisis-comms.vercel.app/api/submit-entity-scenario
            useBodyInput: true
            useHeadersInput: false
          isSplitRun: true
          isSplitSequential: true
          outgoingConnections:
            - res_body->"Text" cNIZedJe9c6gA0LK8XZVg/json
          splitRunMax: 10
          variants:
            - data:
                body: ""
                errorOnNon200: true
                headers: >-
                  {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
                  }
                method: POST
                text: ""
                url: https://crisis-comms.vercel.app/api/submit-opportunity-scenario
                useBodyInput: true
                useHeadersInput: false
              id: out
            - data:
                body: ""
                errorOnNon200: true
                headers: >-
                  {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
                  }
                method: POST
                text: ""
                url: https://crisis-comms.vercel.app/api/submit-opportunity-scenario
                useBodyInput: true
                useHeadersInput: false
              id: output
          visualData: -171.9275495567042/-207.17177448548352/280/1745/var(--node-color-5)/var(--node-color-5)
        '[Xilb6P_NYWlu4zvOn4YqE]:code "Eval"':
          data:
            code: |-
              const num = inputs.input1.value;

              return {
                output1: {
                  type: 'boolean',
                  value: num > 0
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Loop Controller" j-rJJSkf-HG0hDggKktRT/continue
          visualData: 2050.4382166910646/202.83371258980196/230/1765/var(--node-color-2)/var(--node-color-2)
        '[YThn72y2AA6KJjbN2lhJR]:httpCall "Http - Get role & tones"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tones?populate=*
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" cqXatyK3h3nELXxXr0J1D/object
          visualData: 1289.5077033092239/2205.9180498463065/280/2085/var(--node-color-4)/var(--node-color-4)
        '[cNIZedJe9c6gA0LK8XZVg]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "value": {{json}}
              }
          outgoingConnections:
            - output->"Extract JSON" 3_p39awSQBwb7ubVKexHz/input
          visualData: 183.5589575257596/-217.72819341244028/330/1790//
        '[cqXatyK3h3nELXxXr0J1D]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_1->"Text" lvCjgHrCOrRnQjYHSHUyR/role
          visualData: 1703.249785857267/2400.0563166199845/280/2085//
        '[d6z39QXJflEms3PSllohD]:subGraph "Subgraph"':
          data:
            graphId: hoenAxCMNvoeN7fveNmvO
            useAsGraphPartialOutput: false
            useErrorOutput: false
          description: Q&A agent
          visualData: 2870.9994223499616/2082.316947110565/330/2079/var(--node-color-1)/var(--node-color-1)
        '[haPCi94mBpa_hzTXRDWpz]:subGraph "Subgraph"':
          data:
            graphId: tfM8ynLGCK90qQnqxKhO8
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Text" JuzPr4Vd_mhivVnDXeATM/input
          visualData: 2862.391223815195/2363.8741219530534/330/2076/var(--node-color-1)/var(--node-color-1)
        '[j-rJJSkf-HG0hDggKktRT]:loopController "Loop Controller"':
          data:
            maxIterations: 10
          outgoingConnections:
            - iteration->"Text" CJI7qTOh51YQBKKmYS4wi/input
            - iteration->"Text" lvCjgHrCOrRnQjYHSHUyR/iteration
            - output1->"Pop" IELxW_mW1gKPvHR97pU3n/array
          visualData: 1331.863377189279/70.5059378331209/280/1850//
        '[j-sFVM4Se894mUmnqOp0P]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1625.3301536573233/-533.59099401651/330/1821/var(--node-color-3)/var(--node-color-3)
        '[k_RmW3CL49ptSGFM3O3pL]:array "Array"':
          data:
            flatten: true
            flattenDeep: false
          outgoingConnections:
            - length->"Text" B3-ryhc3hExmtEsGrJ-Re/input
            - output->"Loop Controller" j-rJJSkf-HG0hDggKktRT/input1
          visualData: 2260.9149909840435/662.1371293625716/230/1805//
        '[lSwYH6WvGyFNq07duM1Vv]:destructure "Destructure"':
          data:
            paths:
              - $.value
          outgoingConnections:
            - match_0->"Array" UEeJop3Aa-P3tdkksEfAF/input1
            - match_0->"Graph Output" j-sFVM4Se894mUmnqOp0P/value
          visualData: 941.1917203262255/-224.16998338573086/280/1792//
        '[lvCjgHrCOrRnQjYHSHUyR]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                  "entity": "{{entity}}",
                  "scenario": "{{scenario}}",
                  "role": "{{role}}",
                  "slot": "slot{{iteration}}"
              }
          outgoingConnections:
            - output->"Subgraph" BdY7MGvxfkjmw_Ct57jfA/input
            - output->"Subgraph" d6z39QXJflEms3PSllohD/input
            - output->"Subgraph" haPCi94mBpa_hzTXRDWpz/prompt
            - output->"Subgraph" m4XOmn_dPEooBQjofGuF5/input
          visualData: 2357.586338729317/1693.2398633637204/330/1950//
        '[m4XOmn_dPEooBQjofGuF5]:subGraph "Subgraph"':
          data:
            graphId: InjRSbXpuhFO-7TgZ2VyH
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2882.063491334935/1523.6571890264413/330/2082/var(--node-color-1)/var(--node-color-1)
        '[pugEetb1EcQ3O7Pr26KXT]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"Http - Get role & tones" YThn72y2AA6KJjbN2lhJR/url
          visualData: 845.8699802354287/2320.4838358224283/330/2086//
    r8FT7A0IWUaeF6tg4M7H0:
      metadata:
        description: Apply best practices and create Q&A statements
        id: r8FT7A0IWUaeF6tg4M7H0
        name: Universal - PR write & message test
      nodes:
        '[20SbTGgZgiTicJQkcTarU]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "An investigative report by a prominent Indian media outlet reveals that many of Nestlé India's best-selling products for children — Maggi noodles — are high in sugar, salt, and fat, with little nutritional benefit. The report is based on internal product formulation documents and interviews with former employees who allege that nutrition goals often took a back seat to taste and profit.  A senior pediatrician quoted in the story says Nestlé is hooking a generation onto junk through comfort branding The controversy intensifies when parenting groups and nutritionists begin questioning the company's Good Food, Good Life positioning.  Trigger Points: - The story hits just before exam season, when kids consume more packaged snacks - Critics tie the findings to India's rising childhood obesity and diabetes rates  Media/Social Sentiment: - Trending hashtags: #NestleTargetsKids #NotSoHealthy - Viral posts from parenting influencers and doctors calling for a boycott - News debates on Should Nestlé products be in your child's lunchbox?",
                    "response": "We are going to throw every single employee off a bridge..",
                    "document": "ms3wx92f7uug638zzzfpi9mo",
                    "crisis": "lmfu2zzm92t31sfw047ifs7g"
                  }
                ]
              }
          visualData: 3361.1213530867512/1589.4635332779608/330/2082//
        '[2rpU8hIJ5jtPLi2zfYJQc]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" X0MW0cuRR7clgcN95yQuB/story
          visualData: 2821.5476720776446/1539.597719156266/230/2076/var(--node-color-2)/var(--node-color-2)
        '[GukJE-VLpTvxKPk8-gBch]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" Kyq1BPy1NkHxyxW9jX80H/object
          visualData: 1064.736682251785/1226.338117622543/280/2061//
        '[HhsPJOhE2oj3yvI2_XT2I]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" YouHQb-luGGBwS1lWMi69/object
          visualData: 176.102302390815/546.1172685778872/280/2080//
        '[Kyq1BPy1NkHxyxW9jX80H]:destructure "Destructure"':
          data:
            paths:
              - $.detail
          outgoingConnections:
            - match_0->"Escape chars" qJmL-HFLxo29_--V-ozd_/input1
          visualData: 1729.9370826875308/1048.9969784471757/280/2066//
        '[RmH5byobrHQ19TrL7TIOy]:destructure "Destructure"':
          data:
            paths:
              - $.documentId
          outgoingConnections:
            - match_0->"Text" X0MW0cuRR7clgcN95yQuB/document
          visualData: 1908.392287170366/650.14101620553/280/2041//
        '[TpuSWAUHjEYMCbNvaf_MN]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect entity" hYbPg10rdNlV8o-kU6Jar/url
          visualData: 1581.783646790868/1451.2315457157738/330/2075//
        '[W-XLHwK5rVQxduXupihwA]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                  "entity": "lmfu2zzm92t31sfw047ifs7g",
                  "scenario": "nkpmla34bdxmfm9rl9tecci0",
                  "role": "You are a consumer PR strategist focused on driving awareness, engagement, and brand love for products and experiences in everyday culture. Your role is to create campaign ideas and messaging that resonate with specific audience segments—amplifying stories through earned media, influencer partnerships, stunts, social moments, and brand activations. You translate marketing goals into culturally relevant narratives, identifying the creative hooks, emotional levers, and formats that make campaigns talkable and shareable. Whether launching a new product, reigniting relevance, or responding to trends, your job is to ensure the brand is seen, heard, and positively talked about in the right places, by the right people.",
                  "slot": "slot1"
              }
          visualData: -305.66552902895654/984.7336104009426/330/2084//
        '[X0MW0cuRR7clgcN95yQuB]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                "data": [
                  {
                    "type": "press_release",
                    "story": "{{story}}",
                    "response": "{{response}}",
                    "document": "{{document}}",
                    "crisis": "{{entity}}"
                  }
                ]
              }
          outgoingConnections:
            - output->"Subgraph" jSDi74ZVhWgd6yRH0aCiJ/stringGraph
          visualData: 3355.2885691657734/1060.5064776340726/330/2070//
        '[XlVN-__d2NohHA6gyIvGb]:destructure "Destructure"':
          data:
            paths:
              - $.data.description
          outgoingConnections:
            - match_0->"Escape chars" 2rpU8hIJ5jtPLi2zfYJQc/input1
          visualData: 2426.889035733013/1740.6664714931628/280/2077//
        '[YXvBo11dklzDcOwsMGJRJ]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" HhsPJOhE2oj3yvI2_XT2I/input
            - data->"Subgraph" ryZAUoBAoVESF7BR4ccXi/input
          visualData: -444.2812908575113/553.1855089475481/330/2085/var(--node-color-3)/var(--node-color-3)
        '[YouHQb-luGGBwS1lWMi69]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" TpuSWAUHjEYMCbNvaf_MN/input
            - match_0->"Text" X0MW0cuRR7clgcN95yQuB/entity
          visualData: 602.3647326512285/493.7380822247168/280/2078//
        '[hYbPg10rdNlV8o-kU6Jar]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" XlVN-__d2NohHA6gyIvGb/object
          visualData: 2050.952130792442/1510.1896749306513/280/2058/var(--node-color-4)/var(--node-color-4)
        '[jSDi74ZVhWgd6yRH0aCiJ]:subGraph "Subgraph"':
          data:
            graphId: lVKdxXB5CQuDxfEkNhk_k
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 3863.22849397689/1276.7121197630045/330/2083/var(--node-color-1)/var(--node-color-1)
        '[qJmL-HFLxo29_--V-ozd_]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" X0MW0cuRR7clgcN95yQuB/response
          visualData: 2200.1429114842176/869.6057550596502/230/2068/var(--node-color-2)/var(--node-color-2)
        '[ryZAUoBAoVESF7BR4ccXi]:subGraph "Subgraph"':
          data:
            graphId: zaszbOz1wpYtXytDJCEhg
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Extract JSON" GukJE-VLpTvxKPk8-gBch/input
            - output->"HTTP - Submit press release"
              udwNRqdKBi3FbOeUxNeDW/req_body
          visualData: 514.7389562305565/1049.6075998191504/330/2052/var(--node-color-1)/var(--node-color-1)
        '[udwNRqdKBi3FbOeUxNeDW]:httpCall "HTTP - Submit press release"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-entity-pressrelease
            useBodyInput: true
            useHeadersInput: false
          outgoingConnections:
            - json->"Destructure" RmH5byobrHQ19TrL7TIOy/object
          visualData: 1209.2768326401124/668.0615533048633/280/2054/var(--node-color-4)/var(--node-color-4)
    tF54ClWl2MYfhx6TaV778:
      metadata:
        description: ""
        id: tF54ClWl2MYfhx6TaV778
        name: Create - Culturescore - Commercial impact
      nodes:
        '[1Oc4-P7LidZoAITOaNGEP]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" aN-bOrHxMtE6c1hQShm_e/input
          visualData: -964.4228018556697/1612.3628348460263/330/1584/var(--node-color-3)/var(--node-color-3)
        '[4sYWpszM8EGxkYKCnqss3]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
            text: ""
          outgoingConnections:
            - match_0->"Text" lpAQJIZpvflIZydtezDxn/input
            - match_1->"Text" cmNV1GCVjeDPCwM5Lo1h1/input
          visualData: -111.83735644534568/1621.7898978931016/280/1603//
        '[599b46FppI55XgLCd-ghS]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1974.4111063175262/1120.2086305435098/330/1604/var(--node-color-3)/var(--node-color-3)
        '[NJtP7eOexHiWBNugXMW--]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a cultural analyst specialising in consumer PR.


              In the user prompt, you will be given a description of a consumer PR campaign, along with a defined {{audience}}.


              Your task is to assess the commercial impact of the campaign — that is, how likely it is to influence audience behaviour in a way that drives business results, such as increased purchases, brand consideration, product trials, or commercial engagement. Base your evaluation on the strength of the idea, its fit with audience values, and its ability to convert attention into action.


              Scoring Scale (0-10):


              0

              No Commercial Impact - Campaign is unlikely to influence any purchasing behaviour or brand outcomes.

              1-3

              Low Impact - May generate awareness, but little to no expected shift in consumer behaviour.

              4-5

              Moderate Impact - Some likelihood of influencing trial or soft engagement (e.g. website visits, product inquiries).

              6-7

              Notable Impact - Likely to affect purchase intent or consideration among a portion of the audience.

              8-9

              High Impact - Strong potential to drive measurable commercial results through increased interest, demand, or loyalty.

              10

              Maximum Impact - Highly effective commercial idea; expected to directly influence sales, sign-ups, or major growth KPIs.


              Output:


              Return only a JSON object in the following format. Do not include any commentary, markdown, or stray characters.


              {
                "culturescore_commercialimpact": {
                  "score": 8,
                  "rationale": "Rationale here."
                }
              }
          outgoingConnections:
            - output->"Chat" _ajQpifCCleYMtv8kINWm/systemPrompt
          visualData: 1200.9498898879203/960.416274134833/330/1607//
        '[RKx7ZNBM4yWpuT1iuke9x]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" go1diMSPpEjFIL9sVZsHL/object
          visualData: 800.3101986621651/1861.0238075560294/280/1603/var(--node-color-4)/var(--node-color-4)
        '[TgPjb_Cw9_ztke_RR4vtP]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" NJtP7eOexHiWBNugXMW--/audience
          visualData: 1254.1928584965376/1757.3985819095835/280/1603//
        '[_ajQpifCCleYMtv8kINWm]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Graph Output" 599b46FppI55XgLCd-ghS/value
          visualData: 1656.1196810871727/1199.2709483883548/230/1606//
        '[aN-bOrHxMtE6c1hQShm_e]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" 4sYWpszM8EGxkYKCnqss3/object
          visualData: -517.1148929062877/1661.116020029473/280/1603//
        '[cmNV1GCVjeDPCwM5Lo1h1]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" RKx7ZNBM4yWpuT1iuke9x/url
          visualData: 238.82056593730238/1787.8335246911158/330/1603//
        '[go1diMSPpEjFIL9sVZsHL]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" _ajQpifCCleYMtv8kINWm/prompt
          visualData: 1267.8540951723626/1969.170643431052/280/1603//
        '[lpAQJIZpvflIZydtezDxn]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" thGY9XsdEC-5sdW2Em0zP/url
          visualData: 253.09697409678427/1437.2770012880749/330/1603//
        '[thGY9XsdEC-5sdW2Em0zP]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" TgPjb_Cw9_ztke_RR4vtP/object
          visualData: 802.8179270641723/1408.0109978261078/280/1603/var(--node-color-4)/var(--node-color-4)
    tfM8ynLGCK90qQnqxKhO8:
      metadata:
        description: Apply best practices and create Q&A statements
        id: tfM8ynLGCK90qQnqxKhO8
        name: Create - Social - Create
      nodes:
        '[-xQy3Dg9fVW_WwW2ERwMb]:text "Social post creation"':
          data:
            text: >-
              ACTION FOR THIS TASK


              Your role is {{role}}.


              You will be passed a description of PR task in the prompt.


              Your job is to write three short outputs for the input that would be suitable for use on social media.


              The text should be in the format of a "tweet".


              The tweet would be posted on company social channels.


              The total length of each item should be less than 600 characters in total.


              Use natural line breaks in the post like \n.


              Escape any quotes in the post text.


              Output only a JSON object in the following format:


              {
                  "posts": [
                      {
                          "post1": "Post detail 1...",
                          "post2": "Post detail 2...",
                          "post3": "Post detail 3..."
                      }
                  ]
              }


              Do not include any loose items, markdown or other commentary.
          outgoingConnections:
            - output->"Chat" XvlqAdOY0r4cVY0QAHWfG/systemPrompt
          visualData: 122.71096151513319/1.2992404669903848/330/1633/var(--node-color-2)/var(--node-color-2)
        '[8V6oZk83Cu1cgAHNFH-ew]:graphInput "Graph Input"':
          data:
            dataType: string
            id: prompt
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" rTe_UZWjzj7ta4JxVHYLz/input
          visualData: -1900.3008689044518/769.9304482138486/330/1631/var(--node-color-3)/var(--node-color-3)
        '[DkhvpWmWXJeYEA_ncU8Mq]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
              - $.role
            text: ""
          outgoingConnections:
            - match_0->"Text" hYVjz2htFiychquoDVfd2/opportunity
            - match_1->"Text" atWfCs8LmduGrNDF4Q2nu/input
            - match_1->"Text" hYVjz2htFiychquoDVfd2/scenario
            - match_2->"Social post creation" -xQy3Dg9fVW_WwW2ERwMb/role
          visualData: -1088.6372329701594/1135.0737595007686/280/1630//
        '[RYlxuyZDcgnw5aH-eeLkN]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" XvlqAdOY0r4cVY0QAHWfG/prompt
          visualData: 370.0141430885494/930.0613565803375/280/1637//
        '[XvlqAdOY0r4cVY0QAHWfG]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Text" hYVjz2htFiychquoDVfd2/detail
          visualData: 771.862026708221/143.61529321689667/230/1508//
        '[atWfCs8LmduGrNDF4Q2nu]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" y2LQ8bDkpiOO54yJJsxND/url
          visualData: -523.3169973089152/1277.4599059227962/330/1635//
        '[hYVjz2htFiychquoDVfd2]:text "Text"':
          data:
            body: ""
            text: |-
              {
                  "message": {{detail}},
                  "entity": "{{opportunity}}",
                  "sub-entity": "{{scenario}}"
              }
          outgoingConnections:
            - output->"Graph Output" tbrC1C4KiRWvXzjOs9mpj/value
            - output->"Http - Submit socials" pejEXiGfmosneojtlBVYw/req_body
          visualData: 1324.5820842811145/238.17385486970645/330/1528//
        '[k5saiyQ1CNbN3fximODxB]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                  "entity": "lmfu2zzm92t31sfw047ifs7g",
                  "sub-entity": "r3k9sdx12uue7dr7le5wg8qv",
                  "role": "You are a consumer PR strategist focused on driving awareness, engagement, and brand love for products and experiences in everyday culture. Your role is to create campaign ideas and messaging that resonate with specific audience segments—amplifying stories through earned media, influencer partnerships, stunts, social moments, and brand activations. You translate marketing goals into culturally relevant narratives, identifying the creative hooks, emotional levers, and formats that make campaigns talkable and shareable. Whether launching a new product, reigniting relevance, or responding to trends, your job is to ensure the brand is seen, heard, and positively talked about in the right places, by the right people."
              }
          visualData: -1906.3122291988273/1083.2889567354744/330/1632//
        '[pejEXiGfmosneojtlBVYw]:httpCall "Http - Submit socials"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-socials
            useBodyInput: true
            useHeadersInput: false
          visualData: 1970.3782104587824/-163.34488486624403/280/1622/var(--node-color-4)/var(--node-color-4)
        '[rTe_UZWjzj7ta4JxVHYLz]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" DkhvpWmWXJeYEA_ncU8Mq/object
          visualData: -1452.1742350575068/1011.2499700635408/280/1629//
        '[tbrC1C4KiRWvXzjOs9mpj]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1982.476294768714/517.3503142175965/330/1547/var(--node-color-3)/var(--node-color-3)
        '[y2LQ8bDkpiOO54yJJsxND]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" RYlxuyZDcgnw5aH-eeLkN/object
          visualData: -38.39720804272676/1138.5277908698276/280/1636/var(--node-color-4)/var(--node-color-4)
    xPttJD3BZOWoLRi0zmVYb:
      metadata:
        description: ""
        id: xPttJD3BZOWoLRi0zmVYb
        name: Universal - Send entity for logging
      nodes:
        '[84IxOTxJtYLE7-fgOXUjA]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: POST
            url: https://crisis-comms.vercel.app/api/submit-conversation
            useBodyInput: true
            useHeadersInput: false
          visualData: 2527.44349137452/444.26938475045466/280/2062/var(--node-color-4)/var(--node-color-4)
        '[8KLNeX5GledWD96aUpmgF]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: ""
            method: GET
            url: ""
            useHeadersInput: true
            useUrlInput: true
          outgoingConnections:
            - res_body->"Text" _EZfuaA4jaifMmgm1n1Nm/input
          visualData: 1410.269879915463/1131.645564072039/280/13/var(--node-color-4)/var(--node-color-4)
        '[9WHIs09kfEbMTUw1cpg4I]:text "CRISIS ID FOR SKITTLES"':
          data:
            body: ""
            text: nvsvrsajrztv8ih5yjpq7uj5
          outgoingConnections:
            - output->"Text" YWXJ3tR9E4TyogRVvruye/entity
          visualData: -1506.0490087407354/254.81324929201486/330/1797//
        '[A8ZxVbPSPzDfpTIyjScfa]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              output:
              class CrisisDagTriggerAPIResponse(BaseModel):
                  "run_id": Optional[str] = None # use this to get run state
                  "execution_date": Optional[str] = None
                  "user_id": Optional[str] = None

                  "client_name": "Nestlé"
                  "crisis_name": Optional[str] = None
                  "crisis_description": Optional[str] = None
                  "crisis_date": Optional[str] = None
                  "crisis_id": Optional[str] = None 
          visualData: 2381.844820759401/849.8058180430716/330/2061//
        '[IMXj21FrA28pHB1H_53AQ]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.title
              - $.data.description
              - $.data.region.region
              - $.data.company.title
              - $.data.date
              - $.data.severity
              - $.data.brand
              - $.data.documentId
          outgoingConnections:
            - match_0->"Text" x4Gm8c3uvKyOcTiRWJui9/title
            - match_1->"Escape chars" pzmXbpF1_l5GioQG8UKj3/input1
            - match_3->"Text" x4Gm8c3uvKyOcTiRWJui9/company
            - match_4->"Text" x4Gm8c3uvKyOcTiRWJui9/date
            - match_7->"Text" x4Gm8c3uvKyOcTiRWJui9/entity
          visualData: -64.59558162891369/477.09266985735803/280/1795//
        '[J1n_2dIXplgtNb_Ay9HuM]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: ""
            method: POST
            url: ""
            useHeadersInput: true
            useUrlInput: true
          outgoingConnections:
            - res_body->"Text" ydDOFchh9bRtxJq3deaHi/input
          visualData: 1421.8064996725761/388.084383998229/280/17/var(--node-color-4)/var(--node-color-4)
        '[MuIXDYDqu4sCJloLasIlx]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {


              class CrisisStateAPIResponse(BaseModel):
                  crisis_id": "{{entity}}
                  "client_name:": "Nestlé",
                  "crisis_name": "Test crisis name"
                  "crisis_description:" "Test crisis description"
                  "crisis_date:" str
                  "media_monitoring_runs:" List[MediaMonitoringStateAPIResponse] << This will show me the URLs for 1st and 3rd party


              THESE ARE ALL IN SAME MODEL NESTED xxxxx

              class MediaMonitoringStateAPIResponse(BaseModel):
                  media_monitoring_id: str
                  state: Optional[str] = None
                  updated_at: Optional[str] = None
                  project_name: Optional[str] = None
                  target_entity: Optional[str] = None
                  project_description: Optional[str] = None
                  output_presigned_url: Optional[str] = None << this is the JSON OUTPUT xxxxx
                  recall this with the ids from output above

              }
          visualData: 1799.4010403533625/1256.8531641761072/330/1785//
        '[NZW9_pEob7ey_cnPbGMai]:httpCall "HTTP - Get crises"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useHeadersInput: false
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" IMXj21FrA28pHB1H_53AQ/object
          visualData: -432.36259257053314/375.49682327619064/280/1795/var(--node-color-4)/var(--node-color-4)
        '[UyvjNNSgyLzsU2DwWadl7]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://api-staging.webershandwick.ai/trigger_crisis_dag
          outgoingConnections:
            - output->"Http Call" J1n_2dIXplgtNb_Ay9HuM/url
          visualData: 926.8364492776369/306.37835689245264/330/1798//
        '[YWXJ3tR9E4TyogRVvruye]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate=company&populate=region
          outgoingConnections:
            - output->"HTTP - Get crises" NZW9_pEob7ey_cnPbGMai/url
          visualData: -1001.6743937547353/373.69502324190717/330/1795//
        '[_EZfuaA4jaifMmgm1n1Nm]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 1789.0939428381143/1087.2845977275895/330/null//
        '[hdrJonqNO89lvtO-Nu6nm]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          visualData: -1501.789347345021/457.8938591496826/330/1796/var(--node-color-3)/var(--node-color-3)
        '[mjqwupVwAnvSp1YrET4hg]:text "CRISIS ID FOR SKITTLES"':
          data:
            body: ""
            text: nvsvrsajrztv8ih5yjpq7uj5
          visualData: 527.137525939429/1073.0494167618392/330/1786//
        '[nCFF0-rquxEa4MaLU7sTu]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://api-staging.webershandwick.ai/crisis_run/{run_id}/state
          outgoingConnections:
            - output->"Http Call" 8KLNeX5GledWD96aUpmgF/url
          visualData: 932.655367558868/1010.7760511102614/330/1790//
        '[pzmXbpF1_l5GioQG8UKj3]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const cleanedText = inputText
                .replace(/\\/g, '\\\\')         // escape backslashes
                .replace(/"/g, '\\"')           // escape double quotes
                .replace(/\r?\n/g, ' ')         // replace newlines with a space
                .replace(/[\u0000-\u001F\u007F-\u009F]/g, '') // strip control chars
                .replace(/[^\x20-\x7E]/g, '');  // remove non-ASCII characters

              return {
                output1: {
                  type: 'string',
                  value: cleanedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" x4Gm8c3uvKyOcTiRWJui9/description
          visualData: 413.71399812194164/708.6102604993613/230/2056/var(--node-color-2)/var(--node-color-2)
        '[x4Gm8c3uvKyOcTiRWJui9]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |-
              {
                  "user_id": "radius@webershandwick.com",
                  "user_first_name": "Radius",
                  "user_last_name": "Tool",
                  "client_name": "{{company}}",
                  "crisis_name": "{{title}}",
                  "crisis_description": "{{description}}",
                  "crisis_date": "{{date}}",
                  "crisis_id": "{{entity}}"
              }
          outgoingConnections:
            - output->"Http Call" J1n_2dIXplgtNb_Ay9HuM/headers
          visualData: 903.7878412899831/555.5277763408847/330/1792//
        '[ydDOFchh9bRtxJq3deaHi]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 1956.536715306364/566.9842661070513/330/2063//
    xn3BtFDybu36RzvAFfDkH:
      metadata:
        description: ""
        id: xn3BtFDybu36RzvAFfDkH
        name: Create - Master
      nodes:
        '[13tPl5gnbCZBkXQpxOfaX]:destructure "Destructure"':
          data:
            paths:
              - $.data.title
              - $.data.description
              - $.data.activationbudget
              - $.data.audiences
              - $.data.objectives
              - $.data.region
            text: ""
          outgoingConnections:
            - match_0->"Text" _dwOEBY9Fr1JkBZLC2jja/title
            - match_1->"Text" _dwOEBY9Fr1JkBZLC2jja/description
            - match_2->"Text" p9xDr18o0132Dk-8admW8/budget
            - match_3->"Text" p9xDr18o0132Dk-8admW8/audiences
            - match_4->"Text" p9xDr18o0132Dk-8admW8/objectives
            - match_5->"Text" p9xDr18o0132Dk-8admW8/region
          visualData: 317.7566675597393/970.9869511916725/280/1749//
        '[3HpxUqsRrSf2lA10Zwfcm]:text "Summer Campaign"':
          data:
            normalizeLineEndings: true
            text: lmfu2zzm92t31sfw047ifs7g
          outgoingConnections:
            - output->"Text" cfuHYfdAGorC5ycWjcNZM/entity
            - output->"Text" kwgdpRGTmmqRB7AeZZW63/entity
            - output->"Text" p9xDr18o0132Dk-8admW8/entity
          visualData: -968.5234068993825/1390.4174886172955/330/1695//
        '[DzFZKmvNx3S8ym4Oajz3_]:httpCall "Http - Get role & tones"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tones?populate=*
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" nnJMyKWZMotLh5M3xMi9R/object
          visualData: -588.401945159068/184.79576525784358/280/1753/var(--node-color-4)/var(--node-color-4)
        '[Eh7I69zVYkDq8Wql2YKAA]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" VRr-YVV_4aFKPANNkcrCw/input
          visualData: 1252.4105767328147/574.862829823199/230/1523//
        '[F4IinJRV4316g6Q__2fu0]:subGraph "Subgraph"':
          data:
            graphId: omDWTL29bPavJp3tqmx4V
            useAsGraphPartialOutput: false
            useErrorOutput: false
          visualData: 2090.81311867681/983.1687977688551/330/1719/var(--node-color-1)/var(--node-color-1)
        '[Jr2PCqGzJ-Hz2q9WwqMjc]:text "TEXT - Define role"':
          data:
            text: >-
              You are a crisis communications public relations (PR) professional
              working for {{Company}}.


              {{task}}


              IMPORTANT

              Your writing tone is {{tone}}.
          description: Role definition copy
          outgoingConnections:
            - output->"Text" p9xDr18o0132Dk-8admW8/role
          visualData: 252.88253426113428/307.1851086851523/330/1751/var(--node-color-3)/var(--node-color-3)
        '[VRr-YVV_4aFKPANNkcrCw]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" WmsUwRKzWHMuLoaOGo_gg/value
            - output->"Subgraph" F4IinJRV4316g6Q__2fu0/input
          visualData: 1582.1482751883414/864.5533527285173/280/1693//
        '[WmsUwRKzWHMuLoaOGo_gg]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 2019.7527872703774/540.2134700410577/330/1706/var(--node-color-3)/var(--node-color-3)
        '[_dwOEBY9Fr1JkBZLC2jja]:text "Text"':
          data:
            normalizeLineEndings: true
            text: |
              Title of campaign
              {{title}}

              High level description of what the campaign seeks to achieve
              {{description}}
          outgoingConnections:
            - output->"Chat" Eh7I69zVYkDq8Wql2YKAA/prompt
          visualData: 784.88374027114/930.6118529745636/330/1554//
        '[cfuHYfdAGorC5ycWjcNZM]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate=*
          outgoingConnections:
            - output->"HTTP - Collect entity" pEgwDlD6uWTVTvNqoN-0a/url
          visualData: -516.7475703210638/1001.1437152063309/330/1636//
        '[kg_aK7lJL_S5U1IlxwkEA]:graphInput "Graph Input"':
          data:
            dataType: string
            id: stringGraph
            useDefaultValueInput: false
          visualData: -1260.6162514618704/1118.8051749304432/330/1740/var(--node-color-3)/var(--node-color-3)
        '[kwgdpRGTmmqRB7AeZZW63]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"Http - Get role & tones" DzFZKmvNx3S8ym4Oajz3_/url
          visualData: -1053.5922792626668/274.48866365560946/330/1754//
        '[nnJMyKWZMotLh5M3xMi9R]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_0->"TEXT - Define role" Jr2PCqGzJ-Hz2q9WwqMjc/task
            - match_1->"TEXT - Define role" Jr2PCqGzJ-Hz2q9WwqMjc/tone
            - match_2->"TEXT - Define role" Jr2PCqGzJ-Hz2q9WwqMjc/Company
          visualData: -165.4602176160072/366.2845201633725/280/1752//
        '[p9xDr18o0132Dk-8admW8]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a seasoned consumer PR strategist working at a top-tier
              communications agency.


              Your role is {{role}};


              You will be provided with:
              	•	A high-level description of the opportunity the client wishes to capitalise on (in the user prompt).
              	•	A JSON object of strategic objectives in {{objectives}} — focus on the title and detail field of each objective.
              	•	A JSON object of key audience segments in {{audiences}}, each including a title, description, and age_range and set of demographic indicators in the form of interests, values, motivation and pains.
              	•	A maximum campaign budget in GBP, provided in {{budget}}.

              ⸻


              Your task:


              Develop a creative, insight-led list of potential PR campaign activations that:
              	•	Capitalise on the opportunity,
              	•	Support the client's strategic objectives, and
              	•	Are feasible within the {{region}} PR landscape and the given budget.

              All ideas must be:
              	•	Culturally relevant and tailored to the specified audience segments.
              	•	Budget-appropriate, based on realistic {{region}} PR execution costs.
              	•	Tactically diverse, using channels such as stunts, partnerships, influencer marketing, pop-ups, content creation, and earned media.

              ⸻


              For each proposed activation, include:
              	1.	title - A short, punchy campaign name or concept.
              	2.	idea_summary - 3-4 paragraphs of text describing the activation.
              	3.	target_audience - Audience segment titles (from {{audiences}}) this idea is designed for.
              	4.	estimated_budget_bracket - A realistic budget range in GBP.
              	5.	objective_alignment - An object with:
              	•	"objectives" - an array of matching objective titles.
              	•	"explanation" - 1-2 sentences explaining how the activation supports those objectives.

              Output format:


              Return your response as a valid JSON object only — no markdown, no commentary, no extra text. Use this format exactly:


              {
                "entity": "{{entity}}",
                "scenarios": [
                  {
                    "title": "Scoop of Joy",
                    "idea_summary": "Create a pop-up ice cream shop in a high-footfall area where visitors can create their own unique flavors...",
                    "target_audience": ["Gen-Z", "Gen-X"],
                    "estimated_budget_bracket": "£30,000 - £50,000",
                    "objective_alignment": {
                      "objectives": ["Drive sales", "Grow fame"],
                      "explanation": "This activation drives sales through direct product engagement..."
                    }
                  },
                  {
                    "title": "Ice Cream Challenge",
                    "idea_summary": "Launch a viral challenge on TikTok...",
                    "target_audience": ["Gen-Z"],
                    "estimated_budget_bracket": "£15,000 - £25,000",
                    "objective_alignment": {
                      "objectives": ["Drive sales", "Grow fame"],
                      "explanation": "This campaign encourages user-generated content..."
                    }
                  }
                  // More ideas as needed...
                ]
              }


              The "entity" item must be only the numeric documentId provided in the input {{entity}} field.
          outgoingConnections:
            - output->"Chat" Eh7I69zVYkDq8Wql2YKAA/systemPrompt
          visualData: 740.084417361164/213.82268641494267/330/1537//
        '[pEgwDlD6uWTVTvNqoN-0a]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 13tPl5gnbCZBkXQpxOfaX/object
          visualData: -44.91664728486059/1007.7576465524064/280/1720/var(--node-color-4)/var(--node-color-4)
    ywZp1_oH_7T_1ARvht2gZ:
      metadata:
        description: ""
        id: ywZp1_oH_7T_1ARvht2gZ
        name: Create - Culturescore - Master
      nodes:
        '[--RbyIW4y-ftm0c4uNJWf]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" tu1rr3rRVGd5MTu1edYdF/input
            - data->"Subgraph" DsJd93FOKY3Xze1F-AtSo/input
            - data->"Subgraph" PFWwR9qU8luhy5ejMhQWw/input
            - data->"Subgraph" gP3X3_ZN6lZmXkSmEhF4t/input
            - data->"Subgraph" xmfdQF6YrsxGT6aPmt6gh/input
            - data->"Subgraph" z9DUHvENMx7M2RU1N1JyR/input
          visualData: 166.31926654579487/367.19111943793865/330/1660/var(--node-color-3)/var(--node-color-3)
        '[0wSI54BNq94ES0VYKrk27]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              You are a data processor reviewing a consumer pr campaign impact
              rating represented as a JSON object.


              The object includes the following 5 salience dimensions:

              	•	culturescore_culturalsalience - a JSON object with a single numeric items for score and a rationale field.
              	•	culturescore_emotionalintensity - a JSON object with a single numeric items for score and a rationale field.
              	•	culturescore_scale - a JSON object with a single numeric items for score and a rationale field.
              	•	culturescore_commercialimpact - a JSON object with a single numeric items for score and a rationale field.
              	•	culturescore_backlashavoidance - a JSON object with a single numeric items for score and a rationale field.

              Your task:


              1.	Calculate an average score and average the following five values:
              	•	culturescore_culturalsalience.score
              	•	culturescore_emotionalintensity_influence.score
              	•	culturescore_scale.score
              	•	culturescore_commercialimpact.score
              	•	culturescore_backlashavoidance.score

              3.	Apply the following weightings to each of the five metrics:


              {
                "culturescore_culturalsalience": 1,
                "culturescore_emotionalintensity_emotionalintensity": 1,
                "culturescore_scale_influence": 1,
                "culturescore_commercialimpact": 1,
                "culturescore_backlashavoidance": 1
              }


              4.	Normalize the result and return a rounded average score between 1 and 10. Round the number up or down to the nearest integer.


              5.	Based on the overall score, assign a summary severity level using this scale:
              	•	If overall_average_score < 4: "Low"
              	•	If 4 ≤ score < 7: "Medium"
              	•	If score ≥ 7: "High"

              ✅ Output Format:


              Return a JSON object with two top-level keys:
              	1.	"culturescore" - the final summary string: "High", "Medium", or "Low"
              	2.	"culturescore_logic" - an object containing:
              	•	the original input JSON
              	•	the added average_score

              The final structure must look like this:


              {
              	"data": {
              		"logic": {
              			"culturescore": "High",
              			"culturescore_logic": {
              				...original data and new average fields...
              			}
              		}
              	}
              }


              Do not include any explanations, calculations, markdown formatting, or stray characters. Return only the final valid UTF-8 JSON object.
          outgoingConnections:
            - output->"Chat" g1QXBpEWjfqfCs-mfRvbR/systemPrompt
          visualData: 2523.382007491288/-93.01834511061689/330/1594//
        '[CpkuCeMWzdgdKMkwEedgs]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 3996.6364474663173/542.0097537068584/330/1606/var(--node-color-3)/var(--node-color-3)
        '[DsJd93FOKY3Xze1F-AtSo]:subGraph "Subgraph"':
          data:
            graphId: tF54ClWl2MYfhx6TaV778
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" oMfevLEdLmgeZG-EouAQe/message4
          visualData: 1764.6176949004139/871.7925520669642/330/1480/var(--node-color-1)/var(--node-color-1)
        '[F6YZusf_QNoxsO1ETebGr]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_1->"Text" bg2ODqjAaz4amqQ-P2fZK/input
          visualData: 1056.705529600985/1325.1412190595424/280/1664//
        '[PFWwR9qU8luhy5ejMhQWw]:subGraph "Subgraph"':
          data:
            graphId: haJzmqbpZveXTdmqgMZ0D
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" oMfevLEdLmgeZG-EouAQe/message5
          visualData: 1762.9543516908345/1099.867575804444/330/1595/var(--node-color-1)/var(--node-color-1)
        '[TydHwviNyCnKo4N3MIpJH]:text "Text"':
          data:
            normalizeLineEndings: true
            text: >-
              {
                "data": {
                  "logic": {
                    "rules": [
                      { "if": "audience == 'Gen-Z'", "then": "activate campaign A" },
                      { "if": "budget < 25000", "then": "switch to low-cost mode" }
                    ],
                    "version": 1
                  }
                }
              }
          visualData: 3568.1266803357053/516.2495819245707/330/1643//
        '[WAGlFCiIfRip438mLqaCA]:text "Text"':
          data:
            normalizeLineEndings: true
            text: "{{input}}"
          visualData: 2766.1405399058153/943.2212559607518/330/1593//
        '[bg2ODqjAaz4amqQ-P2fZK]:text "Text"':
          data:
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"Http Call" yXxIX8VrGQhD3Hdl5wRuK/url
          visualData: 3546.2212365661776/1246.9856384212042/330/1644//
        '[bgueI8BUPBh_XB-OmQGxH]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Graph Output" CpkuCeMWzdgdKMkwEedgs/value
            - output->"Http Call" yXxIX8VrGQhD3Hdl5wRuK/req_body
          visualData: 3540.663579111792/983.4056779493894/280/1645//
        '[g1QXBpEWjfqfCs-mfRvbR]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 1024
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Extract JSON" bgueI8BUPBh_XB-OmQGxH/input
          visualData: 3044.094073666316/505.2652377875736/230/1590//
        '[gP3X3_ZN6lZmXkSmEhF4t]:subGraph "Subgraph"':
          data:
            graphId: 8dIVb-m7djUWLo0j9GXBb
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" oMfevLEdLmgeZG-EouAQe/message1
          visualData: 1761.3529749038437/130.73723090226798/330/1662/var(--node-color-1)/var(--node-color-1)
        '[oMfevLEdLmgeZG-EouAQe]:assemblePrompt "Assemble Prompt"':
          data:
            text: ""
          outgoingConnections:
            - prompt->"Chat" g1QXBpEWjfqfCs-mfRvbR/prompt
            - prompt->"Text" WAGlFCiIfRip438mLqaCA/input
          visualData: 2288.8301315852427/570.5602958562475/280/1464//
        '[tu1rr3rRVGd5MTu1edYdF]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" F6YZusf_QNoxsO1ETebGr/object
          visualData: 650.0914794222687/722.9772624789391/280/1661//
        '[xmfdQF6YrsxGT6aPmt6gh]:subGraph "Subgraph"':
          data:
            graphId: a1C0PHzycmkfS-hZRJ7lb
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" oMfevLEdLmgeZG-EouAQe/message3
          visualData: 1769.592008250996/652.9302407368071/330/1478/var(--node-color-1)/var(--node-color-1)
        '[yXxIX8VrGQhD3Hdl5wRuK]:httpCall "Http Call"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: PUT
            text: ""
            url: ""
            useBodyInput: true
            useHeadersInput: false
            useUrlInput: true
          visualData: 4299.010146127738/893.6664641225204/280/1610/var(--node-color-4)/var(--node-color-4)
        '[z9DUHvENMx7M2RU1N1JyR]:subGraph "Subgraph"':
          data:
            graphId: ktYNmtYq1GrJd_zgCoTcg
            useAsGraphPartialOutput: false
            useErrorOutput: false
          outgoingConnections:
            - output->"Assemble Prompt" oMfevLEdLmgeZG-EouAQe/message2
          visualData: 1761.4531630966944/380.1003652640137/330/1663/var(--node-color-1)/var(--node-color-1)
    zYlQ2Xk75J--kr6X__Awr:
      metadata:
        description: Write and individual set of QA pairs
        id: zYlQ2Xk75J--kr6X__Awr
        name: Advisory - PR- Q&A agent subgraph
      nodes:
        '[-IjNUGgP_EOUbfrIroaZD]:text "QA system prompt"':
          data:
            jsonTemplate: ""
            text: >-
              Your role is {{role}}


              ACTION FOR THIS TASK


              You will be sent a press release and you should create a set of 10 questions and answer pairs. These questions and answers are the kind of queries that the press or public might ask as result of hearing about the details of the press release.


              THE Q&A SHOULD


              Cover a wide range of potential questions, including those that might arise during a press conference, internal meeting, or customer interaction. 


              Be solution-oriented, balancing transparency with strategic framing to maintain trust and credibility. 


              Use clear, accessible language that resonate.


              Address sensitive or challenging topics tactfully to avoid escalation or misinterpretation. 


              Include culturally sensitive answers for global applicability. 


              OUTPUT INSTRUCTION


              Output the question and answer pairs as text in this string format (don't convert to JSON):

                  "qa": [
                    {
                      "question1": "Question 1",
                      "answer1": "Answer 1"
                    },
                    {
                      "question2": "Question 2",
                      "answer2": "Answer 2"
                    }
                  ]
          description: Holding statement system prompt
          outgoingConnections:
            - output->"Chat" OIvEjExXAsyhFYZZ_ZKZy/systemPrompt
          visualData: 690.1790071001392/158.81781408422745/330/204//
        '[9gX-XwuOZ8FJIB5Zkoxo8]:graphOutput "Graph Output"':
          data:
            dataType: string
            id: output
          visualData: 1579.023440510591/645.96675371681/330/207/var(--node-color-3)/var(--node-color-3)
        '[KbMK7Q1Ob8Zjbg1LJrWrR]:getGlobal "Get Global"':
          data:
            dataType: string
            id: role
            onDemand: true
            useIdInput: false
            wait: false
          outgoingConnections:
            - value->"QA system prompt" -IjNUGgP_EOUbfrIroaZD/role
          visualData: 318.80618502765265/321.90884957146795/230/206//
        '[OIvEjExXAsyhFYZZ_ZKZy]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          description: Generate Q&A Pairs
          outgoingConnections:
            - response->"Graph Output" 9gX-XwuOZ8FJIB5Zkoxo8/value
          visualData: 1145.2857516735453/558.6550098918765/230/180//
        '[vOvnA4hJyoMgKjkbFacnz]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Chat" OIvEjExXAsyhFYZZ_ZKZy/prompt
          visualData: 628.2555846757787/685.4363535235127/330/186/var(--node-color-3)/var(--node-color-3)
    zaszbOz1wpYtXytDJCEhg:
      metadata:
        description: Individual press release rewrite
        id: zaszbOz1wpYtXytDJCEhg
        name: Universal - PR write & rewrite agent
      nodes:
        '[-8Zq50BoP2ucC1rRHAlPb]:httpCall "HTTP - Collect entity"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 1fKjTiUEwlLFQTiYhduaQ/object
          visualData: -708.0671800295399/1608/280/1959/var(--node-color-4)/var(--node-color-4)
        '[1fKjTiUEwlLFQTiYhduaQ]:destructure "Destructure"':
          data:
            paths:
              - $.data.audiences
          outgoingConnections:
            - match_0->"Text" DCkLMZMAAdCmwqT3QIG4j/audience
          visualData: -256.6922485971745/1957.3875840834758/280/1959//
        '[4TdWlTYi8Jp9hE3qHPMSG]:destructure "Destructure"':
          data:
            paths:
              - $.data.detail
          outgoingConnections:
            - match_0->"Chat" pzjgWZzv5TcFAF9oJSyhH/prompt
          visualData: -243.03101192134955/2169.159645604944/280/1959//
        '[9d4nMU8fAT1U7QvxHO_4c]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/{{input}}
          outgoingConnections:
            - output->"HTTP - Collect scenario" GLwgUF_5ttjbd8t6aZXUL/url
          visualData: -1272.06454115641/1987.8225268650078/330/1959//
        '[DCkLMZMAAdCmwqT3QIG4j]:text "Text"':
          data:
            text: >-
              Your role is {{role}}


              You work for {{company}}


              The press release should address the audiences supplied in this JSON object {{audience}}


              ACTION FOR THIS TASK

              It is your job to write longform output for a press release that would go out to the media.


              The press release should be about the topic provided in the user prompt.


              Start with today's {{date}} (in the format Tuesday 17th June 2025) followed by a line break. Do not prefix it with Date: or similar. Just have the date only.


              The full response should be a minimum of 5 paragraphs.


              The press release should be written in this {{tone}}.


              Use natural line breaks in the prose like \n.


              The response should be signed off by the company PR spokesperson called {{spokesman}}. Ensure there is a line break before this.


              The press release should include the contact details of {{email}} and {{phone}} at the bottom.


              Ensure there is a double line break before this. Ensure there is no excess spacing at the bottom the file.


              INSTRUCTIONS ON WHAT TO AVOID

              - Ensure all information provided is factually accurate and based on credible sources.

              - Avoid making speculative or unverified claims.

              - Respect privacy and confidentiality in all recommendations.


              Output a body of text only.
          outgoingConnections:
            - output->"Chat" pzjgWZzv5TcFAF9oJSyhH/systemPrompt
          visualData: -773/473/330/1949/var(--node-color-5)/var(--node-color-5)
        '[GLwgUF_5ttjbd8t6aZXUL]:httpCall "HTTP - Collect scenario"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            text: ""
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" 4TdWlTYi8Jp9hE3qHPMSG/object
          visualData: -710.5749084315471/2061.0128097299216/280/1959/var(--node-color-4)/var(--node-color-4)
        '[JBKG2Tm8jrQoSvINlrLrQ]:destructure "Destructure"':
          data:
            paths:
              - $.detail
              - $.history
          outgoingConnections:
            - match_0->"Escape chars" Na6k5BSbaIVorGvJio7-n/input1
            - match_1->"Stringify history" gLb1AwLMIFxatfEr8EMdu/input1
          visualData: 1991.4649252843178/982.2952903773177/280/2046//
        '[JjHcH6HTBgqzOs5UbyLVt]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" Nw-rx49Hjlyt8u9_eaC1V/object
          visualData: -2028/1861.1050222033653/280/1959//
        '[N36ylt-91l9jELeE62AvB]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises?filters[documentId][$eq]={{entity}}&populate=comms_lead
          outgoingConnections:
            - output->"Http - Comms team" QNnid_9HWwtDmqymSJZvl/url
          visualData: -2294.984332861937/1497.8049143184087/330/2044//
        '[Na6k5BSbaIVorGvJio7-n]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" gh47sLZATqrnDj0k_BNTQ/detail
          visualData: 2467.8185254464215/4.542612848173434/230/2034/var(--node-color-2)/var(--node-color-2)
        '[Nw-rx49Hjlyt8u9_eaC1V]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.scenario
          outgoingConnections:
            - match_0->"Text" uG4OUp24y0Kl2ERFj47_s/input
            - match_1->"Text" 9d4nMU8fAT1U7QvxHO_4c/input
            - match_1->"Text" gh47sLZATqrnDj0k_BNTQ/scenario
          visualData: -1622.722463539058/1821.7789000669939/280/1959//
        '[QCJYyWOYp2Hq7T66p4GXY]:graphOutput "Graph Output"':
          data:
            dataType: object
            id: output
          visualData: 3371.115062316022/553.7961925111833/330/2029/var(--node-color-3)/var(--node-color-3)
        '[QNnid_9HWwtDmqymSJZvl]:httpCall "Http - Comms team"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: ""
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" f9OeSWeCRflnuY_kJ3MYH/object
          visualData: -1762/1287/280/1952/var(--node-color-4)/var(--node-color-4)
        '[T5FxTZT8Z4VgbPUfFIPrh]:code "Escape chars"':
          data:
            code: |-
              const inputText = inputs.input1.value;

              // Escape double quotes (") as \" and real line breaks as \n
              const escapedText = inputText
                .replace(/\\/g, '\\\\')         // escape backslashes first
                .replace(/"/g, '\\"')           // escape double quotes
                .replace(/\r?\n/g, '\\n');      // escape newlines

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" yupIqKdeUBOs_eDusPQHK/input
          visualData: 456.14192062781547/422.97966171611455/230/974/var(--node-color-2)/var(--node-color-2)
        '[V7F00X2gW7AkpKKkVfjOe]:graphInput "Graph Input"':
          data:
            dataType: string
            id: input
            useDefaultValueInput: false
          outgoingConnections:
            - data->"Extract JSON" JjHcH6HTBgqzOs5UbyLVt/input
            - data->"Extract JSON" tgGyQrEVOlCkU5sM7ikYN/input
          visualData: -2581.1274405675367/475.50177755273836/330/1965/var(--node-color-3)/var(--node-color-3)
        '[aUiVVQQHQZHsiedIgU-ZG]:code "Escape chars"':
          data:
            code: >-
              const inputText = inputs.input1.value;


              const escapedText = inputText
                .replace(/\r?\n/g, '\\n')   // Replace real line breaks with literal "\n"
                .replace(/\s+/g, ' ')       // Replace multiple spaces/tabs/newlines with single space
                .replace(/"/g, '\\"')       // Escape double quotes
                .trim();                    // Trim leading/trailing whitespace

              return {
                output1: {
                  type: 'string',
                  value: escapedText
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" gh47sLZATqrnDj0k_BNTQ/original
          visualData: 2483.701982390131/462.64878818344874/230/2033/var(--node-color-2)/var(--node-color-2)
        '[d-48R5Wdi2cfys5IbMleZ]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" JBKG2Tm8jrQoSvINlrLrQ/object
          visualData: 1704.0676846124609/546.5708364971639/280/1999//
        '[eC5bJfpW0c4PZQy5AY4hm]:destructure "Destructure"':
          data:
            paths:
              - $.entity
              - $.role
          outgoingConnections:
            - match_0->"Text" N36ylt-91l9jELeE62AvB/entity
            - match_0->"Text" pv-2xdZoPscSIpgPzphJg/entity
            - match_1->"Text" DCkLMZMAAdCmwqT3QIG4j/role
          visualData: -1399.2947433524105/583.0356695776802/280/1961//
        '[f9OeSWeCRflnuY_kJ3MYH]:destructure "Destructure"':
          data:
            body: ""
            paths:
              - $.data[0].comms_lead.name
              - $.data[0].comms_lead.email
              - $.data[0].comms_lead.phone
          outgoingConnections:
            - match_0->"Text" DCkLMZMAAdCmwqT3QIG4j/spokesman
            - match_1->"Text" DCkLMZMAAdCmwqT3QIG4j/email
            - match_2->"Text" DCkLMZMAAdCmwqT3QIG4j/phone
          visualData: -1305.1585373621033/1273.6533430633592/280/1953//
        '[fguSJ27faV2eOOHKzWom3]:httpCall "Http - Get role & tones"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
              }
            method: GET
            url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tones?populate=*
            useUrlInput: true
          outgoingConnections:
            - json->"Destructure" xNy1OAaZi7vHnT3rVvBNk/object
          visualData: -2570.627219060988/663.7041561729782/280/2049/var(--node-color-4)/var(--node-color-4)
        '[gLb1AwLMIFxatfEr8EMdu]:code "Stringify history"':
          data:
            code: >-
              // This is a code node, you can write any JS here.

              // Inputs are accessible via an object `inputs`.

              // You want to stringify an array of objects (match_1.value).


              const rawArray = inputs.input1.value;  // This should be an array of objects already.


              const historyString = JSON.stringify(rawArray);


              return {
                output1: {
                  type: 'string',
                  value: historyString
                }
              };
            inputNames: input1
            outputNames: output1
          outgoingConnections:
            - output1->"Text" gh47sLZATqrnDj0k_BNTQ/history
          visualData: 2490.8366856939106/970.1377615588162/230/2045/var(--node-color-2)/var(--node-color-2)
        '[gh47sLZATqrnDj0k_BNTQ]:text "Text"':
          data:
            text: |-
              {
                  "original": "{{original}}",
                  "detail": "{{detail}}",
                  "history": {{history}},
                  "scenario": "{{scenario}}"
              }
          outgoingConnections:
            - output->"Graph Output" QCJYyWOYp2Hq7T66p4GXY/value
          visualData: 2962.1028422179384/532.8116716163622/330/2030//
        '[lGJKU86LObG8xyTTW8OIz]:httpCall "HTTP - Rewrite endpoint"':
          data:
            body: ""
            errorOnNon200: true
            headers: >-
              {
                "Content-Type": "application/json",
                "Authorization": "Bearer xktxuiBbfwJ1t8X74yVzzlPhRvEkwcIHJY7Ly8lIKbcgRv359yShXd8rOTczQtZE"
              }
            method: POST
            text: ""
            url: https://pinecone-rewrite.vercel.app/api/rewrite
            useBodyInput: true
          outgoingConnections:
            - res_body->"Extract JSON" d-48R5Wdi2cfys5IbMleZ/input
          visualData: 1258.6831222377018/497.5937335663832/280/971/var(--node-color-4)/var(--node-color-4)
        '[pv-2xdZoPscSIpgPzphJg]:text "Text"':
          data:
            normalizeLineEndings: true
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{entity}}?populate[tone][populate]=*
          outgoingConnections:
            - output->"Http - Get role & tones" fguSJ27faV2eOOHKzWom3/url
          visualData: -2893.223055741814/1265.1273074185988/330/2049//
        '[pzjgWZzv5TcFAF9oJSyhH]:chat "Chat"':
          data:
            additionalParameters: []
            cache: false
            enableFunctionUse: false
            headers: []
            maxTokens: 4096
            modalitiesIncludeAudio: false
            modalitiesIncludeText: false
            model: gpt-4o-mini
            outputUsage: false
            parallelFunctionCalling: true
            reasoningEffort: ""
            stop: ""
            temperature: 0.5
            top_p: 1
            useAdditionalParametersInput: false
            useAsGraphPartialOutput: true
            useFrequencyPenaltyInput: false
            useMaxTokensInput: false
            useModelInput: false
            usePredictedOutput: false
            usePresencePenaltyInput: false
            useReasoningEffortInput: false
            useServerTokenCalculation: true
            useStop: false
            useStopInput: false
            useTemperatureInput: false
            useTopP: false
            useTopPInput: false
            useUseTopPInput: false
            useUserInput: false
          outgoingConnections:
            - response->"Escape chars" T5FxTZT8Z4VgbPUfFIPrh/input1
            - response->"Escape chars" aUiVVQQHQZHsiedIgU-ZG/input1
          visualData: -297.8554187390494/958.6812985136298/230/1964//
        '[tJJ_5l16bDO_hI6xE4j_s]:code "Code - Todays date"':
          data:
            allowConsole: false
            allowFetch: false
            allowProcess: false
            allowRequire: false
            allowRivet: false
            code: >
              // This is a code node, you can write and JS in here and it will
              be executed.

              // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

              // Return an object with named outputs that match the output names specified in the node's config.

              // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }

              return {
                output1: {
                  type: 'string',
                  value: new Date().toISOString()
                }
              };
            inputNames: []
            outputNames: output1
          outgoingConnections:
            - output1->"Text" DCkLMZMAAdCmwqT3QIG4j/date
          visualData: -1187.1632517732355/217.8528951745352/230/1963/var(--node-color-2)/var(--node-color-2)
        '[tgGyQrEVOlCkU5sM7ikYN]:extractJson "Extract JSON"':
          outgoingConnections:
            - output->"Destructure" eC5bJfpW0c4PZQy5AY4hm/object
          visualData: -1917.5263765320417/510.858569628985/280/null//
        '[uG4OUp24y0Kl2ERFj47_s]:text "Text"':
          data:
            body: ""
            headers: ""
            text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}?populate=audiences
          outgoingConnections:
            - output->"HTTP - Collect entity" -8Zq50BoP2ucC1rRHAlPb/url
          visualData: -1257.7881329969282/1637.266003461967/330/1959//
        '[xNy1OAaZi7vHnT3rVvBNk]:destructure "Destructure"':
          data:
            body: ""
            headers: ""
            paths:
              - $.data.tone.tov
              - $.data.tone.task
              - $.data.tone.company.title
            text: ""
          outgoingConnections:
            - match_0->"Text" DCkLMZMAAdCmwqT3QIG4j/tone
            - match_2->"Text" DCkLMZMAAdCmwqT3QIG4j/company
          visualData: -2156.885136512945/857.8424229466564/280/2049//
        '[yupIqKdeUBOs_eDusPQHK]:text "Text"':
          data:
            body: ""
            text: |-
              {
                "text": "{{input}}"
              }
          outgoingConnections:
            - output->"HTTP - Rewrite endpoint" lGJKU86LObG8xyTTW8OIz/req_body
          visualData: 799.2358929561277/517.0540117410894/330/2047//
  metadata:
    description: Main press office flow
    id: rsPSGIUBe90RiHneohxrL
    title: Crisis Comms Graph
  plugins:
    - id: openai
      name: OpenAI
      type: built-in
    - id: pinecone
      name: Pinecone
      type: built-in
    - id: anthropic
      name: Anthropic
      type: built-in
  references: []
