version: 4
data:
  metadata:
    description: ""
    id: cGJILKi8TD1YSzAKUAzKV
    name: Master graph
  nodes:
    '[0mouFF980bt242hGgYlXk]:setGlobal "Set Global"':
      data:
        dataType: string
        id: documentId
        useIdInput: false
      visualData: -650.8080025739744/1022.0258718277165/230/768//
    '[1d_I3CvsuxquLLL25ctDS]:destructure "Destructure"':
      data:
        paths:
          - $.data[0].detail
      outgoingConnections:
        - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Tone
        - match_0->"Text" lTDwHyIvD8GtM-vUQWnZJ/Tone
      visualData: 788.9012376674186/-912.817285325704/280/775//
    '[72AXK4CYiiIN6rUy5bTNW]:chat "Chat"':
      data:
        additionalParameters: []
        cache: false
        enableFunctionUse: false
        headers: []
        maxTokens: 1024
        modalitiesIncludeAudio: false
        modalitiesIncludeText: false
        model: gpt-4o-mini
        outputUsage: false
        parallelFunctionCalling: true
        reasoningEffort: medium
        stop: ""
        temperature: 0.5
        top_p: 1
        useAdditionalParametersInput: false
        useAsGraphPartialOutput: true
        useFrequencyPenaltyInput: false
        useMaxTokensInput: false
        useModelInput: false
        usePredictedOutput: false
        usePresencePenaltyInput: false
        useReasoningEffortInput: false
        useServerTokenCalculation: true
        useStop: false
        useStopInput: false
        useTemperatureInput: false
        useTopP: false
        useTopPInput: false
        useUseTopPInput: false
        useUserInput: false
      description: High risk scenario
      outgoingConnections:
        - response->"Extract JSON" T3fMMBNOpcI3_YO2G_dq0/input
      visualData: 696.4914529831661/551.4592519841684/230/244//
    '[7eyt6KkrPUqx01ZWsuWGh]:destructure "Destructure"':
      data:
        body: ""
        headers: ""
        paths:
          - $.data[1].title
          - $.data[1].description
          - $.data[1].location
          - $.data[1].company
          - $.data[1].date
          - $.data[1].severity
          - $.data[1].brand
          - $.data[1].documentId
      outgoingConnections:
        - match_0->"Text" CocxXqVO7vwIgKSISUEL9/Crisis
        - match_1->"Text" CocxXqVO7vwIgKSISUEL9/Description
        - match_2->"Text" CocxXqVO7vwIgKSISUEL9/Location
        - match_3->"Text" CocxXqVO7vwIgKSISUEL9/Company
        - match_3->"Text" N9YOhpmU3aaCsH0rF8pKv/Company
        - match_4->"Text" CocxXqVO7vwIgKSISUEL9/Date
        - match_6->"Text" CocxXqVO7vwIgKSISUEL9/Product
        - match_7->"Set Global" 0mouFF980bt242hGgYlXk/value
        - match_7->"Text" ZEJe86ipFxX2Pgn0SpYkX/documentId
        - match_7->"Text" lTDwHyIvD8GtM-vUQWnZJ/documentId
        - match_7->"Text" o747HrcX1XEo2Bl_seAFB/input
      visualData: -1112.456167558564/660.9274817907149/280/425//
    '[7qF2t1Yi79MSZu8rI-uqx]:text "Text"':
      data:
        text: >-
          Your role is {{role}}


          You will be given a JSON object with a number of data points including "date" and "description". 


          It is your job to predict possible risk scenarios based on the crisis defined in the prompt.


          Each time you are given a prompt you should generate 3 short scenarios to demonstrate a possible outcome of the crisis described in the prompt.


          You should write 3 possible outcomes: A high risk scenario, a medium risk scenario and a low risk scenario.


          In each case be sure to reference the issue, the location and the date it occured.


          Do not label each block text with the scenario type, just include the text relating to the possible outcome.


          Output the content as a JSON object in the following format:


          {
              "high": "High risk scenario content"
              "medium": "Medium risk scenario content"
              "low": "Low risk scenario content"
          }
      description: Scenario generation system prompt
      outgoingConnections:
        - output->"Chat" 72AXK4CYiiIN6rUy5bTNW/systemPrompt
      visualData: 311.8969529730908/171.95211745714766/330/651//
    '[8eGhuqG4kOM3xr2nwKYyt]:destructure "Destructure"':
      data:
        paths:
          - $.high
          - $.medium
          - $.low
      outgoingConnections:
        - match_0->"Text" tmcvLEtdnIE8PFCGXhgrq/input
        - match_1->"Text" ANNRhETLFDLBOO2t4Lj-3/input
        - match_2->"Text" bapvQhzj8q1yxfOAprD2A/input
      visualData: 1688.568625773956/898.510306183254/280/625//
    '[9Iuwg5De8EKZKDy_VVxuL]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" JHrBit8Twr_6qXeZbrGBY/req_body
      visualData: 3496.7919347676557/-1073.037862295804/280/730//
    '[ANNRhETLFDLBOO2t4Lj-3]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Medium"
            }
          }
      outgoingConnections:
        - output->"Http Call" ohHO4UgYHNIOfR1EepUeK/req_body
      visualData: 2102.44394983333/883.924043302946/330/629//
    '[CocxXqVO7vwIgKSISUEL9]:text "Text"':
      data:
        text: >-
          There is an emerging crisis for {{Company}}. That crisis is
          {{Crisis}}, and the detailed description is {{Description}}.


          The crisis happened on {{Date}} at {{Location}}.


          It relates to the prodcut {{Product}}.
      outgoingConnections:
        - output->"Chat" DOH9j6ldq5b44D5MY0YHO/prompt
      visualData: -418.8247388018126/564.2780695714856/330/null//
    '[DOH9j6ldq5b44D5MY0YHO]:chat "Chat"':
      data:
        additionalParameters: []
        body: ""
        cache: false
        enableFunctionUse: false
        headers: []
        maxTokens: 2048
        modalitiesIncludeAudio: false
        modalitiesIncludeText: false
        model: gpt-4o-mini
        outputUsage: false
        parallelFunctionCalling: true
        reasoningEffort: medium
        stop: ""
        temperature: 0.5
        text: >-
          There is an emerging crisis for {{Company}}. That crisis is
          {{Crisis}}.


          The crisis happened on {{Date}} at {{Location}}.


          It relates to the prodcut {{Product}}.


          You should geneate an expanded description of the crisis situation described in the prompt.


          At the top add the title <h1>Crisis Description</h1>\n.


          Output a JSON object in the following format:


          {

          "Crisis Description": [
              {
              "Description1": "<h1>Crisis Description</h1>\nText of crisis"
              }
          ]

          }
        top_p: 1
        useAdditionalParametersInput: false
        useAsGraphPartialOutput: true
        useFrequencyPenaltyInput: false
        useMaxTokensInput: false
        useModelInput: false
        usePredictedOutput: false
        usePresencePenaltyInput: false
        useReasoningEffortInput: false
        useServerTokenCalculation: true
        useStop: false
        useStopInput: false
        useTemperatureInput: false
        useTopP: false
        useTopPInput: false
        useUseTopPInput: false
        useUserInput: false
      outgoingConnections:
        - response->"Chat" 72AXK4CYiiIN6rUy5bTNW/prompt
        - response->"Extract JSON" zxftMeqPv_Rfjt9lpoE6Q/input
      visualData: 75.41310134929813/597.5596946626154/230/314//
    '[FIakP9wvdOt--2uEnOsmF]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        text: ""
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
        useBodyInput: true
        useHeadersInput: false
      visualData: 2595.697758480101/584.0983575127793/280/478/var(--node-color-4)/var(--node-color-4)
    '[FwIqZLCQSpOSDymXWM5_w]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" R7D93AmlRa1HXREBKWuVT/input
      visualData: 2837.5307178518065/-298.16619682276746/230/733//
    '[HD1rxQpwP9XrZwNWaaoLF]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 600
        text: Get comms team
      visualData: -407.119081962525/-603.5767147483365/830.1844441677374/462//
    '[IwTKZWYXuAna_v309uJ1p]:chat "Chat"':
      data:
        additionalParameters: []
        cache: false
        enableFunctionUse: false
        headers: []
        maxTokens: 1024
        modalitiesIncludeAudio: false
        modalitiesIncludeText: false
        model: gpt-4o-mini
        outputUsage: false
        parallelFunctionCalling: true
        reasoningEffort: medium
        stop: ""
        temperature: 0.5
        top_p: 1
        useAdditionalParametersInput: false
        useAsGraphPartialOutput: true
        useFrequencyPenaltyInput: false
        useMaxTokensInput: false
        useModelInput: false
        usePredictedOutput: false
        usePresencePenaltyInput: false
        useReasoningEffortInput: false
        useServerTokenCalculation: true
        useStop: false
        useStopInput: false
        useTemperatureInput: false
        useTopP: false
        useTopPInput: false
        useUseTopPInput: false
        useUserInput: false
      outgoingConnections:
        - response->"Extract JSON" Xk1Tw7lxeDqacNIT1bMNu/input
      visualData: 1675.1872958898177/-797.8105751312667/230/650//
    '[Iz7CjdEDhzVwzP3IMCiNB]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: PUT
        text: ""
        url: ""
        useBodyInput: true
        useHeadersInput: false
        useUrlInput: true
      visualData: 1200.204302969393/1070.7933071576385/280/764/var(--node-color-4)/var(--node-color-4)
    '[JHrBit8Twr_6qXeZbrGBY]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
        useBodyInput: true
        useHeadersInput: false
      visualData: 3833.951166041122/-1085.03834529198/280/731/var(--node-color-4)/var(--node-color-4)
    '[KJ0n7LZTEzcnuQDvmpaz4]:destructure "Destructure"':
      data:
        paths:
          - $.data[0].role
          - $.data[0].name
          - $.data[0].email
          - $.data[0].phone
          - $.data[0].documentId
      outgoingConnections:
        - match_0->"Text" ZEJe86ipFxX2Pgn0SpYkX/Role
        - match_1->"Text" ZEJe86ipFxX2Pgn0SpYkX/Spokesman
        - match_1->"Text" lTDwHyIvD8GtM-vUQWnZJ/Spokesman
        - match_2->"Text" ZEJe86ipFxX2Pgn0SpYkX/Email
        - match_2->"Text" lTDwHyIvD8GtM-vUQWnZJ/Email
        - match_3->"Text" ZEJe86ipFxX2Pgn0SpYkX/Phone
        - match_3->"Text" lTDwHyIvD8GtM-vUQWnZJ/Phone
      visualData: 44.4321762346097/-397.50808679427195/280/742//
    '[MtDsiI3cCAsx-7hUbKI3x]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" Rc0jBdKpTG96pQSBDxbGG/req_body
      visualData: 3497.248849485054/-285.7444356265221/280/733//
    '[N9YOhpmU3aaCsH0rF8pKv]:text "Text"':
      data:
        text: >-
          You are a crisis communications public relations (PR) professional
          with expertise in managing high-stakes reputational issues for
          organizations under pressure. Your role is to craft clear, empathetic,
          and timely messaging in response to crises such as product recalls,
          legal investigations, corporate scandals, or public backlash. You
          understand how to balance transparency with strategic framing,
          ensuring that all communications maintain public trust while
          protecting the credibility and long-term interests of the
          organization.


          You are skilled in writing holding statements, press releases, media responses, and internal communications that acknowledge issues, express responsibility or empathy as appropriate, and outline actionable next steps. Your tone is calm, authoritative, and human. You are able to quickly assess the reputational risk of a situation and shape messaging that aligns with stakeholder expectations, media dynamics, and legal considerations. Your goal is always to guide the organization through crisis with integrity, clarity, and control.



          You are a crisis communications PR professional working for {{Company}}. Your role is to manage and mitigate the impact of unexpected events on a company's reputation. This involves developing a strategic communication plan that addresses an emerging crisis situation.


          Effective crisis communication can help to rebuild trust and protect the organization's reputation in the long term.
      description: Role definition copy
      outgoingConnections:
        - output->"Text" 7qF2t1Yi79MSZu8rI-uqx/role
        - output->"Text" lTDwHyIvD8GtM-vUQWnZJ/role
        - output->"Text" vGUWgOtAY-i7sxm-WJ7eb/role
      visualData: -799.8233568715651/-124.75386288525205/330/774/var(--node-color-3)/var(--node-color-3)
    '[OJzyrdkuWTUnJ2Z6kZ8id]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 1212.017625965742
        text: Holding statement
      visualData: 1170.5306923100884/-1140.34087606407/3084.274329633249/727//
    '[OK0NZ-PUiRDUdGqBr-G7B]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
        useBodyInput: true
        useHeadersInput: false
      visualData: 2580.7766031033884/1465.5571267744588/280/757/var(--node-color-4)/var(--node-color-4)
    '[OzfcqLFo3Rn18m4eME4ys]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: GET
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/tone-of-voices
      outgoingConnections:
        - json->"Destructure" 1d_I3CvsuxquLLL25ctDS/object
      visualData: 457.2391728782959/-1034.0644176572957/280/755/var(--node-color-4)/var(--node-color-4)
    '[QG0B00OmZYN6SmNbPqPFN]:subGraph "Subgraph"':
      data:
        graphId: 8fhBx64QGpVrIT6XqLMrt
        useAsGraphPartialOutput: false
        useErrorOutput: false
      visualData: 2435.329311942938/213.03584107084606/330/736/var(--node-color-1)/var(--node-color-1)
    '[R7D93AmlRa1HXREBKWuVT]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Low",
              "crisis": "{{documentId}}"
            }
          }
      outgoingConnections:
        - output->"Extract JSON" MtDsiI3cCAsx-7hUbKI3x/input
      visualData: 3121.8095482593476/-285.18358716540865/330/733//
    '[Rc0jBdKpTG96pQSBDxbGG]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
        useBodyInput: true
        useHeadersInput: false
      visualData: 3834.40808075852/-297.74491862269815/280/733/var(--node-color-4)/var(--node-color-4)
    '[T3fMMBNOpcI3_YO2G_dq0]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Chat" IwTKZWYXuAna_v309uJ1p/prompt
        - output->"Chat" ar6v6LMNTaqxVthRlZG20/prompt
        - output->"Destructure" 8eGhuqG4kOM3xr2nwKYyt/object
      visualData: 1141.8836634176616/645.675489858645/280/327//
    '[WgkJpgv4h3JS9A4kEUrUx]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" iv4aQAxIg2qld3Kxgn1z4/input
      visualData: 2839.2490722742787/-692.7513138572966/230/738//
    '[Xk1Tw7lxeDqacNIT1bMNu]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Destructure" mcgQkCMsGk4tJBFjxhXTS/object
      visualData: 2017.605049893614/-732.2070674590149/280/658//
    '[ZEJe86ipFxX2Pgn0SpYkX]:text "Text"':
      data:
        text: >-
          You are a crisis comms PR agent and it is your job to write a short
          form output that would go out to the media to inform press that a full
          response is being worked on.


          This note is sent to the media prior to a full press release.


          The total length should be around a single paragraph.


          You will be passed a JSON object of 3 items, a High, Medium and Low risk scenario. Create one output holding statement for each of the 3 cases.


          Each response should take the form of a very short hight level description of the issue and an explanation that a full response is being prepared.


          Do not include a title for each response, just the detail copy.


          Start the response with todays date followed by a double line break.


          Each response should be written in this {{Tone}}.


          Use natural line breaks in the prose like \n.


          Each response should be signed off by the company PR spokesperson called {{Spokesman}} whose company role is {{Role}}.


          Ensure there is a double line break before this.


          Each response should include the contact details of {{Email}} and {{Phone}}.


          Ensure there is a double line break before this.


          Output a JSON object in the following format:


          {

          "data": [
              {
              "high": "Holding statement 1 content"
              }
              {
              "medium": "Holding statement 2 content"
              }
              {
              "low": "Holding statement 3 content"
              },
              "documentId": {{documentId}}
              ]
          }
      outgoingConnections:
        - output->"Chat" IwTKZWYXuAna_v309uJ1p/systemPrompt
      visualData: 1219.7425853143714/-811.3611668948562/330/756//
    '[_FHEz4jYaBQuCmdaw0JMt]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "detail": "{{input}}",
              "severity": "High",
              "crisis": "{{documentId}}"
            }
          }
      outgoingConnections:
        - output->"Extract JSON" 9Iuwg5De8EKZKDy_VVxuL/input
      visualData: 3121.352633541949/-1072.4770138346905/330/729//
    '[aH7e1n92lzWsB4u_WYg7o]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 1442.5022400149803
        text: Submit scenarios
      visualData: 1506.2455955164746/484.55290839124115/1466.7327042187135/763//
    '[ar6v6LMNTaqxVthRlZG20]:chat "Chat"':
      data:
        additionalParameters: []
        cache: false
        enableFunctionUse: false
        headers: []
        maxTokens: 4096
        modalitiesIncludeAudio: false
        modalitiesIncludeText: false
        model: gpt-4o-mini
        outputUsage: false
        parallelFunctionCalling: true
        reasoningEffort: medium
        stop: ""
        temperature: 0.5
        top_p: 1
        useAdditionalParametersInput: false
        useAsGraphPartialOutput: true
        useFrequencyPenaltyInput: false
        useMaxTokensInput: false
        useModelInput: false
        usePredictedOutput: false
        usePresencePenaltyInput: false
        useReasoningEffortInput: false
        useServerTokenCalculation: true
        useStop: false
        useStopInput: false
        useTemperatureInput: false
        useTopP: false
        useTopPInput: false
        useUseTopPInput: false
        useUserInput: false
      outgoingConnections:
        - response->"Extract JSON" foghClfs0RpllTUuFHt-Q/input
      visualData: 1755.9487182492176/127.59474371350385/230/734//
    '[b0p0ChjrySbYCsRXMJKin]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/holding-statements/
        useBodyInput: true
        useHeadersInput: false
      visualData: 3836.1264351809928/-662.0360561868131/280/732/var(--node-color-4)/var(--node-color-4)
    '[bapvQhzj8q1yxfOAprD2A]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Low"
            }
          }
      outgoingConnections:
        - output->"Http Call" OK0NZ-PUiRDUdGqBr-G7B/req_body
      visualData: 2069.843180647875/1180.518914963552/330/632//
    '[bqckyf2pK3-sULlIQFUw0]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 778.0042361189521
        text: Call in the content from Strapi
      visualData: -1562.392419493719/345.0199219358536/818.745871057165/431//
    '[cKjknBn_o8XEPm2EFP1C3]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: GET
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/
      outgoingConnections:
        - json->"Destructure" 7eyt6KkrPUqx01ZWsuWGh/object
      visualData: -1493.5441598227849/511.5981188035604/280/467/var(--node-color-4)/var(--node-color-4)
    '[foghClfs0RpllTUuFHt-Q]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Subgraph" QG0B00OmZYN6SmNbPqPFN/input
      visualData: 2077.8283189174444/160.61650614665933/280/735//
    '[hEOhNaRzVb931o5QF_P53]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Http Call" b0p0ChjrySbYCsRXMJKin/req_body
      visualData: 3498.9672039075263/-650.035573190637/280/732//
    '[iv4aQAxIg2qld3Kxgn1z4]:text "Text"':
      data:
        text: |-
          {
            "data": {
              "detail": "{{input}}",
              "severity": "Medium",
              "crisis": "{{documentId}}"
            }
          }
      outgoingConnections:
        - output->"Extract JSON" hEOhNaRzVb931o5QF_P53/input
      visualData: 3123.52790268182/-649.4747247295236/330/732//
    '[lTDwHyIvD8GtM-vUQWnZJ]:text "Text"':
      data:
        text: >-
          Your role is {{role}}


          It is your job to write longform output for a press release that would go out to the media to inform them of the crisis.


          You will be passed a JSON object of 3 items, a High risk scenario, a Medium risk scenario and a Low risk scenario. Create one output press release for each of the 3 cases.


          Each response should take the form of a description of the issue including details of the projected scenario and details of how the business intends to respond to that crisis.


          Start the response with todays date followed by a line break.


          Each response should be written in this {{Tone}}.


          Use natural line breaks in the prose like \n.


          Each response should be signed off by the company PR spokesperson called {{Spokesman}}. Ensure there is a line break before this.


          Each press release should include the contact details of {{Email}} and {{Phone}} at the bottom.


          Ensure there is a double line break before this.


          Output a JSON object in this format:


          {
              "high": "High risk scenario press release content",
              "medium": "Medium risk scenario press release content",
              "low": "Low risk scenario press release content",
              "documentId": {{documentId}}
          }
      outgoingConnections:
        - output->"Chat" ar6v6LMNTaqxVthRlZG20/systemPrompt
      visualData: 1103.5337879969013/119.73912088298889/330/737//
    '[mcgQkCMsGk4tJBFjxhXTS]:destructure "Destructure"':
      data:
        paths:
          - $.data[0].high
          - $.data[1].medium
          - $.data[2].low
          - $.documentId
        text: ""
      outgoingConnections:
        - match_0->"Code" p-sMAbp17d-0PBwEbF7H0/input1
        - match_1->"Code" WgkJpgv4h3JS9A4kEUrUx/input1
        - match_2->"Code" FwIqZLCQSpOSDymXWM5_w/input1
        - match_3->"Text" R7D93AmlRa1HXREBKWuVT/documentId
        - match_3->"Text" _FHEz4jYaBQuCmdaw0JMt/documentId
        - match_3->"Text" iv4aQAxIg2qld3Kxgn1z4/documentId
      visualData: 2406.8901435626326/-744.8168319243129/280/655//
    '[o747HrcX1XEo2Bl_seAFB]:text "Text"':
      data:
        text: https://devoted-cats-3d3ab24394.strapiapp.com/api/crises/{{input}}
      outgoingConnections:
        - output->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/url
      visualData: 788.481179864815/1049.9688605083722/330/765//
    '[ohHO4UgYHNIOfR1EepUeK]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: POST
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/scenarios/
        useBodyInput: true
        useHeadersInput: false
      visualData: 2591.1709390135634/1020.7631520096724/280/758/var(--node-color-4)/var(--node-color-4)
    '[p-sMAbp17d-0PBwEbF7H0]:code "Code"':
      data:
        code: >-
          // This is a code node, you can write and JS in here and it will be
          executed.

          // Inputs are accessible via an object `inputs` and data is typed (i.e. inputs.foo.type, inputs.foo.value)

          // Return an object with named outputs that match the output names specified in the node's config.

          // Output values must by typed as well (e.g. { bar: { type: 'string', value: 'bar' } }


          const inputText = inputs.input1.value;


          // Replace real line breaks (\n or \r\n) with the literal string "\n"

          const escapedText = inputText.replace(/\r?\n/g, '\\n');


          return {
            output1: {
              type: 'string',
              value: escapedText
            }
          };
        inputNames: input1
        outputNames: output1
      outgoingConnections:
        - output1->"Text" _FHEz4jYaBQuCmdaw0JMt/input
      visualData: 2837.073803134408/-1085.4596234920493/230/728//
    '[p5Qh0kyc_g5eWylv3780o]:comment "Comment"':
      data:
        backgroundColor: rgba(0,0,0,0.05)
        color: rgba(255,255,255,1)
        height: 759.5900047963021
        text: Define the severity
      visualData: 228.2795777643335/957.2371139791325/1354.293098690909/638//
    '[qic03BQQlMsFH93Oh0O67]:subGraph "Subgraph"':
      data:
        graphId: GHgi_Qdv5HEfN9Cwup8cY
        useAsGraphPartialOutput: false
        useErrorOutput: false
      outgoingConnections:
        - output->"Http Call" Iz7CjdEDhzVwzP3IMCiNB/req_body
      visualData: 589.6662804897164/1310.5427193914584/330/435/var(--node-color-1)/var(--node-color-1)
    '[tmcvLEtdnIE8PFCGXhgrq]:text "Text"':
      data:
        text: |
          {
            "data": {
              "detail": "{{input}}",
              "severity": "High"
            }
          }
      outgoingConnections:
        - output->"Http Call" FIakP9wvdOt--2uEnOsmF/req_body
      visualData: 2102.44394983333/539.0317358120365/330/627//
    '[vGUWgOtAY-i7sxm-WJ7eb]:text "Text"':
      data:
        text: >
          Your role is {{role}}


          You should geneate an expanded description of the crisis situation described in the prompt. The length should run to around 3 or 4 paragraphs with natural line breaks.


          Also generate a concise title description in fewer than 10 words.


          Do not adjust the severity at this stage, leave that as Unknown.


          Output a JSON object in the following format:


          {

          "data": {
              "severity": "Unknown",
              "title": "Crisis title",
              "date": "Crisis date",
              "description": "Text of crisis"
              }
          }
      outgoingConnections:
        - output->"Chat" DOH9j6ldq5b44D5MY0YHO/systemPrompt
      visualData: -322.6556466888078/48.67946006593419/330/773//
    '[xQfq8BV4M9MDHCKcpL6vJ]:httpCall "Http Call"':
      data:
        body: ""
        errorOnNon200: true
        headers: >-
          {
            "Content-Type": "application/json",
            "Authorization": "Bearer 2c8cbceae2a59257bc63e614929f26a71fa400bb174bf92506cb50149746d46d8455af51fd3c46f51ba9384058c62ab24ba3228b3ccb24d2faa1ef3a869c750020b77b3cae9f10ee68280ac7049b8d92f902f5adff8e48a93d89202900be018c0a978360b805e2ea7b7d0d8d686d2d7a26784677e55d4e78b186579af6b8cddf"
          }
        method: GET
        url: https://devoted-cats-3d3ab24394.strapiapp.com/api/comms-teams
      outgoingConnections:
        - json->"Destructure" KJ0n7LZTEzcnuQDvmpaz4/object
      visualData: -341.409286403287/-502.1614298576312/280/463/var(--node-color-4)/var(--node-color-4)
    '[zxftMeqPv_Rfjt9lpoE6Q]:extractJson "Extract JSON"':
      outgoingConnections:
        - output->"Subgraph" qic03BQQlMsFH93Oh0O67/input
      visualData: 282.2465755816026/1130.5676473294723/280/434//
