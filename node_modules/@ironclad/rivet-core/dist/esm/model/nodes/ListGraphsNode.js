import { NodeImpl } from '../NodeImpl.js';
import { dedent, newId } from '../../utils/index.js';
import { nodeDefinition } from '../NodeDefinition.js';
export class ListGraphsNodeImpl extends NodeImpl {
    static create() {
        return {
            id: newId(),
            type: 'listGraphs',
            title: 'List Graphs',
            visualData: { x: 0, y: 0, width: 250 },
            data: {},
        };
    }
    getInputDefinitions() {
        return [];
    }
    getOutputDefinitions() {
        return [
            {
                id: 'graphs',
                title: 'Graphs',
                dataType: 'graph-reference[]',
            },
            {
                id: 'graph-names',
                title: 'Graph Names',
                dataType: 'string[]',
            },
        ];
    }
    static getUIData() {
        return {
            infoBoxBody: dedent `
        Lists all graphs in the project.
      `,
            infoBoxTitle: 'List Graphs Node',
            contextMenuTitle: 'List Graphs',
            group: ['Input/Output'],
        };
    }
    getEditors() {
        return [];
    }
    async process(_inputs, context) {
        const graphs = Object.values(context.project.graphs);
        return {
            ['graphs']: {
                type: 'graph-reference[]',
                value: graphs.map((graph) => ({
                    graphId: graph.metadata.id ?? '',
                    graphName: graph.metadata.name ?? '',
                })),
            },
            ['graph-names']: {
                type: 'string[]',
                value: graphs.map((graph) => graph.metadata.name ?? ''),
            },
        };
    }
}
export const listGraphsNode = nodeDefinition(ListGraphsNodeImpl, 'List Graphs');
