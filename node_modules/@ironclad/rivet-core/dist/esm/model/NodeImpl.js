import { IF_PORT, } from './NodeBase.js';
export class NodeImpl {
    chartNode;
    constructor(chartNode) {
        this.chartNode = chartNode;
    }
    get id() {
        return this.chartNode.id;
    }
    get type() {
        return this.chartNode.type;
    }
    get title() {
        return this.chartNode.title;
    }
    get visualData() {
        return this.chartNode.visualData;
    }
    get data() {
        return this.chartNode.data;
    }
    getInputDefinitionsIncludingBuiltIn(connections, nodes, project) {
        const ports = [...this.getInputDefinitions(connections, nodes, project)];
        if (this.chartNode.isConditional) {
            ports.push(IF_PORT);
        }
        return ports;
    }
    getEditors(_context) {
        return [];
    }
    getBody(_context) {
        return undefined;
    }
}
export class PluginNodeImplClass extends NodeImpl {
    impl;
    constructor(chartNode, impl) {
        super(chartNode);
        this.impl = impl;
    }
    getInputDefinitions(connections, nodes, project) {
        return this.impl.getInputDefinitions(this.data, connections, nodes, project);
    }
    getOutputDefinitions(connections, nodes, project) {
        return this.impl.getOutputDefinitions(this.data, connections, nodes, project);
    }
    process(inputData, context) {
        return this.impl.process(this.data, inputData, context);
    }
    getEditors(context) {
        return this.impl.getEditors(this.data, context);
    }
    getBody(context) {
        return this.impl.getBody(this.data, context);
    }
}
