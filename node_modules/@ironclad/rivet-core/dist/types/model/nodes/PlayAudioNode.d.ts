import { type ChartNode, type NodeInputDefinition, type NodeOutputDefinition } from '../NodeBase.js';
import { NodeImpl, type NodeUIData } from '../NodeImpl.js';
import { type EditorDefinition, type Inputs, type InternalProcessContext, type Outputs } from '../../index.js';
export type PlayAudioNode = ChartNode<'playAudio', PlayAudioNodeData>;
type PlayAudioNodeData = {};
export declare class PlayAudioNodeImpl extends NodeImpl<PlayAudioNode> {
    static create(): PlayAudioNode;
    getInputDefinitions(): NodeInputDefinition[];
    getOutputDefinitions(): NodeOutputDefinition[];
    getEditors(): EditorDefinition<PlayAudioNode>[];
    static getUIData(): NodeUIData;
    process(inputData: Inputs, context: InternalProcessContext): Promise<Outputs>;
}
export declare const playAudioNode: import("../NodeDefinition.js").NodeDefinition<PlayAudioNode>;
export {};
