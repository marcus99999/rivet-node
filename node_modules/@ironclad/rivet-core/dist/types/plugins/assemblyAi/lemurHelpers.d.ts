import { AssemblyAI } from 'assemblyai';
import type { LemurBaseParams } from 'assemblyai';
import { type Inputs, type InternalProcessContext, type PortId } from '../../index.js';
export declare function getClient(context: InternalProcessContext): AssemblyAI;
export declare function getLemurParams(inputs: Inputs, editorData: LemurNodeData): LemurBaseParams;
export declare const lemurInputDefinitions: readonly [{
    readonly id: PortId;
    readonly dataType: readonly ["string", "string[]", "any", "any[]"];
    readonly title: "Transcript IDs";
}, {
    readonly id: PortId;
    readonly dataType: readonly ["string"];
    readonly title: "Input Text";
}];
export declare const lemurEditorDefinitions: readonly [{
    readonly type: "dropdown";
    readonly label: "Final Model";
    readonly dataKey: "final_model";
    readonly options: readonly [{
        readonly value: "anthropic/claude-3-5-sonnet";
        readonly label: "Claude 3.5 Sonnet (on Anthropic)";
    }, {
        readonly value: "anthropic/claude-3-opus";
        readonly label: "Claude 3 Opus (on Anthropic)";
    }, {
        readonly value: "anthropic/claude-3-haiku";
        readonly label: "Claude 3 Haiku (on Anthropic)";
    }, {
        readonly value: "anthropic/claude-3-sonnet";
        readonly label: "Claude 3 Sonnet (on Anthropic)";
    }, {
        readonly value: "anthropic/claude-2-1";
        readonly label: "Claude 2.1 (on Anthropic)";
    }, {
        readonly value: "anthropic/claude-2";
        readonly label: "Claude 2.1 (on Anthropic)";
    }, {
        readonly value: "default";
        readonly label: "Default";
    }, {
        readonly value: "anthropic/claude-instant-1-2";
        readonly label: "Claude Instant 1.2 (on Anthropic)";
    }, {
        readonly value: "basic";
        readonly label: "Basic";
    }, {
        readonly value: "assemblyai/mistral-7b";
        readonly label: "Mistral 7B (hosted by AssemblyAI)";
    }];
}, {
    readonly type: "number";
    readonly label: "Maximum Output Size";
    readonly dataKey: "max_output_size";
}, {
    readonly type: "number";
    readonly label: "Temperature";
    readonly dataKey: "temperature";
    readonly min: 0;
    readonly max: 1;
}];
export type FinalModel = 'anthropic/claude-3-5-sonnet' | 'anthropic/claude-3-opus' | 'anthropic/claude-3-haiku' | 'anthropic/claude-3-sonnet' | 'anthropic/claude-2-1' | 'anthropic/claude-2' | 'default' | 'anthropic/claude-instant-1-2' | 'basic' | 'assemblyai/mistral-7b';
export type LemurNodeData = {
    context?: string;
    final_model?: FinalModel;
    max_output_size?: number;
    temperature?: number;
};
