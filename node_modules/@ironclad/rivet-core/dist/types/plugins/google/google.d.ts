export type GoogleModelDeprecated = {
    maxTokens: number;
    cost: {
        prompt: number;
        completion: number;
    };
    displayName: string;
};
export declare const googleModelsDeprecated: {
    'gemini-pro': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-pro-vision': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
};
export type GoogleModelsDeprecated = keyof typeof googleModelsDeprecated;
export declare const generativeAiGoogleModels: {
    'gemini-2.0-flash-001': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-2.0-pro-exp-02-05': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-2.0-flash-lite-preview-02-05': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-2.0-flash-thinking-exp-01-21': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-1.5-flash': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-1.5-pro': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-1.0-pro': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
    'gemini-1.0-pro-vision': {
        maxTokens: number;
        cost: {
            prompt: number;
            completion: number;
        };
        displayName: string;
    };
};
export type GenerativeAiGoogleModel = keyof typeof generativeAiGoogleModels;
export declare const googleModelOptionsDeprecated: {
    value: string;
    label: string;
}[];
export declare const generativeAiOptions: {
    value: string;
    label: string;
}[];
export interface GoogleChatMessage {
    role: 'user' | 'assistant';
    parts: ({
        text: string;
    } | {
        inline_data: {
            mime_type: string;
            data: string;
        };
    })[];
}
export type ChatCompletionOptions = {
    project: string;
    location: string;
    applicationCredentials: string;
    model: GoogleModelsDeprecated;
    prompt: GoogleChatMessage[];
    max_output_tokens: number;
    temperature?: number;
    top_p?: number;
    top_k?: number;
    signal?: AbortSignal;
};
export type ChatCompletionChunk = {
    completion: string;
    finish_reason: 'FINISH_REASON_UNSPECIFIED' | 'FINISH_REASON_STOP' | 'FINISH_REASON_MAX_TOKENS' | 'FINISH_REASON_SAFETY' | 'FINISH_REASON_RECITATION' | 'FINISH_REASON_OTHER' | undefined;
    model: string;
};
export type StreamGenerativeAiOptions = {
    apiKey: string;
    model: GenerativeAiGoogleModel;
    systemPrompt: string | undefined;
    prompt: GoogleChatMessage[];
    maxOutputTokens: number;
    temperature: number | undefined;
    topP: number | undefined;
    topK: number | undefined;
    signal?: AbortSignal;
};
export declare function streamGenerativeAi({ apiKey, model, systemPrompt, prompt, maxOutputTokens, temperature, topP, topK, signal, }: StreamGenerativeAiOptions): AsyncGenerator<ChatCompletionChunk>;
export declare function streamChatCompletions({ project, location, applicationCredentials, model, signal, max_output_tokens, temperature, top_p, top_k, prompt, }: ChatCompletionOptions): AsyncGenerator<ChatCompletionChunk>;
