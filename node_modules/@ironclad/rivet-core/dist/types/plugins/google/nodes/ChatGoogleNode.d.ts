import { type ChartNode, type ChatMessage, type Inputs, type PluginNodeImpl } from '../../../index.js';
import { type GenerativeAiGoogleModel } from '../google.js';
export type ChatGoogleNode = ChartNode<'chatGoogle', ChatGoogleNodeData>;
export type ChatGoogleNodeConfigData = {
    model: GenerativeAiGoogleModel;
    temperature: number;
    useTopP: boolean;
    top_p?: number;
    top_k?: number;
    maxTokens: number;
};
export type ChatGoogleNodeData = ChatGoogleNodeConfigData & {
    useModelInput: boolean;
    useTemperatureInput: boolean;
    useTopPInput: boolean;
    useTopKInput: boolean;
    useUseTopPInput: boolean;
    useMaxTokensInput: boolean;
    /** Given the same set of inputs, return the same output without hitting GPT */
    cache: boolean;
    useAsGraphPartialOutput?: boolean;
};
export declare const ChatGoogleNodeImpl: PluginNodeImpl<ChatGoogleNode>;
export declare const chatGoogleNode: import("../../../index.js").PluginNodeDefinition<ChatGoogleNode>;
export declare function getChatGoogleNodeMessages(inputs: Inputs): {
    messages: ChatMessage[];
};
