import { type CombinedDataset, type Dataset, type DatasetId, type DatasetMetadata, type DatasetProvider, type DatasetRow, type ProjectId } from '@ironclad/rivet-core';
export declare class DebuggerDatasetProvider implements DatasetProvider {
    listeners: Record<string, (payload: any) => void>;
    onrequest: ((type: string, data: any) => void) | undefined;
    handleResponse(type: string, data: any): void;
    makeRequestAndWaitForResponse<T>(type: `datasets:${string}`, data: any): Promise<T>;
    getDatasetMetadata(id: DatasetId): Promise<DatasetMetadata | undefined>;
    getDatasetsForProject(projectId: ProjectId): Promise<DatasetMetadata[]>;
    getDatasetData(id: DatasetId): Promise<Dataset>;
    putDatasetData(id: DatasetId, data: Dataset): Promise<void>;
    putDatasetRow(id: DatasetId, row: DatasetRow): Promise<void>;
    putDatasetMetadata(metadata: DatasetMetadata): Promise<void>;
    clearDatasetData(id: DatasetId): Promise<void>;
    deleteDataset(id: DatasetId): Promise<void>;
    knnDatasetRows(datasetId: DatasetId, k: number, vector: number[]): Promise<(DatasetRow & {
        distance?: number | undefined;
    })[]>;
    exportDatasetsForProject(projectId: ProjectId): Promise<CombinedDataset[]>;
}
