import { InMemoryDatasetProvider, type CombinedDataset, type Dataset, type DatasetId, type DatasetMetadata, type DatasetRow } from '@ironclad/rivet-core';
export type NodeDatasetProviderOptions = {
    /**
     * If true, then modifications to the dataset during graph execution will save to the file that the dataset was loaded from.
     * Saves will happen after each modification, so this option should only be used for small datasets.
     */
    save?: boolean;
    /**
     * If true, then the dataset file must exist already, and will error if it does not. If false (default),
     * then the dataset file will be created if it doesn't exist.
     */
    requireFile?: boolean;
};
export declare class NodeDatasetProvider extends InMemoryDatasetProvider {
    #private;
    constructor(datasets: CombinedDataset[], options?: {
        filePath?: string;
        save?: boolean;
    });
    static fromDatasetsFile(datasetsFilePath: string, options?: NodeDatasetProviderOptions): Promise<NodeDatasetProvider>;
    static fromProjectFile(projectFilePath: string, options?: NodeDatasetProviderOptions): Promise<NodeDatasetProvider>;
    save(): Promise<void>;
    putDatasetData(id: DatasetId, data: Dataset): Promise<void>;
    putDatasetMetadata(metadata: DatasetMetadata): Promise<void>;
    putDatasetRow(id: DatasetId, row: DatasetRow): Promise<void>;
    clearDatasetData(id: DatasetId): Promise<void>;
    deleteDataset(id: DatasetId): Promise<void>;
}
