{"version":3,"file":"dataset.mjs","sources":["dataset.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { globalGentraceApiV2 } from \"./init\";\n/**\n * Retrieves datasets from the Gentrace API.\n * @async\n * @param {Object} [params] - Optional parameters to filter the datasets.\n * @param {string} [params.pipelineSlug] - The slug of the pipeline to filter datasets by.\n * @param {string} [params.pipelineId] - The ID of the pipeline to filter datasets by.\n * @param {boolean} [params.archived] - Filter datasets by archived status.\n * @returns {Promise<Array<DatasetV2>>} - A promise that resolves to an array of datasets.\n * @throws {Error} - Throws an error if the Gentrace API key is not initialized.\n */\nexport const getDatasets = (params) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    if (!globalGentraceApiV2) {\n        throw new Error(\"Gentrace API key not initialized. Call init() first.\");\n    }\n    if (!(params === null || params === void 0 ? void 0 : params.pipelineSlug) && !(params === null || params === void 0 ? void 0 : params.pipelineId)) {\n        throw new Error(\"Either pipelineSlug or pipelineId must be defined.\");\n    }\n    const response = yield globalGentraceApiV2.v2DatasetsGet(params === null || params === void 0 ? void 0 : params.pipelineSlug, params === null || params === void 0 ? void 0 : params.pipelineId, params === null || params === void 0 ? void 0 : params.archived);\n    return (_a = response.data.data) !== null && _a !== void 0 ? _a : [];\n});\n/**\n * Creates a new dataset in the Gentrace API.\n * @async\n * @param {CreateDatasetV2} payload - The dataset creation payload.\n * @returns {Promise<DatasetV2>} - A promise that resolves to the created dataset.\n * @throws {Error} - Throws an error if the Gentrace API key is not initialized.\n */\nexport const createDataset = (payload) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!globalGentraceApiV2) {\n        throw new Error(\"Gentrace API key not initialized. Call init() first.\");\n    }\n    const response = yield globalGentraceApiV2.v2DatasetsPost(payload);\n    return response.data;\n});\n/**\n * Retrieves a single dataset from the Gentrace API.\n * @async\n * @param {string} id - The ID of the dataset to retrieve.\n * @returns {Promise<DatasetV2>} - A promise that resolves to the retrieved dataset.\n * @throws {Error} - Throws an error if the Gentrace API key is not initialized.\n */\nexport const getDataset = (id) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!globalGentraceApiV2) {\n        throw new Error(\"Gentrace API key not initialized. Call init() first.\");\n    }\n    const response = yield globalGentraceApiV2.v2DatasetsIdGet(id);\n    return response.data;\n});\n/**\n * Updates a dataset in the Gentrace API.\n * @async\n * @param {string} id - The ID of the dataset to update.\n * @param {UpdateDatasetV2} payload - The dataset update payload.\n * @returns {Promise<DatasetV2>} - A promise that resolves to the updated dataset.\n * @throws {Error} - Throws an error if the Gentrace API key is not initialized.\n */\nexport const updateDataset = (id, payload) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!globalGentraceApiV2) {\n        throw new Error(\"Gentrace API key not initialized. Call init() first.\");\n    }\n    const response = yield globalGentraceApiV2.v2DatasetsIdPost(id, payload);\n    return response.data;\n});\n"],"names":["this"],"mappings":"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"}